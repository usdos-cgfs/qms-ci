{
  "version": 3,
  "sources": ["../../../src/common/router.js", "../../../src/components/tabs/tabs.js", "../../../src/common/data-table.js", "../../../src/sal/infrastructure/entity_utilities.js", "../../../src/sal/entities/People.js", "../../../src/sal/primitives/entity.js", "../../../src/sal/primitives/validation_error.js", "../../../src/sal/fields/BaseField.js", "../../../src/sal/components/fields/BaseFieldModule.js", "../../../src/sal/components/fields/BlobModule.js", "../../../src/sal/components/fields/CheckboxModule.js", "../../../src/sal/components/fields/DateModule.js", "../../../src/sal/components/fields/LookupModule.js", "../../../src/sal/components/fields/PeopleModule.js", "../../../src/sal/components/fields/SearchSelectModule.js", "../../../src/sal/components/fields/SelectModule.js", "../../../src/sal/components/fields/TextAreaModule.js", "../../../src/sal/components/fields/TextModule.js", "../../../src/sal/fields/CheckboxField.js", "../../../src/sal/fields/DateField.js", "../../../src/sal/fields/LookupField.js", "../../../src/sal/infrastructure/sal.js", "../../../src/sal/fields/PeopleField.js", "../../../src/sal/fields/SelectField.js", "../../../src/sal/fields/TextAreaField.js", "../../../src/sal/fields/TextField.js", "../../../src/sal/primitives/constrained_entity.js", "../../../src/sal/primitives/domain_error.js", "../../../src/sal/entities/SitePage.js", "../../../src/env.js", "../../../src/sal/infrastructure/knockout_extensions.js", "../../../src/sal/infrastructure/register_components.js", "../../../src/sal/infrastructure/authorization.js", "../../../src/constants.js", "../../../src/entities/action.js", "../../../src/infrastructure/store.js", "../../../src/entities/plan.js", "../../../src/entities/business-office.js", "../../../src/entities/notification.js", "../../../src/entities/record-source.js", "../../../src/entities/rejection.js", "../../../src/entities/root-cause-why.js", "../../../src/entities/support-doc.js", "../../../src/sal/shared/result.js", "../../../src/sal/orm.js", "../../../src/infrastructure/app-db-context.js", "../../../src/sal/components/modal/ModalDialogTemplate.js", "../../../src/sal/components/modal/modalDialog.js", "../../../src/sal/components/forms/baseForm.js", "../../../src/sal/enums/display_modes.js", "../../../src/sal/components/forms/default/defaultForm.js", "../../../src/sal/components/forms/default/defaultUploadForm.js", "../../../src/sal/infrastructure/form_manager.js", "../../../src/notification-templates/pending-problem-approval.js", "../../../src/services/authorization.js", "../../../src/services/plan-service.js", "../../../src/notification-templates/developing-action-plan.js", "../../../src/notification-templates/pending-plan-approval.js", "../../../src/notification-templates/implementing-action-plan.js", "../../../src/notification-templates/pending-implementation-approval.js", "../../../src/notification-templates/pending-effectiveness-submission.js", "../../../src/notification-templates/pending-effectiveness-approval.js", "../../../src/notification-templates/actions-templates.js", "../../../src/value-objects/task.js", "../../../src/services/tasks-service.js", "../../../src/services/notifications-service.js", "../../../src/services/actions-service.js", "../../../src/forms/actions/edit/edit-action-form.js", "../../../src/forms/plan/new/new-plan-form.js", "../../../src/forms/plan/cancel/cancel-plan-form.js", "../../../src/components/print/print.js", "../../../src/pages/app/app.js"],
  "sourcesContent": ["const state = {};\r\n\r\nwindow.history.replaceState({}, \"\", document.location.href);\r\n\r\nexport function setUrlParam(param, newVal) {\r\n  // No need to reset the param if it hasn't changed\r\n  if (getUrlParam(param) == newVal) return;\r\n\r\n  const search = window.location.search;\r\n  //var urlParams = new URLSearchParams(queryString);\r\n\r\n  const regex = new RegExp(\"([?;&])\" + param + \"[^&;]*[;&]?\");\r\n  const query = search.replace(regex, \"$1\").replace(/&$/, \"\");\r\n\r\n  const urlParams =\r\n    (query.length > 2 ? query + \"&\" : \"?\") +\r\n    (newVal ? param + \"=\" + newVal : \"\");\r\n\r\n  state[param] = newVal;\r\n  window.history.pushState(state, \"\", urlParams.toString());\r\n}\r\n\r\nexport function getUrlParam(param) {\r\n  const results = new RegExp(\"[?&]\" + param + \"=([^&#]*)\").exec(\r\n    window.location.href\r\n  );\r\n  if (results == null) {\r\n    return null;\r\n  } else {\r\n    return decodeURI(results[1]) || 0;\r\n  }\r\n}\r\n", "import { getUrlParam, setUrlParam } from \"../../common/router.js\";\r\n\r\n// const urlParam = \"Tab\";\r\n\r\nexport class TabsModule {\r\n  constructor(tabOpts, urlParam = \"tab\") {\r\n    this.urlParam = urlParam;\r\n    ko.utils.arrayPushAll(this.tabOpts, tabOpts);\r\n    this.selectedTab.subscribe(this.tabChangeHandler);\r\n    window.addEventListener(\"popstate\", this.popStateHandler);\r\n\r\n    // Set default tab\r\n    const defaultTabId = getUrlParam(urlParam);\r\n    if (defaultTabId) {\r\n      this.selectById(defaultTabId);\r\n    }\r\n  }\r\n\r\n  tabOpts = ko.observableArray();\r\n  selectedTab = ko.observable();\r\n\r\n  visibleTabs = ko.pureComputed(() => {\r\n    const visibleTabs = this.tabOpts().filter((tab) => tab.visible());\r\n    return visibleTabs;\r\n  });\r\n\r\n  isSelected = (tab) => {\r\n    return tab.id == this.selectedTab()?.id;\r\n  };\r\n\r\n  clickTabLink = (tab) => {\r\n    this.selectedTab(tab);\r\n  };\r\n\r\n  selectTab = (tab) => this.selectById(tab?.id);\r\n\r\n  selectById = (tabId) => {\r\n    const tabById =\r\n      this.tabOpts().find((tab) => tab.id == tabId) ?? this.getDefaultTab();\r\n    this.selectedTab(tabById);\r\n  };\r\n\r\n  selectDefault = () => {\r\n    this.selectedTab(this.getDefaultTab());\r\n  };\r\n\r\n  getDefaultTab = () => this.visibleTabs()[0];\r\n\r\n  tabChangeHandler = (newTab) => {\r\n    if (newTab) setUrlParam(this.urlParam, newTab.id);\r\n    // window.history.pushState({ tab: { id: newTab.id } }, \"\", newTab.id);\r\n  };\r\n\r\n  popStateHandler = (event) => {\r\n    if (event.state) {\r\n      if (event.state[this.urlParam])\r\n        this.selectById(event.state[this.urlParam]);\r\n    }\r\n  };\r\n}\r\n\r\nexport class Tab {\r\n  constructor({ urlKey, linkText, template, visible = true }) {\r\n    this.id = urlKey;\r\n    this.linkText = linkText;\r\n    this.template = template;\r\n    this.isVisible = visible;\r\n  }\r\n\r\n  visible = ko.pureComputed(() => {\r\n    return ko.unwrap(this.isVisible);\r\n  });\r\n}\r\n", "export function makeDataTable(tableId) {\r\n  tableId = tableId.startsWith(\"#\") ? tableId.substring(1) : tableId;\r\n  const elm = document.getElementById(tableId);\r\n  if (!elm) return;\r\n  elm.classList.add(\"table\", \"table-striped\", \"table-hover\", \"w-100\");\r\n  return new DataTable(elm, {\r\n    dom:\r\n      \"<'ui stackable grid'\" +\r\n      \"<'row'\" +\r\n      \"<'eight wide column'l>\" +\r\n      \"<'right aligned eight wide column'f>\" +\r\n      \">\" +\r\n      \"<'row dt-table'\" +\r\n      \"<'sixteen wide column'tr>\" +\r\n      \">\" +\r\n      \"<'row'\" +\r\n      \"<'six wide column'i>\" +\r\n      \"<'d-flex justify-content-center'B>\" +\r\n      \"<'right aligned six wide column'p>\" +\r\n      \">\" +\r\n      \">\",\r\n    buttons: [\"copy\", \"csv\", \"excel\", \"pdf\", \"print\"],\r\n    bSortCellsTop: true,\r\n    order: [[4, \"desc\"]],\r\n    iDisplayLength: 25,\r\n    deferRender: true,\r\n    bDestroy: true,\r\n    // columnDefs: [{ width: \"10%\", targets: 0 }],\r\n    initComplete: function () {\r\n      this.api()\r\n        .columns()\r\n        .every(function () {\r\n          var column = this;\r\n          var tbl = $(column.header()).closest(\"table\");\r\n          // Set the row we want our filter to show up in\r\n          // var filterCell = tbl.find(\"thead tr:eq(1) th\").eq(column.index());\r\n          var filterCell = tbl.find(\"thead tr:eq(1) th\").eq(column.index());\r\n\r\n          var select = $(\r\n            '<search-select class=\"\"><option value=\"\"></option></search-select>'\r\n          );\r\n          switch (filterCell.attr(\"data-filter\")) {\r\n            case \"select-filter\":\r\n              select.attr(\"multiple\", \"true\");\r\n            case \"single-select-filter\":\r\n              select.appendTo(filterCell.empty()).on(\"change\", function () {\r\n                var vals = this.selectedOptions.map((opt) => opt.value);\r\n                if (!vals) {\r\n                  vals = [];\r\n                } else {\r\n                  vals = vals.map(function (value) {\r\n                    return value\r\n                      ? \"^\" + $.fn.dataTable.util.escapeRegex(value) + \"$\"\r\n                      : null;\r\n                  });\r\n                }\r\n                var val = vals.join(\"|\");\r\n                column.search(val, true, false).draw();\r\n              });\r\n              // Populate our select option values based on column cells.\r\n              let options = \"\";\r\n              column\r\n                .data()\r\n                .unique()\r\n                .sort()\r\n                .each(function (optionText, j) {\r\n                  // first try to parse html\r\n                  try {\r\n                    let parsedElement = $(optionText);\r\n\r\n                    if (parsedElement.is(\"a\")) {\r\n                      optionText = parsedElement.text();\r\n                    }\r\n                  } catch (e) {\r\n                    //Nothing to do here, it's not valid html\r\n                  }\r\n\r\n                  options += `<option value=\"${optionText}\" title=\"${optionText}\">${optionText}</option>`;\r\n                });\r\n\r\n              select.append(options);\r\n              break;\r\n            case \"search-filter\":\r\n              $(\r\n                '<div class=\"\">' +\r\n                  '<input class=\"form-control\" type=\"text\" placeholder=\"Search...\" style=\"width: 100%\"/>' +\r\n                  \"</div>\"\r\n              )\r\n                .appendTo(filterCell.empty())\r\n                .on(\"keyup change clear\", function () {\r\n                  const inputSearchText =\r\n                    this.getElementsByTagName(\"input\")[0].value;\r\n                  if (column.search() !== inputSearchText) {\r\n                    column.search(inputSearchText).draw();\r\n                  }\r\n                });\r\n              break;\r\n            case \"bool-filter\":\r\n              // Does this row contain data?\r\n              var checkbox = $('<input type=\"checkbox\"></input>')\r\n                .appendTo(filterCell.empty())\r\n                .change(function () {\r\n                  if (this.checked) {\r\n                    column.search(\"true\").draw();\r\n                  } else {\r\n                    column.search(\"\").draw();\r\n                  }\r\n                });\r\n              break;\r\n            default:\r\n          }\r\n          if (filterCell.attr(\"clear-width\")) {\r\n            // Clear width to contents\r\n            tbl.find(\"thead tr:eq(0) th\").eq(column.index()).width(\"\");\r\n          }\r\n        });\r\n    },\r\n  });\r\n}\r\n", "export const sortByTitle = (a, b) => {\r\n  if (a.Title > b.Title) {\r\n    return 1;\r\n  }\r\n  if (a.Title < b.Title) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const sortByField = (field) => (a, b) => {\r\n  if (a[field] > b[field]) {\r\n    return 1;\r\n  }\r\n  if (a[field] < b[field]) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const createNewRequestTitle = () => {\r\n  const ts = new Date();\r\n  return ts.format(\"yyMMdd\") + \"-\" + (ts.getTime() % 100000);\r\n};\r\n", "export class People {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    Email = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n  }) {\r\n    this.ID = ID;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n    this.LoginName = LoginName != \"\" ? LoginName : null;\r\n    this.Email = Email;\r\n    this.IsGroup = IsGroup;\r\n    // Has the user data been fetched? Used for binding handlers.\r\n    this.IsEnsured = IsEnsured;\r\n  }\r\n\r\n  ID = null;\r\n  Title = null;\r\n  LoginName = null;\r\n  LookupValue = null;\r\n  Email = null;\r\n\r\n  getKey = () => this.LoginName ?? this.Title;\r\n\r\n  static Create = function (props) {\r\n    if (!props || (!props.ID && !(props.Title || props.LookupValue)))\r\n      return null;\r\n    return new People({\r\n      ...props,\r\n      Title: props.Title ?? props.LookupValue,\r\n    });\r\n  };\r\n}\r\n", "export class Entity {\r\n  constructor(params) {\r\n    if (params?.ID) this.ID = params.ID;\r\n    if (params?.Title) this.Title = params.Title;\r\n  }\r\n\r\n  ObservableID = ko.observable();\r\n  ObservableTitle = ko.observable();\r\n\r\n  get id() {\r\n    return this.ObservableID();\r\n  }\r\n\r\n  set id(val) {\r\n    this.ObservableID(val);\r\n  }\r\n\r\n  get Title() {\r\n    return this.ObservableTitle();\r\n  }\r\n\r\n  set Title(val) {\r\n    this.ObservableTitle(val);\r\n  }\r\n}\r\n", "export class ValidationError {\r\n  constructor(source, type, description) {\r\n    this.source = source;\r\n    this.type = type;\r\n    this.description = description;\r\n  }\r\n}\r\n", "import { ValidationError } from \"../primitives/validation_error.js\";\r\n\r\nexport class BaseField {\r\n  constructor({\r\n    displayName,\r\n    systemName,\r\n    instructions = null,\r\n    isRequired = false,\r\n    defaultValue,\r\n    width,\r\n    classList = [],\r\n    isVisible = true,\r\n    isEditable = true,\r\n  }) {\r\n    this.displayName = displayName;\r\n    this.systemName = systemName;\r\n    this.instructions = instructions;\r\n    this.isRequired = isRequired;\r\n\r\n    this.Visible = ko.pureComputed(() => {\r\n      return ko.unwrap(isVisible);\r\n    });\r\n\r\n    this.Enable = ko.pureComputed(() => {\r\n      return ko.unwrap(isEditable);\r\n    });\r\n\r\n    this.width = width ? \"col-md-\" + width : \"col-md-6\";\r\n    this.classList = classList;\r\n\r\n    if (defaultValue) this.Value(defaultValue);\r\n\r\n    this.addFieldRequirement(isRequiredValidationRequirement(this));\r\n  }\r\n\r\n  Value = ko.observable();\r\n\r\n  get = () => this.Value();\r\n  set = (val) => this.Value(val);\r\n  clear = () => {\r\n    if (ko.isObservableArray(this.Value)) this.Value([]);\r\n    else this.Value(null);\r\n  };\r\n\r\n  toString = ko.pureComputed(() => this.Value());\r\n\r\n  toJSON = () => this.Value();\r\n  fromJSON = (val) => this.Value(val);\r\n\r\n  validate = (showErrors = true) => {\r\n    this.ShowErrors(showErrors);\r\n    return this.Errors();\r\n  };\r\n\r\n  _fieldValidationRequirements = ko.observableArray();\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.Visible()) return [];\r\n    const errors = this._fieldValidationRequirements()\r\n      .filter((req) => req.requirement())\r\n      .map((req) => req.error);\r\n\r\n    return errors;\r\n  });\r\n\r\n  addFieldRequirement = (requirement) =>\r\n    this._fieldValidationRequirements.push(requirement);\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n}\r\n\r\nfunction isRequiredValidationRequirement(field) {\r\n  return {\r\n    requirement: ko.pureComputed(() => {\r\n      // Return true if field fails validation\r\n      const isRequired = ko.unwrap(field.isRequired);\r\n      if (!isRequired) return false;\r\n\r\n      const value = ko.unwrap(field.Value);\r\n      if (value?.constructor == Array) return !value.length;\r\n      return value === null || value === undefined;\r\n    }),\r\n    error: new ValidationError(\r\n      \"text-field\",\r\n      \"required-field\",\r\n      `${ko.utils.unwrapObservable(field.displayName)} is required!`\r\n    ),\r\n  };\r\n}\r\n", "// Hint: use the es6-string-html VS Code module to make template literals easier to read\r\nexport const html = String.raw;\r\n\r\nexport function registerFieldComponents(constructor) {\r\n  ko.components.register(constructor.edit, {\r\n    template: constructor.editTemplate,\r\n    viewModel: constructor,\r\n  });\r\n\r\n  ko.components.register(constructor.view, {\r\n    template: constructor.viewTemplate,\r\n    viewModel: constructor,\r\n  });\r\n}\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <div data-bind=\"text: toString()\"></div>\r\n`;\r\n\r\nconst editTemplate = html`<div>Uh oh!</div>`;\r\n\r\nexport class BaseFieldModule {\r\n  constructor(params) {\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  _id;\r\n  getUniqueId = () => {\r\n    if (!this._id) {\r\n      this._id = \"field-\" + Math.floor(Math.random() * 10000);\r\n    }\r\n    return this._id;\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return [];\r\n    if (!this.isRequired) return [];\r\n    return this.Value()\r\n      ? []\r\n      : [\r\n          new ValidationError(\r\n            \"text-field\",\r\n            \"required-field\",\r\n            this.displayName + ` is required!`\r\n          ),\r\n        ];\r\n  });\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n\r\n  static viewTemplate = viewTemplate;\r\n\r\n  static editTemplate = editTemplate;\r\n}\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"component: {name: Value()?.components.edit, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString\"></td>\r\n        <!-- /ko -->\r\n        <td>\r\n          <i\r\n            title=\"remove item\"\r\n            class=\"fa-solid fa-trash pointer\"\r\n            data-bind=\"click: $parent.remove.bind(row)\"\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n      <!-- /ko -->\r\n      <tr>\r\n        <!-- ko foreach: NewItem()?.FormFields -->\r\n        <td>\r\n          <div\r\n            data-bind=\"component: {name: components.edit, params: $data}\"\r\n          ></div>\r\n        </td>\r\n        <!-- /ko -->\r\n        <td class=\"align-bottom\">\r\n          <button\r\n            title=\"add and new\"\r\n            type=\"button\"\r\n            data-bind=\"click: submit\"\r\n            class=\"btn btn-success\"\r\n          >\r\n            Add +\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <!-- ko if: Value -->\r\n  <div\r\n    data-bind=\"component: {name: Value().components.view, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString()\"></td>\r\n        <!-- /ko -->\r\n      </tr>\r\n      <!-- /ko -->\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class BlobModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"blob-view\";\r\n  static edit = \"blob-edit\";\r\n  static new = \"blob-edit\";\r\n}\r\n\r\nregisterFieldComponents(BlobModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value, enable: Enable\"\r\n      />\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n        disabled\r\n      />\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nexport class CheckboxModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"checkbox-view\";\r\n  static edit = \"checkbox-edit\";\r\n  static new = \"checkbox-edit\";\r\n}\r\n\r\nregisterFieldComponents(CheckboxModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"value: inputBinding, \r\n        class: ValidationClass, \r\n        attr: {'type': type},\r\n        enable: Enable\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class DateModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"date-view\";\r\n  static edit = \"date-edit\";\r\n  static new = \"date-edit\";\r\n}\r\n\r\nregisterFieldComponents(DateModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: isSearch -->\r\n    <div data-bind=\"text: toString()\"></div>\r\n    <input class=\"form-control\" data-bind=\"\" />\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isSearch -->\r\n    <!-- ko if: Options().length -->\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n        selectedOptions: Value,\r\n        optionsText: optionsText,\r\n        class: ValidationClass\r\n        enable: Enable\"\r\n    ></select>\r\n    <div class=\"fw-light flex justify-between\">\r\n      <p class=\"fst-italic\">Hold ctrl to select multiple</p>\r\n      <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n        CLEAR\r\n      </button>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        value: Value,\r\n        optionsText: optionsText,\r\n        class: ValidationClass\r\n        enable: Enable\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class LookupModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.onSearchInput = field.onSearchInput;\r\n    this.multiple = field.multiple ?? false;\r\n  }\r\n\r\n  // selectedOptions = ko.pureComputed({\r\n  //   read: () => {\r\n  //     if (this.multiple) return this.Value();\r\n  //     return ko.unwrap(this.Value) ? [ko.unwrap(this.Value)] : [];\r\n  //   },\r\n  //   write: (val) => {\r\n  //     if (this.multiple) {\r\n  //       this.Value(val);\r\n  //       return;\r\n  //     }\r\n\r\n  //     if (val.length) {\r\n  //       this.Value(val[0]);\r\n  //       return;\r\n  //     }\r\n  //     this.Value(null);\r\n  //   },\r\n  // });\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"lookup-view\";\r\n  static edit = \"lookup-edit\";\r\n  static new = \"lookup-edit\";\r\n}\r\n\r\nregisterFieldComponents(LookupModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold w-100\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko ifnot: spGroupId -->\r\n    <div\r\n      class=\"form-control py-0\"\r\n      data-bind=\"attr: {id: getUniqueId()}, \r\n      people: Value, \r\n      pickerOptions: pickerOptions,\r\n      class: ValidationClass\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowUserSelect -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: userOpts, \r\n        optionsCaption: 'Select...', \r\n        optionsText: 'Title',\r\n        value: ValueFunc,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: toString -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"text: toString, \r\n      attr: {title: Value()?.LoginName}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <ul data-bind=\"foreach: Value\">\r\n    <li data-bind=\"attr: {title: LoginName}, text: Title\"></li>\r\n  </ul>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: toString -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class PeopleModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  ValueFunc = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return;\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      return userOpts.find((opt) => opt.ID == this.Value().ID);\r\n    },\r\n    write: (opt) => {\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      if (!userOpts) return;\r\n      this.Value(opt);\r\n    },\r\n  });\r\n\r\n  ShowUserSelect = ko.pureComputed(() => {\r\n    // We don't care to unwrap this, since we want to know if it's set or an observable.\r\n    const groupName = this.spGroupName;\r\n    if (!groupName) return false;\r\n    const options = ko.unwrap(this.userOpts);\r\n    return options.length;\r\n  });\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"people-view\";\r\n  static edit = \"people-edit\";\r\n  static new = \"people-edit\";\r\n}\r\n\r\nregisterFieldComponents(PeopleModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </label>\r\n  <search-select\r\n    class=\"form-select\"\r\n    data-bind=\"searchSelect: { \r\n      options: Options, \r\n      selectedOptions: Value,\r\n      optionsText: optionsText,\r\n      onSearchInput: onSearchInput\r\n    }\"\r\n  >\r\n  </search-select>\r\n  <div class=\"fw-light flex justify-between\">\r\n    <p class=\"fst-italic\"></p>\r\n    <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n      CLEAR\r\n    </button>\r\n  </div>\r\n  <!-- ko if: instructions -->\r\n  <div\r\n    class=\"fw-lighter fst-italic text-secondary\"\r\n    data-bind=\"html: instructions\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SearchSelectModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.Options = field.Options;\r\n    this.Value = field.Value;\r\n    this.optionsText =\r\n      field.optionsText ??\r\n      ((val) => {\r\n        return val;\r\n      });\r\n    this.multiple = field.multiple;\r\n    this.OptionsCaption = field.OptionsCaption ?? \"Select...\";\r\n    this.onSearchInput = field.onSearchInput;\r\n  }\r\n\r\n  GetSelectedOptions = ko.pureComputed(() => {\r\n    if (this.multiple) return this.Value();\r\n\r\n    return this.Value() ? [this.Value()] : [];\r\n  });\r\n\r\n  InputGroupFocused = ko.observable();\r\n  setFocus = () => this.InputGroupFocused(true);\r\n\r\n  FilterText = ko.observable();\r\n  FilteredOptions = ko.pureComputed(() =>\r\n    this.Options().filter((option) => {\r\n      if (this.GetSelectedOptions().indexOf(option) >= 0) return false;\r\n      if (this.FilterText())\r\n        return this.optionsText(option)\r\n          .toLowerCase()\r\n          .includes(this.FilterText().toLowerCase());\r\n      return true;\r\n    })\r\n  );\r\n\r\n  addSelection = (option, e) => {\r\n    console.log(\"selected\", option);\r\n    if (e.target.nextElementSibling) {\r\n      //e.stopPropagation();\r\n      e.target.nextElementSibling.focus();\r\n    }\r\n    if (this.multiple) {\r\n      this.Value.push(option);\r\n    } else {\r\n      this.Value(option);\r\n    }\r\n  };\r\n\r\n  removeSelection = (option) =>\r\n    this.multiple ? this.Value.remove(option) : this.Value(null);\r\n\r\n  setInputGroupFocus = () => {\r\n    this.InputGroupFocused(true);\r\n    clearTimeout(this.focusOutTimeout);\r\n  };\r\n\r\n  removeInputGroupFocus = (data, e) => {\r\n    this.focusOutTimeout = window.setTimeout(() => {\r\n      this.InputGroupFocused(false);\r\n    }, 0);\r\n  };\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"search-select-view\";\r\n  static edit = \"search-select-edit\";\r\n  static new = \"search-select-new\";\r\n}\r\n\r\nregisterFieldComponents(SearchSelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        selectedOptions: Value,\r\n        class: ValidationClass,\r\n        enable: Enable\"\r\n    ></select>\r\n    <div class=\"fst-italic fw-light\">Hold ctrl to select multiple.</div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        value: Value,\r\n        class: ValidationClass,\r\n        enable: Enable\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SelectModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"select-view\";\r\n  static edit = \"select-edit\";\r\n  static new = \"select-edit\";\r\n}\r\n\r\nregisterFieldComponents(SelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"component field\">\r\n    <!-- ko if: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span\r\n      >:</label\r\n    >\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <div\r\n      class=\"richtext-field\"\r\n      data-bind=\"childrenComplete: childrenHaveLoaded\"\r\n    >\r\n      <!-- Create the editor container -->\r\n      <div\r\n        class=\"form-control\"\r\n        data-bind=\"attr: {'id': getUniqueId()}, class: ValidationClass\"\r\n        style=\"height: 150px\"\r\n      >\r\n        <div data-bind=\"html: Value\"></div>\r\n      </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isRichText -->\r\n    <label class=\"fw-semibold w-full\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n      <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        class=\"form-control\"\r\n        data-bind=\"textInput: Value, \r\n        class: ValidationClass, \r\n        attr: attr\r\n        enable: Enable\"\r\n      ></textarea>\r\n    </label>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowErrors -->\r\n    <!-- ko foreach: Errors -->\r\n    <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: Value -->\r\n  <!-- ko if: isRichText -->\r\n  <div data-bind=\"html: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: isRichText -->\r\n  <div data-bind=\"text: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: Value -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextAreaModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  childrenHaveLoaded = (nodes) => {\r\n    this.initializeEditor();\r\n  };\r\n\r\n  getToolbarId = () => \"toolbar-\" + this.getUniqueId();\r\n\r\n  initializeEditor() {\r\n    const toolbarOptions = [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"link\"],\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ];\r\n\r\n    // debugger;\r\n    var editor = new Quill(\"#\" + this.getUniqueId(), {\r\n      modules: { toolbar: toolbarOptions },\r\n      theme: \"snow\",\r\n    });\r\n\r\n    const Value = this.Value;\r\n\r\n    Value.subscribe((val) => {\r\n      if (val == \"\") {\r\n        editor.setText(\"\");\r\n        return;\r\n      }\r\n      if (editor.root.innerHTML == val) return;\r\n\r\n      editor.root.innerHTML == val;\r\n      // editor.setText(val);\r\n    });\r\n\r\n    editor.on(\"text-change\", function (delta, oldDelta, source) {\r\n      Value(editor.root.textContent ? editor.root.innerHTML : \"\");\r\n    });\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-area-view\";\r\n  static edit = \"text-area-edit\";\r\n  static new = \"text-area-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextAreaModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"textInput: Value, \r\n        class: ValidationClass, \r\n        attr: attr, \r\n        enable: Enable\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-view\";\r\n  static edit = \"text-edit\";\r\n  static new = \"text-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextModule);\r\n", "import { BaseField } from \"./index.js\";\r\nimport { CheckboxModule } from \"../components/fields/index.js\";\r\n\r\nexport class CheckboxField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  components = CheckboxModule;\r\n}\r\n", "import { DateModule } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport const dateFieldTypes = {\r\n  date: \"date\",\r\n  datetime: \"datetime-local\",\r\n};\r\n\r\n/**\r\n * This field needs to convert between locale and UTC Dates stored on the server;\r\n */\r\n\r\nexport class DateField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.type = params.type ?? dateFieldTypes.date;\r\n  }\r\n\r\n  toString = ko.pureComputed(() => {\r\n    // if this is datetime vs date we expect different things\r\n    switch (this.type) {\r\n      case dateFieldTypes.date:\r\n        return this.toLocaleDateString();\r\n      case dateFieldTypes.datetime:\r\n        return this.toLocaleString();\r\n      default:\r\n        return \"\";\r\n    }\r\n  });\r\n\r\n  toSortableDateString = () => this.Value()?.format(\"yyyy-MM-dd\");\r\n  toLocaleDateString = () => this.Value()?.toLocaleDateString();\r\n  toLocaleString = () => this.Value()?.toLocaleString();\r\n\r\n  toInputDateString = () => {\r\n    const d = this.Value();\r\n    return [\r\n      d.getUTCFullYear().toString().padStart(4, \"0\"),\r\n      (d.getUTCMonth() + 1).toString().padStart(2, \"0\"),\r\n      d.getUTCDate().toString().padStart(2, \"0\"),\r\n    ].join(\"-\");\r\n  };\r\n  toInputDateTimeString = () => this.Value().format(\"yyyy-MM-ddThh:mm\");\r\n\r\n  get = ko.pureComputed(() => {\r\n    if (!this.Value() || isNaN(this.Value().valueOf())) {\r\n      return null;\r\n    }\r\n\r\n    return this.Value().toISOString();\r\n  });\r\n\r\n  set = (newDate) => {\r\n    if (!newDate) return null;\r\n    if (newDate.constructor.getName() != \"Date\") {\r\n      // console.warn(\"Attempting to set date\", newDate);\r\n      newDate = new Date(newDate);\r\n    }\r\n    if (newDate.getTimezoneOffset()) {\r\n    }\r\n    this.Value(newDate);\r\n  };\r\n\r\n  inputBinding = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return null;\r\n      switch (this.type) {\r\n        case dateFieldTypes.date:\r\n          return this.toInputDateString();\r\n        case dateFieldTypes.datetime:\r\n          return this.toInputDateTimeString();\r\n        default:\r\n          return null;\r\n      }\r\n    },\r\n    write: (val) => {\r\n      if (!val) return;\r\n      //writes in format\r\n      if (this.type == dateFieldTypes.datetime) {\r\n        this.Value(new Date(val));\r\n        return;\r\n      }\r\n\r\n      // make sure we're using midnight local time\r\n      this.Value(new Date(val + \"T00:00\"));\r\n    },\r\n  });\r\n\r\n  components = DateModule;\r\n}\r\n", "// import { appContext } from \"../../infrastructure/app-db-context.js\";\r\nimport {\r\n  LookupModule,\r\n  SearchSelectModule,\r\n  SelectModule,\r\n} from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class LookupField extends BaseField {\r\n  constructor({\r\n    displayName,\r\n    type: entityType,\r\n    isRequired = false,\r\n    Visible,\r\n    appContext,\r\n    options = ko.observableArray(),\r\n    optionsFilter = null,\r\n    optionsText = null,\r\n    multiple = false,\r\n    lookupCol = null,\r\n    instructions,\r\n  }) {\r\n    super({ Visible, displayName, isRequired, instructions });\r\n    // Support passing in options\r\n    // if options are not passed, assume this is a search input\r\n    if (!options) {\r\n      this.isSearch = true;\r\n    } else {\r\n      this.isSearch = false;\r\n      this.allOpts = options;\r\n    }\r\n    this.isSearch = !options;\r\n    this.multiple = multiple;\r\n    this.Value = multiple ? ko.observableArray() : ko.observable();\r\n\r\n    this._appContext = appContext;\r\n    this.entityType = entityType;\r\n    // this.entitySet = entitySet;\r\n    this.lookupCol = lookupCol ?? \"Title\";\r\n    this.optionsText = optionsText ?? ((item) => item[this.lookupCol]);\r\n    if (optionsFilter) this.optionsFilter = optionsFilter;\r\n\r\n    this.components = multiple ? SearchSelectModule : LookupModule;\r\n  }\r\n\r\n  _entitySet;\r\n  get entitySet() {\r\n    if (!this._entitySet) {\r\n      this._entitySet = this._appContext().Set(this.entityType);\r\n    }\r\n    return this._entitySet;\r\n  }\r\n\r\n  isSearch = false;\r\n\r\n  allOpts;\r\n  optionsFilter = (val) => val;\r\n\r\n  Options = ko.pureComputed(() => {\r\n    const optsFilter = ko.unwrap(this.optionsFilter);\r\n    const allOpts = ko.unwrap(this.allOpts);\r\n    return allOpts.filter(optsFilter);\r\n  });\r\n\r\n  IsLoading = ko.observable(false);\r\n  HasLoaded = ko.observable(false);\r\n\r\n  // TODO: Started this, should really go in the entity base class if we're doing active record\r\n  // create = async () => {\r\n  //   const newItems = this.multiple ? this.Value() : [this.Value()]\r\n  //   newItems.map(item => this.entitySet.AddEntity(newItems))\r\n  // }\r\n\r\n  refresh = async () => {\r\n    if (!!!this.Value()) {\r\n      return;\r\n    }\r\n    this.IsLoading(true);\r\n    if (!this.multiple) {\r\n      await this.entitySet.LoadEntity(this.Value());\r\n      this.IsLoading(false);\r\n      this.HasLoaded(true);\r\n      return;\r\n    }\r\n\r\n    await Promise.all(\r\n      this.Value().map(\r\n        async (entity) => await this.entitySet.LoadEntity(entity)\r\n      )\r\n    );\r\n    this.IsLoading(false);\r\n    this.HasLoaded(true);\r\n  };\r\n\r\n  ensure = async () => {\r\n    if (this.HasLoaded()) return;\r\n    if (this.IsLoading()) {\r\n      return new Promise((resolve, reject) => {\r\n        const isLoadingSubscription = this.IsLoading.subscribe((isLoading) => {\r\n          if (!isLoading) {\r\n            isLoadingSubscription.dispose();\r\n            resolve();\r\n          }\r\n        });\r\n      });\r\n    }\r\n    await this.refresh();\r\n  };\r\n\r\n  toString = ko.pureComputed(() => {\r\n    if (!!!this.Value()) {\r\n      return \"\";\r\n    }\r\n    if (this.multiple) {\r\n      return this.Value()\r\n        .map((val) => getEntityPropertyAsString(val, this.lookupCol))\r\n        .join(\", \");\r\n    }\r\n    return getEntityPropertyAsString(this.Value(), this.lookupCol);\r\n  });\r\n\r\n  get = () => {\r\n    if (!this.Value()) return;\r\n    if (this.multiple) {\r\n      return this.Value().map((entity) => {\r\n        return {\r\n          ID: entity.ID,\r\n          LookupValue: entity.LookupValue,\r\n          Title: entity.Title,\r\n        };\r\n      });\r\n    }\r\n    const entity = this.Value();\r\n    return {\r\n      ID: entity.ID,\r\n      LookupValue: entity.LookupValue,\r\n      Title: entity.Title,\r\n    };\r\n  };\r\n\r\n  set = (val) => {\r\n    if (!val) {\r\n      this.Value(val);\r\n      return;\r\n    }\r\n    if (this.multiple) {\r\n      const valArr = Array.isArray(val) ? val : val.results ?? val.split(\"#;\");\r\n\r\n      this.Value(valArr.map((value) => this.findOrCreateNewEntity(value)));\r\n      return;\r\n    }\r\n\r\n    this.Value(this.findOrCreateNewEntity(val));\r\n    if (val && !this.toString()) {\r\n      // this.ensure();\r\n    }\r\n  };\r\n\r\n  findOrCreateNewEntity = (val) => {\r\n    if (this.entityType.FindInStore) {\r\n      const foundEntity = this.entityType.FindInStore(val);\r\n      if (foundEntity) return foundEntity;\r\n      console.warn(\r\n        `Could not find entity in store: ${this.entityType.name}`,\r\n        val\r\n      );\r\n    }\r\n\r\n    const optionEntity = this.allOpts().find((entity) => entity.ID == val.ID);\r\n    if (optionEntity) return optionEntity;\r\n\r\n    if (this.entityType.Create) {\r\n      return this.entityType.Create(val);\r\n    }\r\n\r\n    const newEntity = new this.entityType();\r\n    newEntity.ID = val.ID;\r\n    // Kick off the load process in the background\r\n    this.entitySet.LoadEntity(newEntity);\r\n\r\n    return newEntity;\r\n  };\r\n}\r\n\r\n// Should fully constrain all entities, this is ridiculous\r\nfunction getEntityPropertyAsString(entity, column) {\r\n  if (entity.FieldMap && entity.FieldMap[column]) {\r\n    const field = entity.FieldMap[column];\r\n    if (typeof field == \"function\") {\r\n      return field();\r\n    }\r\n\r\n    if (field.toString && typeof field.toString == \"function\") {\r\n      return field.toString();\r\n    }\r\n\r\n    if (field.get && typeof field.get == \"function\") {\r\n      return field.get();\r\n    }\r\n\r\n    if (field.obs) {\r\n      return field.obs();\r\n    }\r\n\r\n    return field;\r\n  }\r\n  return entity[column] ?? \"\";\r\n}\r\n", "/*\r\n    SharePoint Acces Layer - sal.js\r\n\r\n    Abstract any functions that rely on reading or setting SP items to here.\r\n\r\n    Create a new \"Connection\" object type that will store information for \r\n    interfacing with a specific list.\r\n\r\n    Author: Peter Backlund \r\n    Contact: backlundpf <@> state.gov\r\n    Created: 2019-02-12\r\n*/\r\n\r\n/*\r\n  TODO:\r\n  - migrate to rest api\r\n  - remove new from \"new SP.ClientContext.get_current()\"\r\n  - standardize currctx\r\n  - remove unused functions\r\n  - Combine functions \r\n*/\r\n\r\nwindow.console = window.console || { log: function () {} };\r\n\r\n// window.sal = window.sal ?? {};\r\n// var sal = window.sal;\r\nconst sal = {};\r\n\r\nconst serverRelativeUrl =\r\n  _spPageContextInfo.webServerRelativeUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webServerRelativeUrl;\r\n\r\nsal.globalConfig = sal.globalConfig || {\r\n  siteGroups: [],\r\n  siteUrl: serverRelativeUrl,\r\n  listServices: serverRelativeUrl + \"/_vti_bin/ListData.svc/\",\r\n  defaultGroups: {},\r\n};\r\nsal.site = sal.site || {};\r\n\r\nwindow.DEBUG = true;\r\n\r\nexport function executeQuery(currCtx) {\r\n  return new Promise((resolve, reject) =>\r\n    currCtx.executeQueryAsync(resolve, (sender, args) => {\r\n      reject({ sender, args });\r\n    })\r\n  );\r\n}\r\n\r\nfunction principalToPeople(oPrincipal, isGroup = null) {\r\n  const people = {\r\n    ID: oPrincipal.get_id(),\r\n    Title: oPrincipal.get_title(),\r\n    LoginName: oPrincipal.get_loginName(),\r\n    IsEnsured: true,\r\n    IsGroup:\r\n      isGroup != null\r\n        ? isGroup\r\n        : oPrincipal.constructor.getName() == \"SP.Group\",\r\n    oPrincipal,\r\n  };\r\n  if (oPrincipal.get_email) people.Email = oPrincipal.get_email();\r\n\r\n  return people;\r\n}\r\n\r\n// Used in authorization\r\nexport function getDefaultGroups() {\r\n  const defaultGroups = sal.globalConfig.defaultGroups;\r\n  const result = {};\r\n  Object.keys(defaultGroups).forEach((key) => {\r\n    result[key] = principalToPeople(defaultGroups[key], true);\r\n  });\r\n  return result;\r\n}\r\n\r\nconst siteGroups = {};\r\n\r\nexport async function getGroupUsers(groupName) {\r\n  if (siteGroups[groupName]?.Users?.constructor == Array) {\r\n    return siteGroups[groupName].Users;\r\n  }\r\n  const url = `/web/sitegroups/GetByName('${groupName}')?$expand=Users`;\r\n\r\n  const groupResult = await fetchSharePointData(url);\r\n\r\n  const group = groupResult.d;\r\n  group.Users = group.Users?.results;\r\n\r\n  siteGroups[groupName] = group;\r\n  return group.Users;\r\n}\r\n\r\n// Used in router\r\nexport const webRoot =\r\n  _spPageContextInfo.webAbsoluteUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webAbsoluteUrl;\r\n\r\nexport async function InitSal() {\r\n  if (sal.utilities) return;\r\n  console.log(\"Init Sal\");\r\n  var currCtx = SP.ClientContext.get_current();\r\n  var web = currCtx.get_web();\r\n  //sal.site = sal.siteConnection;\r\n\r\n  // Get default groups\r\n  sal.globalConfig.defaultGroups = {\r\n    owners: web.get_associatedOwnerGroup(),\r\n    members: web.get_associatedMemberGroup(),\r\n    visitors: web.get_associatedVisitorGroup(),\r\n  };\r\n  currCtx.load(sal.globalConfig.defaultGroups.owners);\r\n  currCtx.load(sal.globalConfig.defaultGroups.members);\r\n  currCtx.load(sal.globalConfig.defaultGroups.visitors);\r\n\r\n  // Get Current User information\r\n  var user = web.get_currentUser(); //must load this to access info.\r\n  currCtx.load(user);\r\n\r\n  // Get the site groups\r\n  var siteGroupCollection = web.get_siteGroups();\r\n  currCtx.load(siteGroupCollection);\r\n\r\n  // Get the roles upfront so we can validate they're present on the site.\r\n  sal.globalConfig.roles = [];\r\n  var oRoleDefinitions = currCtx.get_web().get_roleDefinitions();\r\n  currCtx.load(oRoleDefinitions);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    currCtx.executeQueryAsync(\r\n      function () {\r\n        sal.globalConfig.currentUser = user;\r\n\r\n        var listItemEnumerator = siteGroupCollection.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          sal.globalConfig.siteGroups.push(principalToPeople(oListItem));\r\n        }\r\n\r\n        // Role Definitions\r\n        var oEnumerator = oRoleDefinitions.getEnumerator();\r\n        while (oEnumerator.moveNext()) {\r\n          var oRoleDefinition = oEnumerator.get_current();\r\n          sal.globalConfig.roles.push(oRoleDefinition.get_name());\r\n        }\r\n\r\n        sal.config = new sal.NewAppConfig();\r\n        sal.utilities = new sal.NewUtilities();\r\n        resolve();\r\n      },\r\n      function (sender, args) {\r\n        alert(\"Error initializing SAL\");\r\n        reject();\r\n      }\r\n    );\r\n  });\r\n  // console.log()\r\n}\r\n\r\nsal.NewAppConfig = function () {\r\n  // TODO: We should take in configuration from our current application, roles/groups etc.\r\n  var siteRoles = {};\r\n  siteRoles.roles = {\r\n    FullControl: \"Full Control\",\r\n    Design: \"Design\",\r\n    Edit: \"Edit\",\r\n    Contribute: \"Contribute\",\r\n    RestrictedContribute: \"Restricted Contribute\",\r\n    InitialCreate: \"Initial Create\",\r\n    Read: \"Read\",\r\n    RestrictedRead: \"Restricted Read\",\r\n    LimitedAccess: \"Limited Access\",\r\n  };\r\n  siteRoles.fulfillsRole = function (inputRole, targetRole) {\r\n    // the site roles are already in authoritative order\r\n    const roles = Object.values(siteRoles.roles);\r\n    if (!roles.includes(inputRole) || !roles.includes(targetRole)) return false;\r\n\r\n    return roles.indexOf(inputRole) <= roles.indexOf(targetRole);\r\n  };\r\n\r\n  siteRoles.validate = function () {\r\n    Object.keys(siteRoles.roles).forEach(function (role) {\r\n      var roleName = siteRoles.roles[role];\r\n      if (!sal.globalConfig.roles.includes(roleName)) {\r\n        console.error(roleName + \" is not in the global roles list\");\r\n      } else {\r\n        console.log(roleName);\r\n      }\r\n    });\r\n  };\r\n\r\n  var siteGroups = {\r\n    groups: {\r\n      Owners: \"workorder Owners\",\r\n      Members: \"workorder Members\",\r\n      Visitors: \"workorder Visitors\",\r\n      RestrictedReaders: \"Restricted Readers\",\r\n    },\r\n  };\r\n\r\n  var publicMembers = {\r\n    siteRoles,\r\n    siteGroups,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// Used in Authorization\r\nexport async function getUserPropsAsync(userId = _spPageContextInfo.userId) {\r\n  // We need to make two api calls, one to user info list, and one to web\r\n  // const userInfoUrl = `/Web/lists/getbytitle('User%20Information%20List')/Items(${userId})`;\r\n  const userPropsUrl = `/sp.userprofiles.peoplemanager/getmyproperties`;\r\n  // const userGroupUrl = `/Web/GetUserById(${userId})/Groups`;\r\n\r\n  // Get more user info:\r\n  const userInfoUrl = `/Web/GetUserById(${userId})/?$expand=Groups`;\r\n\r\n  const userInfo = (await fetchSharePointData(userInfoUrl)).d;\r\n\r\n  // TODO: See if we can just select the properties we need\r\n  // const userPropsUrl = `/sp.userprofiles.peoplemanager/getpropertiesfor(@v)?@v='${encodeURIComponent(\r\n  //   userInfo.LoginName\r\n  // )}'`;\r\n\r\n  const userProps = (await fetchSharePointData(userPropsUrl))?.d\r\n    .UserProfileProperties.results;\r\n\r\n  function findPropValue(props, key) {\r\n    return props.find((prop) => prop.Key == key)?.Value;\r\n  }\r\n\r\n  return {\r\n    ID: userId,\r\n    Title: userInfo.Title,\r\n    LoginName: userInfo.LoginName,\r\n    WorkPhone: findPropValue(userProps, \"WorkPhone\"),\r\n    EMail: findPropValue(userProps, \"WorkEmail\"), // TODO: Do we still need this spelling?\r\n    IsEnsured: true,\r\n    IsGroup: false,\r\n    Groups: userInfo.Groups?.results?.map((group) => {\r\n      return {\r\n        ...group,\r\n        ID: group.Id,\r\n        IsGroup: true,\r\n        IsEnsured: true,\r\n      };\r\n    }),\r\n  };\r\n}\r\n\r\n// TODO: DEPRECATED remove after verification\r\nasync function getUserPropsAsyncDeprecated() {\r\n  // TODO: We aren't getting the phone number, need to query userprofile service\r\n  return new Promise((resolve, reject) => {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oUser = web.get_currentUser();\r\n    var oGroups = oUser.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      const user = {\r\n        ID: oUser.get_id(),\r\n        Title: oUser.get_title(),\r\n        LoginName: oUser.get_loginName(),\r\n        IsEnsured: true,\r\n        IsGroup: false,\r\n        Groups: [],\r\n      };\r\n\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        user.Groups.push(principalToPeople(oGroup));\r\n      }\r\n      resolve(user);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    currCtx.load(oUser);\r\n    currCtx.load(oGroups);\r\n    const data = { oUser, oGroups, resolve, reject };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  });\r\n}\r\n\r\nsal.NewUtilities = function () {\r\n  // TODO: Split this up into UserManager, GroupManager, etc\r\n  function createSiteGroup(groupName, permissions, callback) {\r\n    /* groupName: the name of the new SP Group\r\n     *  permissions: an array of permissions to assign to the group\r\n     * groupOwner: the name of the owner group\r\n     */\r\n    callback = callback === undefined ? null : callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var groupCreationInfo = new SP.GroupCreationInformation();\r\n    groupCreationInfo.set_title(groupName);\r\n    this.oGroup = oWebsite.get_siteGroups().add(groupCreationInfo);\r\n    oGroup.set_owner(oWebsite.get_associatedOwnerGroup());\r\n\r\n    oGroup.update();\r\n    var collRoleDefinitionBinding =\r\n      SP.RoleDefinitionBindingCollection.newObject(clientContext);\r\n\r\n    this.oRoleDefinitions = [];\r\n\r\n    permissions.forEach(function (perm) {\r\n      var oRoleDefinition = oWebsite.get_roleDefinitions().getByName(perm);\r\n      this.oRoleDefinitions.push(oRoleDefinition);\r\n      collRoleDefinitionBinding.add(oRoleDefinition);\r\n    });\r\n\r\n    var collRollAssignment = oWebsite.get_roleAssignments();\r\n    collRollAssignment.add(oGroup, collRoleDefinitionBinding);\r\n\r\n    function onCreateGroupSucceeded() {\r\n      var roleInfo =\r\n        oGroup.get_title() +\r\n        \" created and assigned to \" +\r\n        oRoleDefinitions.forEach(function (rd) {\r\n          rd + \", \";\r\n        });\r\n      if (callback) {\r\n        callback(oGroup.get_id());\r\n      }\r\n      console.log(roleInfo);\r\n    }\r\n\r\n    function onCreateGroupFailed(sender, args) {\r\n      alert(\r\n        groupnName +\r\n          \" - Create group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    clientContext.load(oGroup, \"Title\");\r\n\r\n    var data = {\r\n      groupName: groupName,\r\n      oGroup: oGroup,\r\n      oRoleDefinition: oRoleDefinition,\r\n      callback: callback,\r\n    };\r\n\r\n    clientContext.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateGroupSucceeded),\r\n      Function.createDelegate(data, onCreateGroupFailed)\r\n    );\r\n  }\r\n\r\n  function getUserGroups(user, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var everyone = web.ensureUser(user);\r\n    var oGroups = everyone.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      var groups = new Array();\r\n      var groupsInfo = new String();\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        var group = principalToPeople(oGroup);\r\n\r\n        groupsInfo +=\r\n          \"\\n\" +\r\n          \"Group ID: \" +\r\n          oGroup.get_id() +\r\n          \", \" +\r\n          \"Title : \" +\r\n          oGroup.get_title();\r\n        groups.push(group);\r\n      }\r\n      console.log(groupsInfo.toString());\r\n      callback(groups);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    currCtx.load(everyone);\r\n    currCtx.load(oGroups);\r\n    data = { everyone: everyone, oGroups: oGroups, callback: callback };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  }\r\n\r\n  function getUsersWithGroup(oGroup, callback) {\r\n    var context = new SP.ClientContext.get_current();\r\n\r\n    var oUsers = oGroup.get_users();\r\n\r\n    function onGetUserSuccess() {\r\n      var userObjs = [];\r\n      var userEnumerator = oUsers.getEnumerator();\r\n      while (userEnumerator.moveNext()) {\r\n        var oUser = userEnumerator.get_current();\r\n        var userObj = principalToPeople(oUser);\r\n        userObjs.push(userObj);\r\n      }\r\n      callback(userObjs);\r\n    }\r\n\r\n    function onGetUserFailed(sender, args) {}\r\n\r\n    var data = { oUsers: oUsers, callback: callback };\r\n    context.load(oUsers);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onGetUserSuccess),\r\n      Function.createDelegate(data, onGetUserFailed)\r\n    );\r\n  }\r\n\r\n  function copyFiles(sourceLib, destLib, callback, onError) {\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourceLib);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        console.log(\"Got the source folder right here!\");\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destLib + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.log(\"Sorry, something messed up: \" + args.get_message());\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  var publicMembers = {\r\n    copyFiles: copyFiles,\r\n    copyFilesAsync,\r\n    createSiteGroup: createSiteGroup,\r\n    getUserGroups: getUserGroups,\r\n    getUsersWithGroup: getUsersWithGroup,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\nexport async function copyFileAsync(sourceFilePath, destFilePath) {\r\n  const uri = `/web/getfilebyserverrelativeurl('${sourceFilePath}')/copyto('${destFilePath}')`;\r\n\r\n  const result = await fetchSharePointData(uri, \"POST\");\r\n\r\n  return result;\r\n}\r\n\r\n// Used in Authorization\r\nasync function getCurrentUserPropertiesAsync() {\r\n  var headers = {\r\n    \"Content-Type\": \"application/json;odata=verbose\",\r\n    \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n  };\r\n  try {\r\n    var response = await fetch(\r\n      _spPageContextInfo.webAbsoluteUrl +\r\n        \"/_api/SP.UserProfiles.PeopleManager/GetMyProperties\",\r\n      {\r\n        method: \"GET\",\r\n        headers,\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    sal.globalConfig.currentUserProfile = data.d;\r\n    const requestorPhone = data.d.UserProfileProperties.results.find(function (\r\n      prop\r\n    ) {\r\n      return prop.Key == \"WorkPhone\";\r\n    }).Value;\r\n  } catch (error) {\r\n    console.error(\"Unable to fetch User Properties:\", error);\r\n  }\r\n}\r\n\r\n// Used in Knockout people custom binding\r\nexport async function ensurePerson(person) {\r\n  const uri = `/web/getuserbyid(${person.ID})`;\r\n  // const alternateUri = `/web/siteusers(@v)?@v='i%3A0%23.f%7Cmembership%7C${person.LoginName}`;\r\n\r\n  const user = await fetchSharePointData(uri);\r\n  if (!user) return;\r\n\r\n  Object.assign(person, user.d);\r\n  return person;\r\n}\r\n\r\nexport async function ensureUserByKeyAsync(userName) {\r\n  return new Promise((resolve, reject) => {\r\n    var group = sal.globalConfig.siteGroups.find(function (group) {\r\n      return group.LoginName == userName;\r\n    });\r\n\r\n    if (group) {\r\n      resolve(group);\r\n      return;\r\n    }\r\n\r\n    var context = new SP.ClientContext.get_current();\r\n    var oUser = context.get_web().ensureUser(userName);\r\n\r\n    function onEnsureUserSucceeded(sender, args) {\r\n      const user = principalToPeople(oUser);\r\n      resolve(user);\r\n    }\r\n\r\n    function onEnsureUserFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to ensure user :\" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    const data = { oUser, resolve, reject };\r\n\r\n    context.load(oUser);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onEnsureUserSucceeded),\r\n      Function.createDelegate(data, onEnsureUserFailed)\r\n    );\r\n  });\r\n}\r\n\r\nfunction getSPSiteGroupByName(groupName) {\r\n  var userGroup = null;\r\n  if (this.globalConfig.siteGroups != null) {\r\n    userGroup = this.globalConfig.siteGroups.find(function (group) {\r\n      return group.Title == groupName;\r\n    });\r\n  }\r\n  return userGroup;\r\n}\r\n\r\nexport class ItemPermissions {\r\n  constructor({ hasUniqueRoleAssignments, roles }) {\r\n    this.hasUniqueRoleAssignments = hasUniqueRoleAssignments;\r\n    this.roles = roles;\r\n  }\r\n\r\n  hasUniqueRoleAssignments;\r\n  roles = [];\r\n\r\n  addPrincipalRole(principal, roleName) {\r\n    const newRoleDef = new RoleDef({ name: roleName });\r\n    const principalRole = this.getPrincipalRole(principal);\r\n\r\n    if (principalRole) {\r\n      principalRole.addRoleDef(newRoleDef);\r\n      return;\r\n    }\r\n\r\n    const newRole = new Role({ principal });\r\n    newRole.addRoleDef(newRoleDef);\r\n    this.roles.push(newRole);\r\n  }\r\n\r\n  getPrincipalRole(principal) {\r\n    return this.roles.find((role) => role.principal.ID == principal.ID);\r\n  }\r\n\r\n  principalHasPermissionKind(principal, permission) {\r\n    const role = this.getPrincipalRole(principal);\r\n    return role?.roleDefs.find((roleDef) =>\r\n      roleDef.basePermissions?.has(permission)\r\n    )\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  getValuePairs() {\r\n    // For backwards compatibility\r\n    return this.roles.flatMap((role) =>\r\n      role.roleDefs.map((roleDef) => [role.principal.Title, roleDef.name])\r\n    );\r\n  }\r\n\r\n  static fromRestResult(result) {\r\n    const roles = result.RoleAssignments.results.map(\r\n      Role.fromRestRoleAssignment\r\n    );\r\n\r\n    return new ItemPermissions({\r\n      hasUniqueRoleAssignments: result.HasUniqueRoleAssignments,\r\n      roles,\r\n    });\r\n  }\r\n}\r\n\r\nexport class Role {\r\n  constructor({ principal, roleDefs = [] }) {\r\n    this.principal = principal;\r\n    this.roleDefs = roleDefs;\r\n  }\r\n\r\n  principal; // People Entity\r\n  roleDefs = [];\r\n\r\n  addRoleDef(roleDef) {\r\n    this.roleDefs.push(roleDef);\r\n  }\r\n\r\n  static fromRestRoleAssignment(role) {\r\n    return new Role({\r\n      principal: { ...role.Member, ID: role.Member.Id },\r\n      roleDefs: role.RoleDefinitionBindings.results.map(\r\n        RoleDef.fromRestRoleDef\r\n      ),\r\n    });\r\n  }\r\n  static fromJsomRole(role) {\r\n    const newRole = new Role({\r\n      principal: principalToPeople(role.get_member()),\r\n    });\r\n\r\n    var roleDefs = role.get_roleDefinitionBindings();\r\n    if (roleDefs != null) {\r\n      var roleDefsEnumerator = roleDefs.getEnumerator();\r\n      while (roleDefsEnumerator.moveNext()) {\r\n        var roleDef = roleDefsEnumerator.get_current();\r\n        newRole.roleDefs.push(RoleDef.fromJsomRoleDef(roleDef));\r\n      }\r\n    }\r\n    return newRole;\r\n  }\r\n}\r\n\r\nexport class RoleDef {\r\n  constructor({ name, basePermissions = null }) {\r\n    this.name = name;\r\n    this.basePermissions = basePermissions;\r\n  }\r\n  name;\r\n  basePermissions;\r\n\r\n  static fromRestRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({\r\n      name: roleDef.Name,\r\n      basePermissions: roleDef.BasePermissions,\r\n    });\r\n    Object.assign(newRoleDef, roleDef);\r\n    return newRoleDef;\r\n  }\r\n\r\n  static fromJsomRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({ name: roleDef.get_name() });\r\n    newRoleDef.basePermissions = roleDef.get_basePermissions();\r\n\r\n    return newRoleDef;\r\n  }\r\n}\r\n\r\nexport function SPList(listDef) {\r\n  /*\r\n      Expecting a list definition object in the following format:\r\n        var assignmentListDef = {\r\n        name: \"Assignment\",\r\n        title: \"Assignment\"\r\n      };\r\n    */\r\n\r\n  /*****************************************************************\r\n                                Globals       \r\n    ******************************************************************/\r\n\r\n  var self = this;\r\n\r\n  self.config = {\r\n    def: listDef,\r\n  };\r\n\r\n  /*****************************************************************\r\n                                Common Private Methods       \r\n    ******************************************************************/\r\n  async function init() {\r\n    if (!self.config.fieldSchema) {\r\n      const listEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')?$expand=Fields`;\r\n      const list = await fetchSharePointData(listEndpoint);\r\n      // const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      //const fields = await fetchData(apiEndpoint);\r\n      self.config.guid = list.d.Id;\r\n      self.config.fieldSchema = list.d.Fields.results;\r\n    }\r\n  }\r\n\r\n  init();\r\n\r\n  /*****************************************************************\r\n                                Common Public Methods       \r\n    ******************************************************************/\r\n\r\n  async function setListPermissionsAsync(itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // await executeQuery(currCtx).catch((sender, args) => {\r\n    //   console.warn(\"Unable to get list: \", sender);\r\n    //   return;\r\n    // });\r\n\r\n    return setResourcePermissionsAsync(oList, itemPermissions, reset);\r\n  }\r\n\r\n  function setListPermissions(valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n\r\n    var users = new Array();\r\n    var resolvedGroups = new Array();\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup) {\r\n        resolvedGroups.push([resolvedGroup, vp[1]]);\r\n      } else {\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindItemSucceeded() {\r\n      console.log(\"Successfully found item\");\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      if (reset) {\r\n        oList.resetRoleInheritance();\r\n        oList.breakRoleInheritance(false, false);\r\n        oList\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        oList.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { oList: oList, callback: callback };\r\n\r\n      function onSetListPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        callback(oList);\r\n      }\r\n\r\n      function onSetListPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on List: \" +\r\n            this.oList.get_title() +\r\n            args.get_message() +\r\n            \"\\n\",\r\n          args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetListPermissionsSuccess),\r\n        Function.createDelegate(data, onSetListPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindItemFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to find List: \" + this.oList.get_title + args.get_message(),\r\n        args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      oList: oList,\r\n      users: users,\r\n      resolvedGroups: resolvedGroups,\r\n      callback: callback,\r\n    };\r\n    //let data = { title: oListItem.get_item(\"Title\"), oListItem: oListItem };\r\n\r\n    currCtx.load(oList);\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindItemSucceeded),\r\n      Function.createDelegate(data, onFindItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                createListItem      \r\n    ******************************************************************/\r\n  function mapObjectToListItem(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    if (!Array.isArray(val)) {\r\n      return mapItemToListItem(val);\r\n    }\r\n    return val\r\n      .map((item) => {\r\n        return mapItemToListItem(item);\r\n      })\r\n      .join(\";#\");\r\n  }\r\n\r\n  function mapItemToListItem(item) {\r\n    if (item.ID) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return `${item.ID};#${item.LookupValue ?? \"\"}`;\r\n    }\r\n    if (item.LookupValue) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return item.LookupValue;\r\n    }\r\n    if (item.constructor.getName() == \"Date\") {\r\n      return item.toISOString();\r\n    }\r\n    return item;\r\n  }\r\n\r\n  async function createListItemAsync(entity, folderPath = null) {\r\n    let serverRelFolderPath;\r\n\r\n    if (folderPath) {\r\n      serverRelFolderPath = getServerRelativeFolderPath(folderPath);\r\n      // await ensureFolder(serverRelFolderPath);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      //self.updateConfig();\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n      if (folderPath) {\r\n        itemCreateInfo.set_folderUrl(serverRelFolderPath);\r\n      }\r\n\r\n      const oListItem = oList.addItem(itemCreateInfo);\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onCreateListItemSucceeded() {\r\n        resolve(oListItem.get_id());\r\n      }\r\n\r\n      function onCreateListItemFailed(sender, args) {\r\n        console.error(\"Create Item Failed - List: \" + self.config.def.name);\r\n        console.error(\"ValuePairs\", entity);\r\n        console.error(sender, args);\r\n        reject(sender);\r\n      }\r\n\r\n      const data = { entity, oListItem, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onCreateListItemSucceeded),\r\n        Function.createDelegate(data, onCreateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                                getListItems      \r\n    ******************************************************************/\r\n  function mapListItemToObject(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    let out = {};\r\n    switch (val.constructor.getName()) {\r\n      case \"SP.FieldUserValue\":\r\n        out.LoginName = val.get_email();\r\n      case \"SP.FieldLookupValue\":\r\n        out.ID = val.get_lookupId();\r\n        out.LookupValue = val.get_lookupValue();\r\n        out.Title = val.get_lookupValue();\r\n        break;\r\n      default:\r\n        out = val;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  function getListItems(caml, fields, callback) {\r\n    /*\r\n        Obtain all list items that match the querystring passed by caml.\r\n        */\r\n    var camlQuery = new SP.CamlQuery.createAllItemsQuery();\r\n\r\n    camlQuery.set_viewXml(caml);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var collListItem = oList.getItems(camlQuery);\r\n\r\n    function onGetListItemsSucceeded() {\r\n      var self = this;\r\n      var listItemEnumerator = self.collListItem.getEnumerator();\r\n\r\n      const foundObjects = [];\r\n\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        var listObj = {};\r\n        fields.forEach((field) => {\r\n          var colVal = oListItem.get_item(field);\r\n          //console.log(`SAL: Setting ${field} to`, colVal);\r\n          listObj[field] = Array.isArray(colVal)\r\n            ? colVal.map((val) => mapListItemToObject(val))\r\n            : mapListItemToObject(colVal);\r\n        });\r\n        //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n        // listObj.oListItem = oListItem;\r\n        foundObjects.push(listObj);\r\n      }\r\n      //this.setState({ focusedItems })\r\n      //console.log(\"calling callback get list\");\r\n      callback(foundObjects);\r\n    }\r\n\r\n    function onGetListItemsFailed(sender, args) {\r\n      console.log(\"unsuccessful read\", sender);\r\n\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      collListItem: collListItem,\r\n      callback: callback,\r\n      fields,\r\n      camlQuery,\r\n    };\r\n\r\n    currCtx.load(collListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemsSucceeded),\r\n      Function.createDelegate(data, onGetListItemsFailed)\r\n    );\r\n  }\r\n\r\n  function getListItemsAsync({ fields = null, caml = null }) {\r\n    if (!caml) {\r\n      var caml =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">0</Value>' +\r\n        \"</Eq></Where></Query></View>\";\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getListItems(caml, fields, resolve);\r\n    });\r\n  }\r\n\r\n  function findByIdAsync(id, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        findById(id, fields, resolve);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function getById(id, fields) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})?$Select=${queryFields}&$expand=${expandFields}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    return result.d;\r\n  }\r\n\r\n  async function getListFields() {\r\n    if (!self.config.fieldSchema) {\r\n      const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      const fields = await fetchSharePointData(apiEndpoint);\r\n      self.config.fieldSchema = fields.d.results;\r\n    }\r\n    return self.config.fieldSchema;\r\n  }\r\n\r\n  async function getQueryFields(fields) {\r\n    const queryFields = [];\r\n    const expandFields = [];\r\n\r\n    const listFields = await getListFields();\r\n    fields.map((f) => {\r\n      // TODO: Figure out why FileRef is pretending to be a lookup\r\n      if (f == \"FileRef\") {\r\n        queryFields.push(f);\r\n        return;\r\n      }\r\n\r\n      if (f.includes(\"/\")) {\r\n        queryFields.push(f);\r\n        expandFields.push(f.split(\"/\")[0]);\r\n        return;\r\n      }\r\n      const fieldSchema = listFields.find((lf) => lf.StaticName == f);\r\n      if (!fieldSchema) {\r\n        alert(`Field '${f}' not found on list ${self.config.def.name}`);\r\n        return;\r\n      }\r\n\r\n      const idString = f + \"/ID\";\r\n      let titleString = f + \"/Title\";\r\n      switch (fieldSchema.TypeAsString) {\r\n        case \"LookupMulti\":\r\n        case \"Lookup\":\r\n          titleString = f + \"/\" + fieldSchema.LookupField;\r\n        case \"User\":\r\n          queryFields.push(idString);\r\n          queryFields.push(titleString);\r\n          expandFields.push(f);\r\n          // expandFields.push(titleString);\r\n          break;\r\n        case \"Choice\":\r\n        default:\r\n          queryFields.push(f);\r\n      }\r\n    });\r\n    return [queryFields, expandFields];\r\n  }\r\n\r\n  // { column, value, type = \"LookupValue\" }\r\n  async function findByColumnValueAsync(\r\n    columnFilters,\r\n    { orderByColumn = null, sortAsc },\r\n    { count = null, includePermissions = false, includeFolders = false },\r\n    fields\r\n  ) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n    if (includePermissions) {\r\n      queryFields.push(\"RoleAssignments\");\r\n      queryFields.push(\"HasUniqueRoleAssignments\");\r\n      expandFields.push(\"RoleAssignments\");\r\n    }\r\n    const orderBy = orderByColumn\r\n      ? `$orderby=${orderByColumn} ${sortAsc ? \"asc\" : \"desc\"}`\r\n      : \"\";\r\n    // TODO: fieldfilter should use 'lookupcolumnId' e.g. ServiceTypeId eq 1\r\n    const colFilterArr = columnFilters.map((colFilter) => {\r\n      if (typeof colFilter == \"string\") return colFilter;\r\n\r\n      const value = colFilter.value ? `'${colFilter.value}'` : colFilter.value;\r\n      return `(${colFilter.column} ${colFilter.op ?? \"eq\"} ${value})`; // '${colFilter.value}'\r\n    });\r\n    if (!includeFolders) colFilterArr.push(`FSObjType eq '0'`);\r\n\r\n    const filter = \"$filter=\" + colFilterArr.join(` and `);\r\n\r\n    //const fsObjTypeFilter = `FSObjType eq '0'`;\r\n    // const fieldFilter = `${column} eq '${value}'`;\r\n    // const filter2 = !includeFolders\r\n    //   ? `$filter=(${fieldFilter}) and (${fsObjTypeFilter})`\r\n    //   : `$filter=${fieldFilter}`;\r\n\r\n    const include = \"$select=\" + queryFields;\r\n    const expand = `$expand=` + expandFields;\r\n    const page = count ? `$top=${count}` : \"\";\r\n\r\n    const apiEndpoint =\r\n      `/web/lists/GetByTitle('${self.config.def.title}')/items?` +\r\n      `${include}&${expand}&${orderBy}&${filter}&${page}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    const cursor = {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n\r\n    // if (window.DEBUG) console.log(cursor);\r\n    return cursor;\r\n  }\r\n\r\n  async function loadNextPage(cursor) {\r\n    const result = await fetchSharePointData(cursor._next);\r\n    return {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n  }\r\n\r\n  function findById(id, fields, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n    var oListItem = oList.getItemById(id);\r\n\r\n    function onGetListItemSucceeded() {\r\n      const listObj = {};\r\n      fields.forEach((field) => {\r\n        var colVal = oListItem.get_item(field);\r\n        //console.log(`SAL: Setting ${field} to`, colVal);\r\n        listObj[field] = Array.isArray(colVal)\r\n          ? colVal.map((val) => mapListItemToObject(val))\r\n          : mapListItemToObject(colVal);\r\n      });\r\n      callback(listObj);\r\n    }\r\n\r\n    function onGetListItemFailed(sender, args) {\r\n      console.error(\"SAL: findById - List: \" + self.config.def.name);\r\n      console.error(\"Fields\", this);\r\n      console.error(sender, args);\r\n    }\r\n\r\n    var data = {\r\n      oListItem,\r\n      callback,\r\n      fields,\r\n    };\r\n    currCtx.load(oListItem);\r\n    // currCtx.load(oListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemSucceeded),\r\n      Function.createDelegate(data, onGetListItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                            updateListItem      \r\n    ******************************************************************/\r\n\r\n  function updateListItemAsync(entity) {\r\n    if (!entity?.ID) {\r\n      return false;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(entity.ID);\r\n\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onUpdateListItemsSucceeded() {\r\n        //alert('Item updated!');\r\n        console.log(\"Successfully updated \" + this.oListItem.get_item(\"Title\"));\r\n        resolve();\r\n      }\r\n\r\n      function onUpdateListItemFailed(sender, args) {\r\n        console.error(\"Update Failed - List: \" + self.config.def.name);\r\n        console.error(\"Item Id\", this.oListItem.get_id() ?? \"N/A\");\r\n        console.error(entity);\r\n        console.error(sender, args);\r\n        reject(args);\r\n      }\r\n\r\n      const data = { oListItem, entity, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onUpdateListItemsSucceeded),\r\n        Function.createDelegate(data, onUpdateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            deleteListItem      \r\n    ******************************************************************/\r\n  function deleteListItem(id, callback) {\r\n    //[[\"ColName\", \"Value\"], [\"Col2\", \"Value2\"]]\r\n    //self.callbackDeleteListItem = callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var data = { callback: callback };\r\n    const oListItem = oList.getItemById(id);\r\n    oListItem.deleteObject();\r\n\r\n    function onDeleteListItemsSucceeded(sender, args) {\r\n      //alert('Item updated!');\r\n      callback();\r\n    }\r\n\r\n    function onDeleteListItemsFailed(sender, args) {\r\n      console.error(\r\n        \"sal.SPList.deleteListItem: Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onDeleteListItemsSucceeded),\r\n      Function.createDelegate(data, onDeleteListItemsFailed)\r\n    );\r\n  }\r\n\r\n  async function deleteListItemAsync(id) {\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})`;\r\n    return await fetchSharePointData(apiEndpoint, \"DELETE\", {\r\n      \"If-Match\": \"*\",\r\n    });\r\n    // return new Promise((resolve, reject) => deleteListItem(id, resolve));\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Permissions  \r\n    ******************************************************************/\r\n  /**\r\n   * Documentation - setItemPermissions\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {ItemPermissions} itemPermissions an instance of ItemPermissions\r\n   */\r\n  async function setItemPermissionsAsync(id, itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n\r\n    const oListItem = await getoListItemByIdAsync(id);\r\n\r\n    return setResourcePermissionsAsync(oListItem, itemPermissions, reset);\r\n  }\r\n\r\n  async function setResourcePermissionsAsync(\r\n    oListItem,\r\n    itemPermissions,\r\n    reset\r\n  ) {\r\n    if (reset) {\r\n      oListItem.resetRoleInheritance();\r\n      oListItem.breakRoleInheritance(false, false);\r\n    }\r\n\r\n    // const result = await new Promise((resolve, reject) => {\r\n    //   currCtx.executeQueryAsync(\r\n    //     () => {\r\n    //       resolve();\r\n    //     },\r\n    //     (sender, args) => {\r\n    //       console.error(\r\n    //         \"Failed to break permissions on item: \" +\r\n    //           this.oListItem.get_lookupValue() +\r\n    //           args.get_message(),\r\n    //         args\r\n    //       );\r\n    //       reject();\r\n    //     }\r\n    //   );\r\n    // });\r\n\r\n    for (const role of itemPermissions.roles) {\r\n      const ensuredPrincipalResult = await ensureUserByKeyAsync(\r\n        role.principal.Title\r\n      );\r\n      if (!ensuredPrincipalResult) return;\r\n\r\n      const currCtx2 = new SP.ClientContext.get_current();\r\n      const web = currCtx2.get_web();\r\n\r\n      const oPrincipal = ensuredPrincipalResult.oPrincipal;\r\n\r\n      currCtx2.load(oPrincipal);\r\n\r\n      role.roleDefs.map((roleDef) => {\r\n        const roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx2);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(roleDef.name)\r\n        );\r\n        oListItem.get_roleAssignments().add(oPrincipal, roleDefBindingColl);\r\n      });\r\n\r\n      const data = {};\r\n      await executeQuery(currCtx2).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to set role permissions on item id ${id} for principal ${role.principal.Title} ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n\r\n    if (reset) {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n\r\n      oListItem\r\n        .get_roleAssignments()\r\n        .getByPrincipal(sal.globalConfig.currentUser)\r\n        .deleteObject();\r\n\r\n      await executeQuery(currCtx).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to remove role permissions on item id ${id} for Current User ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  function getoListItemByIdAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(id);\r\n      currCtx.executeQueryAsync(\r\n        () => {\r\n          resolve(oListItem);\r\n        },\r\n        (sender, args) => {\r\n          console.error(\r\n            \"Failed to find item: \" + id + args.get_message(),\r\n            args\r\n          );\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Documentation - getItemPermissionsAsync\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {Function} callback The callback function to execute after\r\n   *  obtaining permissions\r\n   */\r\n  function getItemPermissionsAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var oList = web.get_lists().getByTitle(self.config.def.title);\r\n      var camlQuery = new SP.CamlQuery();\r\n      camlQuery.set_viewXml(\r\n        '<View><Query><Where><Eq><FieldRef Name=\"ID\"/><Value Type=\"Text\">' +\r\n          id +\r\n          \"</Value></Eq></Where></Query></View>\"\r\n      );\r\n\r\n      var oListItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(\r\n        oListItems,\r\n        \"Include(ID, HasUniqueRoleAssignments, RoleAssignments, RoleAssignments.Include(Member, RoleDefinitionBindings))\"\r\n      );\r\n\r\n      function onQuerySuccess() {\r\n        var listItemEnumerator = oListItems.getEnumerator();\r\n\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          var itemPermissions = new ItemPermissions({\r\n            hasUniqueRoleAssignments: oListItem.get_hasUniqueRoleAssignments(),\r\n            roles: [],\r\n          });\r\n\r\n          var roleEnumerator = oListItem.get_roleAssignments().getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            var roleColl = roleEnumerator.get_current();\r\n            const role = Role.fromJsomRole(roleColl);\r\n            // var principal = roleColl.get_member();\r\n\r\n            // const roleDef = {\r\n            //   principal: principalToPeople(principal),\r\n            //   permissions: [],\r\n            // };\r\n\r\n            // const roleDefBindingCollEnumerator = roleColl\r\n            //   .get_roleDefinitionBindings()\r\n            //   .getEnumerator();\r\n            // while (roleDefBindingCollEnumerator.moveNext()) {\r\n            //   const role = roleDefBindingCollEnumerator.get_current();\r\n            //   roleDef.permissions.push(role.get_name());\r\n            // }\r\n            itemPermissions.roles.push(role);\r\n          }\r\n          resolve(itemPermissions);\r\n          break;\r\n        }\r\n      }\r\n\r\n      function onQueryFailed(sender, args) {\r\n        reject(args.get_message());\r\n      }\r\n\r\n      const data = {\r\n        oListItems,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onQuerySuccess),\r\n        Function.createDelegate(data, onQueryFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getListPermissions() {\r\n    const url =\r\n      `/web/lists/getByTitle('${self.config.def.name}')` +\r\n      `?$select=HasUniqueRoleAssignments,RoleAssignments` +\r\n      `&$expand=RoleAssignments/Member,RoleAssignments/RoleDefinitionBindings`;\r\n\r\n    const headers = {\r\n      \"Cache-Control\": \"no-cache\",\r\n    };\r\n    const result = await fetchSharePointData(url, \"GET\", headers);\r\n\r\n    if (!result) return;\r\n\r\n    return ItemPermissions.fromRestResult(result.d);\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Folders          \r\n    ******************************************************************/\r\n\r\n  function getServerRelativeFolderPath(relFolderPath) {\r\n    let builtPath = sal.globalConfig.siteUrl;\r\n\r\n    builtPath += self.config.def.isLib\r\n      ? \"/\" + self.config.def.name\r\n      : \"/Lists/\" + self.config.def.name;\r\n\r\n    if (relFolderPath) {\r\n      builtPath += \"/\" + relFolderPath;\r\n    }\r\n\r\n    return builtPath;\r\n  }\r\n\r\n  function upsertFolderPathAsync(folderPath) {\r\n    if (self.config.def.isLib) {\r\n      return new Promise((resolve, reject) =>\r\n        upsertLibFolderByPath(folderPath, resolve)\r\n      );\r\n    }\r\n    return new Promise((resolve, reject) =>\r\n      upsertListFolderByPath(folderPath, resolve)\r\n    );\r\n  }\r\n\r\n  async function setFolderReadonlyAsync(folderPath) {\r\n    try {\r\n      const currentPerms = await getFolderPermissionsAsync(folderPath);\r\n\r\n      const targetPerms = currentPerms.map((user) => {\r\n        return [user.LoginName, sal.config.siteRoles.roles.RestrictedRead];\r\n      });\r\n      await setFolderPermissionsAsync(folderPath, targetPerms, true);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n    return;\r\n  }\r\n\r\n  async function ensureFolderPermissionsAsync(relFolderPath, targetPerms) {\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const apiEndpoint =\r\n      sal.globalConfig.siteUrl +\r\n      `/_api/web/GetFolderByServerRelativeUrl('${serverRelFolderPath}')/` +\r\n      \"ListItemAllFields/RoleAssignments?$expand=Member,Member/Users,RoleDefinitionBindings\";\r\n\r\n    const response = await fetch(apiEndpoint, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json; odata=verbose\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status == 404) {\r\n        return;\r\n      }\r\n      console.error(response);\r\n    }\r\n    const result = await response.json();\r\n    const permissionResults = result?.d?.results;\r\n    if (!permissionResults) {\r\n      console.warn(\"No results found\", result);\r\n      return;\r\n    }\r\n\r\n    const missingPerms = targetPerms.filter((targetPermPair) => {\r\n      const targetLoginName = targetPermPair[0];\r\n      const targetPerm = targetPermPair[1];\r\n      // find an existing matching permissiont\r\n      const permExists = permissionResults.find((curPerm) => {\r\n        // If the target user isn't the member\r\n        if (curPerm.Member.LoginName != targetLoginName) {\r\n          // Or the member is a group that the target user isn't in\r\n          if (\r\n            !curPerm.Member.Users?.results.find(\r\n              (curUser) => curUser.LoginName == targetLoginName\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // The target principal has permissions assigned, let see if they include the target permission\r\n        if (\r\n          curPerm.RoleDefinitionBindings.results?.find((curBinding) =>\r\n            sal.config.siteRoles.fulfillsRole(curBinding.Name, targetPerm)\r\n          )\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        // Finally, the target principal is assigned, but don't have the appropriate permissions\r\n        return false;\r\n      });\r\n\r\n      return !permExists;\r\n    });\r\n\r\n    console.log(\"Adding missing permissions\", missingPerms);\r\n    if (missingPerms.length)\r\n      await setFolderPermissionsAsync(relFolderPath, missingPerms, false);\r\n\r\n    return;\r\n  }\r\n  /*****************************************************************\r\n                            List Folders          \r\n    ******************************************************************/\r\n  function getFolderContentsAsync(relFolderPath, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      // TODO: everything is the same as getListItems except for the caml query\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n      camlQuery.set_folderServerRelativeUrl(serverRelFolderPath);\r\n      const allItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(allItems, `Include(${fields.join(\", \")})`);\r\n\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const foundObjects = [];\r\n          var listItemEnumerator = allItems.getEnumerator();\r\n          while (listItemEnumerator.moveNext()) {\r\n            var oListItem = listItemEnumerator.get_current();\r\n            var listObj = {};\r\n            fields.forEach((field) => {\r\n              var colVal = oListItem.get_item(field);\r\n              //console.log(`SAL: Setting ${field} to`, colVal);\r\n              listObj[field] = Array.isArray(colVal)\r\n                ? colVal.map((val) => mapListItemToObject(val))\r\n                : mapListItemToObject(colVal);\r\n            });\r\n            //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n            listObj.oListItem = oListItem;\r\n            foundObjects.push(listObj);\r\n          }\r\n          resolve(foundObjects);\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load list folder contents:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderPermissionsAsync(relFolderPath) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const oListItem = await getFolderItemByPath(relFolderPath);\r\n      if (!oListItem) {\r\n        reject(\"Folder item does not exist\");\r\n        return;\r\n      }\r\n      const roles = oListItem.get_roleAssignments();\r\n\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      currCtx.load(oListItem);\r\n      currCtx.load(roles);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const currCtx = new SP.ClientContext.get_current();\r\n          console.log(oListItem);\r\n          const principals = [];\r\n          const bindings = [];\r\n          const roleEnumerator = roles.getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            const role = roleEnumerator.get_current();\r\n            const principal = role.get_member();\r\n            const bindings = role.get_roleDefinitionBindings();\r\n            // get the principal\r\n            currCtx.load(bindings);\r\n            currCtx.load(principal);\r\n            principals.push({ principal: principal, bindings: bindings });\r\n          }\r\n          currCtx.executeQueryAsync(\r\n            // success\r\n            function (sender, args) {\r\n              // alert the title\r\n              //alert(principal.get_title());\r\n\r\n              const logins = principals.map(function ({ principal, bindings }) {\r\n                const principalRoles = [];\r\n                const bindingEnumerator = bindings.getEnumerator();\r\n                while (bindingEnumerator.moveNext()) {\r\n                  const binding = bindingEnumerator.get_current();\r\n                  principalRoles.push(binding.get_name());\r\n                }\r\n                return {\r\n                  ID: principal.get_id(),\r\n                  Title: principal.get_title(),\r\n                  LoginName: principal.get_loginName(),\r\n                  Roles: principalRoles,\r\n                };\r\n              });\r\n              resolve(logins);\r\n            },\r\n            // failure\r\n            function (sender, args) {\r\n              console.warn(\"Unable load folder principals permissions:\");\r\n              console.error(sender);\r\n              console.error(args);\r\n              reject(args);\r\n            }\r\n          );\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load folder permissions:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderItemByPath(relFolderPath) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      var camlq =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><And><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">1</Value>' +\r\n        \"</Eq><Eq>\" +\r\n        '<FieldRef Name=\"FileRef\"/><Value Type=\"Text\">' +\r\n        serverRelFolderPath +\r\n        \"</Value>\" +\r\n        \"</Eq></And></Where></Query><RowLimit>1</RowLimit></View>\";\r\n\r\n      camlQuery.set_viewXml(camlq);\r\n\r\n      const allFolders = oList.getItems(camlQuery);\r\n\r\n      async function onFindItemSucceeded() {\r\n        const foundObjects = [];\r\n        var listItemEnumerator = allFolders.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          // Should be only one item\r\n          const oListItem = listItemEnumerator.get_current();\r\n          foundObjects.push(oListItem);\r\n        }\r\n\r\n        if (!foundObjects) {\r\n          console.warn(\"folder not found\");\r\n          resolve(foundObjects);\r\n        }\r\n\r\n        if (foundObjects.length > 1) {\r\n          console.warn(\"Multiple folders found!\");\r\n          resolve(foundObjects);\r\n        }\r\n        const oListItem = foundObjects[0];\r\n        resolve(oListItem);\r\n      }\r\n\r\n      function onFindItemFailed(sender, args) {\r\n        console.warn(\"Unable load list folder contents:\");\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n      const data = {\r\n        allFolders,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.load(allFolders);\r\n\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onFindItemSucceeded),\r\n        Function.createDelegate(data, onFindItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Document Libraries Folders\r\n    ******************************************************************/\r\n\r\n  /*****************************************************************\r\n                        Folder Creation          \r\n    ******************************************************************/\r\n\r\n  function upsertListFolderByPath(folderPath, callback) {\r\n    var folderArr = folderPath.split(\"/\");\r\n    var idx = 0;\r\n\r\n    var upsertListFolderInner = function (parentPath, folderArr, idx, success) {\r\n      var folderName = folderArr[idx];\r\n      idx++;\r\n      var curPath = folderArr.slice(0, idx).join(\"/\");\r\n      ensureListFolder(\r\n        curPath,\r\n        function (iFolder) {\r\n          if (idx >= folderArr.length) {\r\n            //We've reached the innermost folder and found it exists\r\n            success(iFolder.get_id());\r\n          } else {\r\n            upsertListFolderInner(curPath, folderArr, idx, success);\r\n          }\r\n        },\r\n        function () {\r\n          self.createListFolder(\r\n            folderName,\r\n            function (folderId) {\r\n              if (idx >= folderArr.length) {\r\n                //We've reached the innermost folder and found it exists\r\n                success(folderId);\r\n              } else {\r\n                upsertListFolderInner(curPath, folderArr, idx, success);\r\n              }\r\n            },\r\n            parentPath\r\n          );\r\n        }\r\n      );\r\n    };\r\n    upsertListFolderInner(\"\", folderArr, idx, callback);\r\n  }\r\n\r\n  /**\r\n   * CreateListFolder\r\n   * Creates a folder at the specified path\r\n   * @param {String} folderName\r\n   * @param {Function} callback\r\n   * @param {String} path\r\n   */\r\n  self.createListFolder = function (folderName, callback, path) {\r\n    path = path === undefined ? \"\" : path;\r\n\r\n    // Used for lists, duh\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n    let folderUrl = \"\";\r\n    const itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(folderName);\r\n    if (path) {\r\n      folderUrl =\r\n        sal.globalConfig.siteUrl +\r\n        \"/Lists/\" +\r\n        self.config.def.name +\r\n        \"/\" +\r\n        path;\r\n      itemCreateInfo.set_folderUrl(folderUrl);\r\n    }\r\n\r\n    const newItem = oList.addItem(itemCreateInfo);\r\n    newItem.set_item(\"Title\", folderName);\r\n\r\n    newItem.update();\r\n\r\n    function onCreateFolderSucceeded(sender, args) {\r\n      callback(this.newItem.get_id());\r\n    }\r\n\r\n    function onCreateFolderFailed(sender, args) {\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n\" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    const data = {\r\n      folderName: folderName,\r\n      callback: callback,\r\n      newItem: newItem,\r\n    };\r\n\r\n    currCtx.load(newItem);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateFolderSucceeded),\r\n      Function.createDelegate(data, onCreateFolderFailed)\r\n    );\r\n  };\r\n\r\n  function ensureListFolder(path, onExists, onNonExists) {\r\n    var folderUrl =\r\n      sal.globalConfig.siteUrl + \"/Lists/\" + self.config.def.name + \"/\" + path;\r\n\r\n    var ctx = SP.ClientContext.get_current();\r\n\r\n    // Could also call getFileByServerRelativeUrl() here. Doesn't matter.\r\n    // The way this works is identical for files and folders.\r\n    var folder = ctx.get_web().getFolderByServerRelativeUrl(folderUrl);\r\n    folder.get_listItemAllFields();\r\n    var data = {\r\n      folder: folder,\r\n      path: path,\r\n      onExists: onExists,\r\n      onNonExists: onNonExists,\r\n    };\r\n    ctx.load(folder, \"Exists\", \"Name\");\r\n\r\n    function onQueryFolderSucceeded() {\r\n      if (folder.get_exists()) {\r\n        // Folder exists and isn't hidden from us. Print its name.\r\n        console.log(\r\n          \"Folder \" + folder.get_name() + \" exists in \" + self.config.def.name\r\n        );\r\n        var currCtx = new SP.ClientContext.get_current();\r\n\r\n        var folderItem = folder.get_listItemAllFields();\r\n        function onQueryFolderItemSuccess() {\r\n          onExists(folderItem);\r\n        }\r\n        function onQueryFolderItemFailure(sender, args) {\r\n          console.error(\"Failed to find folder at \" + path, args);\r\n        }\r\n        data = { folderItem: folderItem, path: path, onExists: onExists };\r\n        currCtx.load(folderItem);\r\n        currCtx.executeQueryAsync(\r\n          Function.createDelegate(data, onQueryFolderItemSuccess),\r\n          Function.createDelegate(data, onQueryFolderItemFailure)\r\n        );\r\n      } else {\r\n        console.warn(\"Folder exists but is hidden (security-trimmed) for us.\");\r\n      }\r\n    }\r\n\r\n    function onQueryFolderFailed(sender, args) {\r\n      if (args.get_errorTypeName() === \"System.IO.FileNotFoundException\") {\r\n        // Folder doesn't exist at all.\r\n        console.log(\r\n          \"SAL.SPList.ensureListFolder: \\\r\n          Folder \" +\r\n            path +\r\n            \" does not exist in \" +\r\n            self.config.def.name\r\n        );\r\n        onNonExists();\r\n      } else {\r\n        // An unexpected error occurred.\r\n        console.error(\"Error: \" + args.get_message());\r\n      }\r\n    }\r\n    ctx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryFolderSucceeded),\r\n      Function.createDelegate(data, onQueryFolderFailed)\r\n    );\r\n  }\r\n\r\n  function upsertLibFolderByPath(folderUrl, success) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // TODO: Check if the folder exists before adding it\r\n\r\n    var createFolderInternal = function (parentFolder, folderUrl, success) {\r\n      var ctx = parentFolder.get_context();\r\n      var folderNames = folderUrl.split(\"/\");\r\n      var folderName = folderNames[0];\r\n      var curFolder = parentFolder.get_folders().add(folderName);\r\n      ctx.load(curFolder);\r\n      ctx.executeQueryAsync(\r\n        function () {\r\n          if (folderNames.length > 1) {\r\n            var subFolderUrl = folderNames\r\n              .slice(1, folderNames.length)\r\n              .join(\"/\");\r\n            createFolderInternal(curFolder, subFolderUrl, success);\r\n          } else {\r\n            success(curFolder);\r\n          }\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"error creating new folder\");\r\n          console.error(sender);\r\n          console.error(error);\r\n        }\r\n      );\r\n    };\r\n    createFolderInternal(oList.get_rootFolder(), folderUrl, success);\r\n  }\r\n\r\n  function setFolderPermissionsAsync(folderPath, valuePairs, reset) {\r\n    return new Promise((resolve, reject) => {\r\n      setFolderPermissions(folderPath, valuePairs, resolve, reset);\r\n    });\r\n  }\r\n\r\n  function setFolderPermissions(relFolderPath, valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n    // TODO: Validate that the users exist\r\n    var users = [];\r\n    var resolvedGroups = [];\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const folder = web.getFolderByServerRelativeUrl(serverRelFolderPath);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup?.oGroup) {\r\n        resolvedGroups.push([resolvedGroup.oGroup, vp[1]]);\r\n      } else {\r\n        //This doesn't appear to be a group, let's see if we can find a user\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindFolderSuccess() {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var folderItem = this.folder.get_listItemAllFields();\r\n      if (reset) {\r\n        folderItem.resetRoleInheritance();\r\n        folderItem.breakRoleInheritance(false, false);\r\n        folderItem\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        folderItem.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { folderItem: folderItem, callback: callback };\r\n\r\n      function onSetFolderPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        this.callback(folderItem);\r\n      }\r\n\r\n      function onSetFolderPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on item: \" +\r\n            this.folderItem.get_lookupValue() +\r\n            args.get_message() +\r\n            \"\\n\" +\r\n            args.get_stackTrace(),\r\n          false\r\n        );\r\n      }\r\n\r\n      currCtx.load(folderItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetFolderPermissionsSuccess),\r\n        Function.createDelegate(data, onSetFolderPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindFolderFailure(sender, args) {\r\n      console.error(\r\n        \"Something went wrong setting perms on library folder\",\r\n        args\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      folder: folder,\r\n      users: users,\r\n      callback: callback,\r\n      resolvedGroups: resolvedGroups,\r\n      valuePairs: valuePairs,\r\n      reset: reset,\r\n    };\r\n\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.load(folder);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindFolderSuccess),\r\n      Function.createDelegate(data, onFindFolderFailure)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                  \r\n  ******************************************************************/\r\n\r\n  function showModal(formName, title, args, callback) {\r\n    var id = \"\";\r\n    if (args.id) {\r\n      id = args.id;\r\n    }\r\n    const options = SP.UI.$create_DialogOptions();\r\n\r\n    var listPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    var rootFolder = \"\";\r\n\r\n    if (args.rootFolder) {\r\n      rootFolder = sal.globalConfig.siteUrl + listPath + args.rootFolder;\r\n    }\r\n\r\n    // WARNING: this looks similar to listPath but is different\r\n    var formsPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/forms/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    Object.assign(options, {\r\n      title: title,\r\n      dialogReturnValueCallback: callback,\r\n      args: JSON.stringify(args),\r\n      height: 800,\r\n      url:\r\n        sal.globalConfig.siteUrl +\r\n        formsPath +\r\n        formName +\r\n        \"?ID=\" +\r\n        id +\r\n        \"&Source=\" +\r\n        location.pathname +\r\n        \"&RootFolder=\" +\r\n        rootFolder,\r\n    });\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n\r\n    // SP.SOD.execute(\r\n    //   \"sp.ui.dialog.js\",\r\n    //   \"SP.UI.ModalDialog.showModalDialog\",\r\n    //   options\r\n    // );\r\n  }\r\n\r\n  function showCheckinModal(fileRef, callback) {\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Check in Document\";\r\n    options.height = \"600\";\r\n    options.dialogReturnValueCallback = callback;\r\n\r\n    options.url =\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/checkin.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&FileName=\" +\r\n      fileRef;\r\n\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function checkinWithComment(fileRef, comment) {\r\n    const url = `/web/GetFileByServerRelativeUrl('${fileRef}')/CheckIn(comment='${comment}',checkintype=0)`;\r\n    return fetchSharePointData(url, \"POST\");\r\n  }\r\n\r\n  function showVersionHistoryModal(itemId) {\r\n    return new Promise((resolve) => {\r\n      var options = SP.UI.$create_DialogOptions();\r\n      options.title = \"Version History\";\r\n      options.height = \"600\";\r\n      options.dialogReturnValueCallback = resolve;\r\n\r\n      options.url = getVersionHistoryUrl(itemId);\r\n\r\n      SP.UI.ModalDialog.showModalDialog(options);\r\n    });\r\n  }\r\n\r\n  function getVersionHistoryUrl(itemId) {\r\n    return (\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/15/versions.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&ID=\" +\r\n      itemId\r\n    );\r\n  }\r\n\r\n  function uploadNewDocumentAsync(folderPath, title, args) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          //folder = folder != '/' ? folder : '';\r\n\r\n          var siteString =\r\n            sal.globalConfig.siteUrl == \"/\" ? \"\" : sal.globalConfig.siteUrl;\r\n\r\n          const options = SP.UI.$create_DialogOptions();\r\n          Object.assign(options, {\r\n            title: title,\r\n            dialogReturnValueCallback: resolve,\r\n            args: JSON.stringify(args),\r\n            url:\r\n              siteString +\r\n              \"/_layouts/Upload.aspx?List=\" +\r\n              oList.get_id().toString() +\r\n              \"&RootFolder=\" +\r\n              siteString +\r\n              \"/\" +\r\n              self.config.def.name +\r\n              \"/\" +\r\n              encodeURI(folderPath) +\r\n              \"&Source=\" +\r\n              location.pathname +\r\n              \"&args=\" +\r\n              encodeURI(JSON.stringify(args)),\r\n          });\r\n          //console.log(\"Options url: \" + options.url);\r\n          SP.UI.ModalDialog.showModalDialog(options);\r\n          // SP.SOD.execute(\r\n          //   \"sp.ui.dialog.js\",\r\n          //   \"SP.UI.ModalDialog.showModalDialog\",\r\n          //   options\r\n          // );\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"Error showing file modal: \");\r\n          console.error(sender);\r\n          console.error(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function ensureFolder(relativeFolderPath) {\r\n    const response = await fetchSharePointData(\r\n      `/web/GetFolderByServerRelativeUrl('${relativeFolderPath}')`\r\n    );\r\n    if (response) return true;\r\n\r\n    //else we need to upsert\r\n    // }\r\n\r\n    // async function createFolder(relativeFolderPath) {\r\n    return await fetchSharePointData(\r\n      `/web/folders`,\r\n      \"POST\",\r\n      {\r\n        \"Content-Type\": \"application/json;odata=verbose\",\r\n      },\r\n      {\r\n        body: JSON.stringify({\r\n          __metadata: { type: \"SP.Folder\" },\r\n          ServerRelativeUrl: relativeFolderPath,\r\n        }),\r\n      }\r\n    );\r\n  }\r\n\r\n  const UPLOADCHUNKSIZE = 10485760; // PnPJs\r\n  // const UPLOADCHUNKSIZE = 262144000; // SPO\r\n\r\n  const uploadchunkActionTypes = {\r\n    start: \"startupload\",\r\n    continue: \"continueupload\",\r\n    finish: \"finishupload\",\r\n  };\r\n\r\n  async function uploadFileRestChunking(\r\n    file,\r\n    relFolderPath,\r\n    fileName,\r\n    progress\r\n  ) {\r\n    /* https://sharepoint.stackexchange.com/questions/287334/upload-files-250mb-via-sharepoint-rest-api\r\nhttps://learn.microsoft.com/en-us/previous-versions/office/developer/sharepoint-rest-reference/dn450841(v=office.15)\r\n    */\r\n    const blob = file;\r\n    const chunkSize = UPLOADCHUNKSIZE;\r\n    const fileSize = file.size;\r\n\r\n    const totalBlocks =\r\n      parseInt((fileSize / chunkSize).toString(), 10) +\r\n      (fileSize % chunkSize === 0 ? 1 : 0);\r\n\r\n    const fileRef = relFolderPath + \"/\" + fileName;\r\n\r\n    const jobGuid = getGUID();\r\n    // const jobGuid = crypto.randomUUID\r\n    //   ? crypto.randomUUID()\r\n    //   : \"74493426-fb10-4e47-bc82-120954b81a60\";\r\n\r\n    let currentPointer;\r\n    progress({ currentBlock: 0, totalBlocks });\r\n    currentPointer = await startUpload(\r\n      jobGuid,\r\n      file.slice(0, chunkSize),\r\n      fileRef,\r\n      relFolderPath\r\n    );\r\n\r\n    for (i = 2; i < totalBlocks; i++) {\r\n      progress({ currentBlock: i, totalBlocks });\r\n      currentPointer = await continueUpload(\r\n        jobGuid,\r\n        file.slice(currentPointer, currentPointer + chunkSize),\r\n        currentPointer,\r\n        fileRef\r\n      );\r\n    }\r\n\r\n    progress({ currentBlock: totalBlocks - 1, totalBlocks });\r\n    const result = await finishUpload(\r\n      jobGuid,\r\n      file.slice(currentPointer),\r\n      currentPointer,\r\n      fileRef\r\n    );\r\n\r\n    progress({ currentBlock: totalBlocks, totalBlocks });\r\n\r\n    return result;\r\n  }\r\n\r\n  async function startUpload(uploadId, chunk, fileRef, relFolderPath) {\r\n    const url =\r\n      `/web/getFolderByServerRelativeUrl(@folder)/files/getByUrlOrAddStub(@file)/StartUpload(guid'${uploadId}')?` +\r\n      `&@folder='${relFolderPath}'&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.StartUpload);\r\n  }\r\n\r\n  async function continueUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/ContinueUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.ContinueUpload);\r\n  }\r\n\r\n  async function finishUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/FinishUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  async function uploadFileRest(file, relFolderPath, fileName) {\r\n    return await fetch(\r\n      _spPageContextInfo.webServerRelativeUrl +\r\n        `/_api/web/GetFolderByServerRelativeUrl('${relFolderPath}')/Files/add(url='${fileName}',overwrite=true)`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"same-origin\",\r\n        body: file,\r\n        headers: {\r\n          Accept: \"application/json; odata=verbose\",\r\n          \"Content-Type\": \"application/json;odata=nometadata\",\r\n          \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Uploading File\", response);\r\n        return;\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  async function uploadFileToFolderAndUpdateMetadata(\r\n    file,\r\n    fileName,\r\n    relFolderPath,\r\n    payload,\r\n    progress = null\r\n  ) {\r\n    if (!progress) {\r\n      progress = () => {};\r\n    }\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    if (!(await ensureFolder(serverRelFolderPath))) return;\r\n\r\n    let result = null;\r\n    if (file.size > UPLOADCHUNKSIZE) {\r\n      const job = () =>\r\n        uploadFileRestChunking(file, serverRelFolderPath, fileName, progress);\r\n      result = await uploadQueue.addJob(job);\r\n    } else {\r\n      progress({ currentBlock: 0, totalBlocks: 1 });\r\n      result = await uploadFileRest(file, serverRelFolderPath, fileName);\r\n      progress({ currentBlock: 1, totalBlocks: 1 });\r\n    }\r\n\r\n    await updateUploadedFileMetadata(result.d, payload);\r\n\r\n    // check in\r\n    await checkinWithComment(serverRelFolderPath + \"/\" + fileName, \"\");\r\n\r\n    let itemUri = result.d.ListItemAllFields.__deferred.uri + \"?$select=ID\";\r\n\r\n    const listItem = await fetchSharePointData(itemUri);\r\n    return listItem.d.ID;\r\n  }\r\n\r\n  async function updateUploadedFileMetadata(fileResult, payload) {\r\n    var result = await fetch(fileResult.ListItemAllFields.__deferred.uri, {\r\n      method: \"POST\",\r\n      credentials: \"same-origin\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        Accept: \"application/json; odata=nometadata\",\r\n        \"Content-Type\": \"application/json;odata=nometadata\",\r\n        \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        \"X-HTTP-Method\": \"MERGE\",\r\n        \"If-Match\": \"*\",\r\n      },\r\n    }).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Updating File\", response);\r\n        return;\r\n      }\r\n\r\n      return response;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function copyFiles(sourceFolderPath, destFolderPath, callback, onError) {\r\n    const sourcePath = getServerRelativeFolderPath(sourceFolderPath);\r\n    const destPath = getServerRelativeFolderPath(destFolderPath);\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourcePath);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destPath + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.error(\"Unable to copy files: \", args.get_message());\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    // TODO: this should stay as a static utility instead of list specific\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  // Ensure List/Library exists on the site\r\n  async function ensureList() {\r\n    // Query List Title\r\n    const listInfo = await fetchSharePointData(\r\n      `/web/lists/GetByTitle('${self.config.def.title}')`\r\n    );\r\n  }\r\n\r\n  const publicMembers = {\r\n    findByIdAsync,\r\n    getById,\r\n    findByColumnValueAsync,\r\n    loadNextPage,\r\n    getListItemsAsync,\r\n    createListItemAsync,\r\n    updateListItemAsync,\r\n    deleteListItemAsync,\r\n    setItemPermissionsAsync,\r\n    getItemPermissionsAsync,\r\n    getListPermissions,\r\n    setListPermissionsAsync,\r\n    getFolderContentsAsync,\r\n    upsertFolderPathAsync,\r\n    getServerRelativeFolderPath,\r\n    setFolderReadonlyAsync,\r\n    setFolderPermissionsAsync,\r\n    ensureFolderPermissionsAsync,\r\n    uploadFileToFolderAndUpdateMetadata,\r\n    uploadNewDocumentAsync,\r\n    copyFilesAsync,\r\n    showModal,\r\n    showCheckinModal,\r\n    showVersionHistoryModal,\r\n    getVersionHistoryUrl,\r\n  };\r\n\r\n  return publicMembers;\r\n}\r\n\r\nasync function fetchSharePointData(\r\n  uri,\r\n  method = \"GET\",\r\n  headers = {},\r\n  opts = {},\r\n  responseType = \"json\"\r\n) {\r\n  const siteEndpoint = uri.startsWith(\"http\")\r\n    ? uri\r\n    : sal.globalConfig.siteUrl + \"/_api\" + uri;\r\n  const response = await fetch(siteEndpoint, {\r\n    method,\r\n    headers: {\r\n      Accept: \"application/json; odata=verbose\",\r\n      \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n      ...headers,\r\n    },\r\n    ...opts,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    if (response.status == 404) {\r\n      return;\r\n    }\r\n    console.error(response);\r\n    return;\r\n  }\r\n  try {\r\n    let result;\r\n    switch (responseType) {\r\n      case \"json\":\r\n        return response.json();\r\n        break;\r\n      case \"blob\":\r\n        return response.blob();\r\n        break;\r\n      default:\r\n        return response;\r\n    }\r\n  } catch (e) {\r\n    return;\r\n  }\r\n}\r\n\r\nwindow.fetchSharePointData = fetchSharePointData;\r\n\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* eslint-disable no-bitwise */\r\nfunction getGUID() {\r\n  if (crypto.randomUUID) return crypto.randomUUID();\r\n\r\n  let d = Date.now();\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    const r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\nclass UploadQueue {\r\n  constructor() {}\r\n\r\n  jobs = [];\r\n  _queue = [];\r\n\r\n  enqueue(job) {\r\n    this._queue.push(job);\r\n  }\r\n\r\n  async dequeue() {\r\n    this._queue.shift();\r\n  }\r\n\r\n  async doWork() {\r\n    const job = await this.dequeue();\r\n  }\r\n\r\n  addJob(job) {\r\n    return new Promise((resolve) => {\r\n      this.enqueue(job);\r\n    });\r\n  }\r\n}\r\n\r\nclass JobProcessor {\r\n  constructor(maxConcurrency) {\r\n    this.maxConcurrency = maxConcurrency;\r\n    this.runningJobs = 0;\r\n    this.queue = [];\r\n  }\r\n\r\n  addJob(asyncFunction) {\r\n    return new Promise((resolve, reject) => {\r\n      const job = async () => {\r\n        try {\r\n          const result = await asyncFunction();\r\n          resolve(result);\r\n        } catch (error) {\r\n          reject(error);\r\n        } finally {\r\n          this.runningJobs--;\r\n          this.processQueue();\r\n        }\r\n      };\r\n\r\n      this.queue.push(job);\r\n      this.processQueue();\r\n    });\r\n  }\r\n\r\n  processQueue() {\r\n    while (this.runningJobs < this.maxConcurrency && this.queue.length > 0) {\r\n      const job = this.queue.shift();\r\n      this.runningJobs++;\r\n      job();\r\n    }\r\n  }\r\n}\r\n\r\nconst uploadQueue = new JobProcessor(5);\r\n", "import { sortByTitle } from \"../infrastructure/index.js\";\r\nimport { PeopleModule } from \"../components/fields/PeopleModule.js\";\r\nimport { People } from \"../entities/People.js\";\r\nimport { getUsersByGroupName } from \"../infrastructure/index.js\";\r\nimport { ensureUserByKeyAsync } from \"../infrastructure/sal.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nconst components = {\r\n  view: \"people-view\",\r\n  edit: \"people-edit\",\r\n  new: \"people-edit\",\r\n};\r\n\r\nexport class PeopleField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    // this.pickerOptions = params.pickerOptions ?? {};\r\n    this.spGroupName = params.spGroupName ?? null;\r\n    this.multiple = params.multiple ?? false;\r\n    // this.pickerOptions = params.pickerOptions ?? {};\r\n\r\n    this.Value = this.multiple ? ko.observableArray() : ko.observable();\r\n\r\n    if (ko.isObservable(this.spGroupName)) {\r\n      this.spGroupName.subscribe(this.spGroupNameChangedHandler);\r\n    }\r\n    if (ko.unwrap(this.spGroupName)) {\r\n      this.spGroupNameChangedHandler(ko.unwrap(this.spGroupName));\r\n    }\r\n  }\r\n\r\n  spGroupId = ko.observable();\r\n  userOpts = ko.observableArray();\r\n  expandUsers = ko.observable(false);\r\n\r\n  spGroupNameChangedHandler = async (groupName) => {\r\n    if (!groupName) {\r\n      this.userOpts.removeAll();\r\n      this.spGroupId(null);\r\n    }\r\n\r\n    const group = await ensureUserByKeyAsync(groupName);\r\n    this.spGroupId(group.ID);\r\n    const users = await getUsersByGroupName(groupName);\r\n    this.userOpts(users.sort(sortByTitle));\r\n  };\r\n\r\n  pickerOptions = ko.pureComputed(() => {\r\n    const groupId = ko.unwrap(this.spGroupId);\r\n\r\n    const opts = {\r\n      AllowMultipleValues: this.multiple,\r\n    };\r\n\r\n    if (groupId) opts.SharePointGroupID = groupId;\r\n\r\n    return opts;\r\n  });\r\n\r\n  toString = ko.pureComputed(() => {\r\n    if (!this.multiple) return this.Value()?.Title;\r\n\r\n    return this.Value()?.map((user) => user.Title);\r\n  });\r\n\r\n  set = (val) => {\r\n    if (!this.multiple) {\r\n      this.Value(People.Create(val));\r\n      return;\r\n    }\r\n\r\n    if (!val) {\r\n      this.Value.removeAll();\r\n      return;\r\n    }\r\n\r\n    const vals = val.results ?? val;\r\n\r\n    if (!vals.length) {\r\n      this.Value.removeAll();\r\n      return;\r\n    }\r\n    this.Value(vals.map((u) => People.Create(u)));\r\n  };\r\n\r\n  components = PeopleModule;\r\n}\r\n", "import {\r\n  SearchSelectModule,\r\n  SelectModule,\r\n} from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class SelectField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    const { options, multiple = false, optionsText } = params;\r\n    this._options = options;\r\n\r\n    this.Options = ko.pureComputed(() => {\r\n      return ko.unwrap(options);\r\n    });\r\n\r\n    this.multiple = multiple;\r\n    this.Value = multiple ? ko.observableArray() : ko.observable();\r\n    this.optionsText = optionsText;\r\n\r\n    this.components = this.multiple ? SearchSelectModule : SelectModule;\r\n  }\r\n\r\n  toString = ko.pureComputed(() =>\r\n    this.multiple ? this.Value().join(\", \") : this.Value()\r\n  );\r\n\r\n  get = () => this.Value();\r\n\r\n  set = (val) => {\r\n    if (val && this.multiple) {\r\n      if (Array.isArray(val)) {\r\n        this.Value(val);\r\n      } else {\r\n        this.Value(val.results ?? val.split(\";#\"));\r\n      }\r\n      return;\r\n    }\r\n    this.Value(val);\r\n  };\r\n\r\n  // Options = ko.observableArray();\r\n}\r\n", "import { TextAreaModule } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class TextAreaField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.isRichText = params.isRichText;\r\n    this.attr = params.attr ?? {};\r\n  }\r\n\r\n  components = TextAreaModule;\r\n}\r\n", "import { TextModule } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\n// import ValidationError from \"../primitives/ValidationError.js\";\r\n\r\nexport class TextField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.attr = params.attr ?? {};\r\n    this.options = params.options ?? null;\r\n  }\r\n\r\n  components = TextModule;\r\n}\r\n", "import { Entity } from \"./index.js\";\r\nimport { BaseField } from \"../fields/index.js\";\r\n\r\n/**\r\n * Constrained Entity's are validated based on their declared fields.\r\n * We are expecting user input, so need to validate each input field.\r\n */\r\n\r\nexport class ConstrainedEntity extends Entity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  toJSON = () => {\r\n    const out = {};\r\n    Object.keys(this.FieldMap).map(\r\n      (key) => (out[key] = this.FieldMap[key]?.get())\r\n    );\r\n    return out;\r\n  };\r\n\r\n  fromJSON(inputObj) {\r\n    if (window.DEBUG)\r\n      console.log(\"Setting constrained entity from JSON\", inputObj);\r\n    Object.keys(inputObj).map((key) => this.FieldMap[key]?.set(inputObj[key]));\r\n  }\r\n\r\n  get FieldMap() {\r\n    const fieldMap = {};\r\n    Object.entries(this)\r\n      .filter(([key, val]) => val instanceof BaseField)\r\n      .map(([key, val]) => {\r\n        key = val.systemName ?? key;\r\n        fieldMap[key] = val;\r\n      });\r\n    return fieldMap;\r\n  }\r\n\r\n  FormFields = () => Object.values(this.FieldMap);\r\n\r\n  // Validate the entire entity\r\n  validate = (showErrors = true) => {\r\n    Object.values(this.FieldMap).map(\r\n      (field) => field?.validate && field.validate(showErrors)\r\n    );\r\n    return this.Errors();\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    return Object.values(this.FieldMap)\r\n      .filter((field) => field?.Errors && field.Errors())\r\n      .flatMap((field) => field.Errors());\r\n  });\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  /**\r\n   * Expose methods to generate default new, edit, and view forms\r\n   * for a constrained entity. Uses the constrained\r\n   * entity components.\r\n   *\r\n   * This could be broken into a separate service, but since it's\r\n   * tightly coupled leave it here?\r\n   */\r\n  // static components = {\r\n  //   new: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"edit\",\r\n  //     }),\r\n  //   edit: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"edit\",\r\n  //     }),\r\n  //   view: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"view\",\r\n  //     }),\r\n  // };\r\n}\r\n", "export class DomainError {\r\n  constructor({ source, entity, description }) {\r\n    this.source = source;\r\n    this.entity = entity;\r\n    this.description = description;\r\n  }\r\n}\r\n", "import { Entity } from \"../primitives/index.js\";\r\n\r\nexport class SitePage extends Entity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Created\", \"Author\", \"Modified\", \"Editor\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"SitePages\",\r\n    title: \"Site Pages\",\r\n  };\r\n}\r\n", "export const assetsPath = \"/sites/CGFS/Style Library/apps/car-cap/src\";\r\n", "import { People } from \"../entities/index.js\";\r\nimport { ensureUserByKeyAsync } from \"./index.js\";\r\nimport { assetsPath } from \"../../env.js\";\r\n\r\nko.subscribable.fn.subscribeChanged = function (callback) {\r\n  var oldValue;\r\n  this.subscribe(\r\n    function (_oldValue) {\r\n      oldValue = _oldValue;\r\n    },\r\n    this,\r\n    \"beforeChange\"\r\n  );\r\n\r\n  this.subscribe(function (newValue) {\r\n    callback(newValue, oldValue);\r\n  });\r\n};\r\n\r\nko.observableArray.fn.subscribeAdded = function (callback) {\r\n  this.subscribe(\r\n    function (arrayChanges) {\r\n      const addedValues = arrayChanges\r\n        .filter((value) => value.status == \"added\")\r\n        .map((value) => value.value);\r\n      callback(addedValues);\r\n    },\r\n    this,\r\n    \"arrayChange\"\r\n  );\r\n};\r\n\r\nko.bindingHandlers.searchSelect = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    const { options, selectedOptions, optionsText, onSearchInput } =\r\n      valueAccessor();\r\n\r\n    function populateOpts() {\r\n      const optionItems = ko.unwrap(options);\r\n\r\n      const optionElements = optionItems.map((option) => {\r\n        const optionElement = document.createElement(\"option\");\r\n        ko.selectExtensions.writeValue(optionElement, ko.unwrap(option));\r\n        // optionElement.value = option;\r\n        optionElement.innerText = optionsText(option);\r\n\r\n        if (\r\n          ko\r\n            .unwrap(selectedOptions)\r\n            ?.find((selectedOption) => selectedOption.ID == option.ID)\r\n        ) {\r\n          optionElement.setAttribute(\"selected\", \"\");\r\n        }\r\n        return optionElement;\r\n      });\r\n\r\n      element.append(...optionElements);\r\n    }\r\n\r\n    populateOpts();\r\n\r\n    if (ko.isObservable(options)) {\r\n      options.subscribe(() => populateOpts(), this);\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", (e) => {\r\n      selectedOptions(\r\n        element.selectedOptions.map((opt) => ko.selectExtensions.readValue(opt))\r\n      );\r\n    });\r\n\r\n    if (onSearchInput) {\r\n      ko.utils.registerEventHandler(element, \"input\", (e) => {\r\n        onSearchInput(e.originalEvent.target.searchInputElement.value);\r\n      });\r\n    }\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const { selectedOptions } = valueAccessor();\r\n    const selectedUnwrapped = ko.unwrap(selectedOptions);\r\n\r\n    for (var i = 0; i < element.options.length; i++) {\r\n      const o = element.options[i];\r\n      o.toggleAttribute(\r\n        \"selected\",\r\n        selectedUnwrapped.includes(ko.selectExtensions.readValue(o))\r\n      );\r\n    }\r\n\r\n    // element.selectedOptions = ko.unwrap(selectedOptions);\r\n  },\r\n};\r\n\r\nko.bindingHandlers.people = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    var schema = {};\r\n    schema[\"PrincipalAccountType\"] = \"User\";\r\n    schema[\"SearchPrincipalSource\"] = 15;\r\n    schema[\"ShowUserPresence\"] = true;\r\n    schema[\"ResolvePrincipalSource\"] = 15;\r\n    schema[\"AllowEmailAddresses\"] = true;\r\n    schema[\"AllowMultipleValues\"] = false;\r\n    schema[\"MaximumEntitySuggestions\"] = 50;\r\n    //schema[\"Width\"] = \"280px\";\r\n    schema[\"OnUserResolvedClientScript\"] = async function (elemId, userKeys) {\r\n      //  get reference of People Picker Control\r\n      var pickerControl = SPClientPeoplePicker.SPClientPeoplePickerDict[elemId];\r\n      var observable = valueAccessor();\r\n      var userJSObject = pickerControl.GetControlValueAsJSObject()[0];\r\n      if (!userJSObject) {\r\n        observable(null);\r\n        return;\r\n      }\r\n\r\n      if (userJSObject.IsResolved) {\r\n        if (userJSObject.Key == observable()?.LoginName) return;\r\n        var user = await ensureUserByKeyAsync(userJSObject.Key);\r\n        var person = new People(user);\r\n        observable(person);\r\n      }\r\n    };\r\n\r\n    // TODO: Minor - accept schema settings as options\r\n    //var mergedOptions = Object.assign(schema, obs.schemaOpts);\r\n\r\n    //  Initialize the Control, MS enforces to pass the Element ID hence we need to provide\r\n    //  ID to our element, no other options\r\n    SPClientPeoplePicker_InitStandaloneControlWrapper(element.id, null, schema);\r\n    // const helpDiv = document.createElement(\"div\");\r\n    // helpDiv.innerHTML = \"Search surname first e.g. Smith, John\";\r\n    // helpDiv.classList.add(\"fst-italic\", \"fw-lighter\");\r\n    // element.appendChild(helpDiv);\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var pickerControl =\r\n      SPClientPeoplePicker.SPClientPeoplePickerDict[element.id + \"_TopSpan\"];\r\n    var userValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n    if (!userValue) {\r\n      // Clear the form\r\n      pickerControl?.DeleteProcessedUser();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      userValue &&\r\n      !pickerControl\r\n        .GetAllUserInfo()\r\n        .find((pickerUser) => pickerUser.DisplayText == userValue.LookupValue)\r\n    ) {\r\n      pickerControl.AddUserKeys(\r\n        userValue.LoginName ?? userValue.LookupValue ?? userValue.Title\r\n      );\r\n    }\r\n  },\r\n};\r\n\r\nko.bindingHandlers.dateField = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {},\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {},\r\n};\r\n\r\nko.bindingHandlers.downloadLink = {\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var path = valueAccessor();\r\n    var replaced = path.replace(/:([A-Za-z_]+)/g, function (_, token) {\r\n      return ko.unwrap(viewModel[token]);\r\n    });\r\n    element.href = replaced;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.files = {\r\n  init: function (element, valueAccessor) {\r\n    function addFiles(fileList) {\r\n      var value = valueAccessor();\r\n      if (!fileList.length) {\r\n        value.removeAll();\r\n        return;\r\n      }\r\n\r\n      const existingFiles = ko.unwrap(value);\r\n      const newFileList = [];\r\n      for (let file of fileList) {\r\n        if (!existingFiles.find((exFile) => exFile.name == file.name))\r\n          newFileList.push(file);\r\n      }\r\n      ko.utils.arrayPushAll(value, newFileList);\r\n      return;\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", function () {\r\n      addFiles(element.files);\r\n    });\r\n\r\n    const label = element.closest(\"label\");\r\n    if (!label) return;\r\n\r\n    ko.utils.registerEventHandler(label, \"dragover\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragenter\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.add(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragleave\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.remove(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"drop\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let dt = event.originalEvent.dataTransfer;\r\n      let files = dt.files;\r\n      addFiles(files);\r\n    });\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const value = valueAccessor();\r\n    if (!value().length && element.files.length) {\r\n      // clear all files\r\n      element.value = null;\r\n      return;\r\n    }\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggleClick = {\r\n  init: function (element, valueAccessor, allBindings) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      var classToToggle = allBindings.get(\"toggleClass\");\r\n      var classContainer = allBindings.get(\"classContainer\");\r\n      var containerType = allBindings.get(\"containerType\");\r\n\r\n      if (containerType && containerType == \"sibling\") {\r\n        $(element)\r\n          .nextUntil(classContainer)\r\n          .each(function () {\r\n            $(this).toggleClass(classToToggle);\r\n          });\r\n      } else if (containerType && containerType == \"doc\") {\r\n        var curIcon = $(element).attr(\"src\");\r\n        if (curIcon == \"/_layouts/images/minus.gif\")\r\n          $(element).attr(\"src\", \"/_layouts/images/plus.gif\");\r\n        else $(element).attr(\"src\", \"/_layouts/images/minus.gif\");\r\n\r\n        if ($(element).parent() && $(element).parent().parent()) {\r\n          $(element)\r\n            .parent()\r\n            .parent()\r\n            .nextUntil(classContainer)\r\n            .each(function () {\r\n              $(this).toggleClass(classToToggle);\r\n            });\r\n        }\r\n      } else if (containerType && containerType == \"any\") {\r\n        if ($(\".\" + classToToggle).is(\":visible\"))\r\n          $(\".\" + classToToggle).hide();\r\n        else $(\".\" + classToToggle).show();\r\n      } else $(element).find(classContainer).toggleClass(classToToggle);\r\n    });\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggles = {\r\n  init: function (element, valueAccessor) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      value(!value());\r\n    });\r\n  },\r\n};\r\n\r\nconst fromPathTemplateLoader = {\r\n  loadTemplate: function (name, templateConfig, callback) {\r\n    if (templateConfig.fromPath) {\r\n      // TODO: Minor - fix error catching and fallback flow\r\n      fetch(assetsPath + templateConfig.fromPath)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\r\n              `Error Fetching HTML Template - ${response.statusText}`\r\n            );\r\n          }\r\n          return response.text();\r\n        })\r\n        .catch((error) => {\r\n          if (!templateConfig.fallback) return;\r\n          console.warn(\r\n            \"Primary template not found, attempting fallback\",\r\n            templateConfig\r\n          );\r\n          fetch(assetsPath + templateConfig.fallback)\r\n            .then((response) => {\r\n              if (!response.ok) {\r\n                throw new Error(\r\n                  `Error Fetching fallback HTML Template - ${response.statusText}`\r\n                );\r\n              }\r\n              return response.text();\r\n            })\r\n            .then((text) =>\r\n              ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            );\r\n        })\r\n        .then((text) =>\r\n          text\r\n            ? ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            : null\r\n        );\r\n    } else {\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathTemplateLoader);\r\n\r\nconst fromPathViewModelLoader = {\r\n  loadViewModel: function (name, viewModelConfig, callback) {\r\n    if (viewModelConfig.viaLoader) {\r\n      // console.log(\"loading module\", name);\r\n      const module = import(assetsPath + viewModelConfig.viaLoader).then(\r\n        (module) => {\r\n          // console.log(\"imported module\", name);\r\n          const viewModelConstructor = module.default;\r\n          // We need a createViewModel function, not a plain constructor.\r\n          // We can use the default loader to convert to the\r\n          // required format.\r\n          ko.components.defaultLoader.loadViewModel(\r\n            name,\r\n            viewModelConstructor,\r\n            callback\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      // Unrecognized config format. Let another loader handle it.\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathViewModelLoader);\r\n", "export const html = String.raw;\r\n\r\nexport function registerComponent({\r\n  name,\r\n  folder,\r\n  module = null,\r\n  moduleFilename = null,\r\n  template: templateFilename,\r\n}) {\r\n  if (ko.components.isRegistered(name)) {\r\n    return;\r\n  }\r\n  if (moduleFilename || module) {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n      viewModel: module ?? {\r\n        viaLoader: `/components/${folder}/${moduleFilename}.js`,\r\n      },\r\n    });\r\n  } else {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport function directRegisterComponent(name, { template, viewModel = null }) {\r\n  ko.components.register(name, {\r\n    template,\r\n    viewModel,\r\n  });\r\n}\r\n\r\nexport function registerFieldComponent({\r\n  name,\r\n  components,\r\n  viewModel = null,\r\n  folder = null,\r\n}) {\r\n  // register both our view and edit\r\n  folder = folder ?? name;\r\n\r\n  Object.keys(components).map((view) => {\r\n    const componentName = components[view];\r\n    if (ko.components.isRegistered(componentName)) {\r\n      return;\r\n    }\r\n\r\n    // See if we already have this element in the dom\r\n    const elementName = `field-` + componentName;\r\n    const fieldViewElement = document.getElementById(elementName);\r\n\r\n    if (!viewModel) {\r\n      debugger;\r\n    }\r\n    ko.components.register(componentName, {\r\n      template: fieldViewElement\r\n        ? {\r\n            element: fieldViewElement,\r\n          }\r\n        : {\r\n            fromPath: `/sal/components/fields/${folder}/${name}${view}.html`,\r\n          },\r\n      viewModel: viewModel ?? {\r\n        viaLoader: `/sal/components/fields/${folder}/${name}Module.js`,\r\n      },\r\n    });\r\n  });\r\n}\r\n", "import { getGroupUsers } from \"./sal.js\";\r\n\r\nexport async function getUsersByGroupName(groupName) {\r\n  const users = await getGroupUsers(groupName);\r\n\r\n  if (!users) return [];\r\n\r\n  return users.map((userProps) => new People(userProps));\r\n}\r\n", "export const html = String.raw;\r\n\r\nexport const ROLES = {\r\n  ADMINTYPE: {\r\n    USER: \"\",\r\n    QO: \"qo\",\r\n    QTM: \"qtm\",\r\n    QTMB: \"qtm-b\",\r\n  },\r\n  SUBMITTER: \"submitter\",\r\n  COORDINATOR: \"coordinator\",\r\n  IMPLEMENTOR: \"implementor\", // This person is able push the record forward\r\n  ACTIONRESPONSIBLEPERSON: \"actionresponsibleperson\",\r\n  QSO: \"qso\",\r\n  QAO: \"qao\",\r\n};\r\n\r\nexport const PLANTYPE = {\r\n  CAP: \"CAP\",\r\n  CAR: \"CAR\",\r\n};\r\n\r\nexport const SUPPORTINGDOCUMENTTYPES = {\r\n  SUPPORT: \"Support\",\r\n  EFFECTIVENESS: \"Effectiveness\",\r\n};\r\n\r\nexport const LOCATION = {\r\n  ALL: \"All\",\r\n  CHARLESTON: \"Charleston\",\r\n  BANGKOK: \"Bangkok\",\r\n  WASHINGTON: \"Washington\",\r\n  PARIS: \"Paris\",\r\n  SOFIA: \"Sofia\",\r\n  MANILA: \"Manila\",\r\n};\r\n\r\nexport const ACTIONSTATES = {\r\n  PLANAPPROVAL: \"Pending Plan Approval\",\r\n  INPROGRESS: \"In progress\",\r\n  COMPLETED: \"Completed\",\r\n  COMPLETEDAPPROVAL: \"Completed: Requires Approval\",\r\n  QSOAPPROVAL: \"Requires Approval QSO\",\r\n  QAOAPPROVAL: \"Requires Approval QAO\",\r\n  QTMAPPROVAL: \"Requires Approval QTM\",\r\n};\r\n\r\nexport const EFFECTIVENESSREASONS = {\r\n  NOTEFFECTIVE: \"Not Effective\",\r\n  LACKOFEVIDENCE: \"Lack of Evidence\",\r\n};\r\n\r\nexport const SITEROLEGROUPS = {\r\n  USER: {\r\n    GROUPNAME: \"Continuous Improvement Visitors\",\r\n    DISPLAYNAME: \"USER\",\r\n    ROLE: \"\",\r\n  },\r\n  QOS: { GROUPNAME: \"QOs\", DISPLAYNAME: \"QSO/QAO\", ROLE: \"qo\" },\r\n  QOSTEMP: { GROUPNAME: \"QOsTemp\", DISPLAYNAME: \"QSOs/QAOs\", ROLE: \"qo\" },\r\n  QTM: { GROUPNAME: \"QTM\", DISPLAYNAME: \"QTM\", ROLE: \"qtm\" },\r\n  QTMB: { GROUPNAME: \"QTM B\", DISPLAYNAME: \"QTM B\", ROLE: \"qtm-b\" },\r\n};\r\n\r\nexport const stageDescriptions = {\r\n  Editing: {\r\n    stage: \"Editing\",\r\n    description: \"CAR has been rejected by Quality Owner, to be closed by QTM.\",\r\n    stageNum: 1,\r\n    progress: \"5%\",\r\n  },\r\n  ProblemApprovalQTMB: {\r\n    actionTaker: ROLES.ADMINTYPE.QTMB,\r\n    stage: \"Pending QTM-B Problem Approval\",\r\n    description: \"CAR originated in CGFS-B, problem must be approved by QTM-B.\",\r\n    stageNum: 1,\r\n    progress: \"5%\",\r\n    next: function () {\r\n      return \"ProblemApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      return \"Editing\";\r\n    },\r\n  },\r\n  ProblemApprovalQTM: {\r\n    actionTaker: ROLES.ADMINTYPE.QTM,\r\n    stage: \"Pending QTM Problem Approval\",\r\n    description: \"CAR problem must be approved by QTM.\",\r\n    stageNum: 1,\r\n    progress: \"10%\",\r\n    next: function () {\r\n      return \"ProblemApprovalQSO\";\r\n    },\r\n    onReject: function () {\r\n      return \"Editing\";\r\n    },\r\n  },\r\n  ProblemApprovalQSO: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Problem Approval\",\r\n    description: \"CAR problem must be approved by QSO\",\r\n    stageNum: 1,\r\n    progress: \"15%\",\r\n    next: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n    onReject: function () {\r\n      return \"ProblemApprovalQAO\";\r\n    },\r\n  },\r\n  ProblemApprovalQAO: {\r\n    actionTaker: ROLES.QAO,\r\n    stage: \"Pending QAO Problem Approval\",\r\n    description: \"CAR rejected by QSO, problem must be approved by QAO\",\r\n    stageNum: 1,\r\n    progress: \"20%\",\r\n    next: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n    onReject: function () {\r\n      return \"Editing\";\r\n    },\r\n  },\r\n  DevelopingActionPlan: {\r\n    actionTaker: ROLES.IMPLEMENTOR,\r\n    stage: \"Developing Action Plan\",\r\n    description:\r\n      \"Initiator or CAR/CAP Coordinator must create an action plan. Add at least one action to continue.\",\r\n    stageNum: 2,\r\n    progress: \"25%\",\r\n    next: function () {\r\n      return \"PlanApprovalQSO\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  PlanApprovalQSO: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Plan Approval\",\r\n    description: \"Quality Owner must approve the action plan.\",\r\n    stageNum: 2,\r\n    progress: \"33%\",\r\n    next: function () {\r\n      if (vm.selectedRecord.CGFSLocation() == LOCATIONS.BANGKOK) {\r\n        return \"PlanApprovalQTMB\";\r\n      }\r\n      return \"PlanApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  PlanApprovalQSOAction: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Plan Approval: Action\",\r\n    description:\r\n      \"An action has been edited, the quality owner must approve it.\",\r\n    stageNum: 2,\r\n    progress: \"33%\",\r\n    next: function () {\r\n      if (vm.selectedRecord.CGFSLocation() == LOCATIONS.BANGKOK) {\r\n        return \"PlanApprovalQTMB\";\r\n      }\r\n      return \"PlanApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  PlanApprovalQTMB: {\r\n    actionTaker: ROLES.ADMINTYPE.QTMB,\r\n    stage: \"Pending QTM-B Plan Approval\",\r\n    description: \"QTM-B must approve the action plan.\",\r\n    stageNum: 2,\r\n    progress: \"40%\",\r\n    next: function () {\r\n      return \"PlanApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  PlanApprovalQTM: {\r\n    actionTaker: ROLES.ADMINTYPE.QTM,\r\n    stage: \"Pending QTM Plan Approval\",\r\n    description: \"QTM must approve the action plan.\",\r\n    stageNum: 2,\r\n    progress: \"40%\",\r\n    next: function () {\r\n      return \"ImplementingActionPlan\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  ImplementingActionPlan: {\r\n    actionTaker: ROLES.IMPLEMENTOR,\r\n    stage: \"Implementing Action Plan\",\r\n    description:\r\n      \"Responsible party must complete action items.  When all actions are completed, CAR/CAP Coordinator proposes Target Verification Date to move to Stage 4.\",\r\n    stageNum: 3,\r\n    progress: \"50%\",\r\n    next: function () {\r\n      return \"ImplementationApproval\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  ImplementationApproval: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Implementation Approval\",\r\n    description:\r\n      \"Quality Owner must sign off on completion of action plan and effectiveness verification target date.\",\r\n    stageNum: 3,\r\n    progress: \"63%\",\r\n    next: function () {\r\n      return \"EffectivenessSubmission\";\r\n    },\r\n    onReject: function () {\r\n      return \"ImplementingActionPlan\";\r\n    },\r\n  },\r\n  EffectivenessSubmission: {\r\n    actionTaker: ROLES.IMPLEMENTOR,\r\n    stage: \"Pending Effectiveness Submission\",\r\n    description:\r\n      \"The user must provide proof of effectiveness and submit this record.\",\r\n    stageNum: 4,\r\n    progress: \"75%\",\r\n    next: function () {\r\n      return \"EffectivenessApprovalQSO\";\r\n    },\r\n    onReject: function () {\r\n      return \"ImplementingActionPlan\";\r\n    },\r\n  },\r\n  EffectivenessSubmissionRejected: {\r\n    actionTaker: ROLES.IMPLEMENTOR,\r\n    stage: \"Pending Effectiveness Submission: Rejected\",\r\n    description:\r\n      \"The user must provide additional proof of effectiveness and re-submit this record.\",\r\n    stageNum: 4,\r\n    progress: \"75%\",\r\n  },\r\n  EffectivenessApprovalQSO: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Effectiveness Approval\",\r\n    description: \"The Quality Owner must approve the proof of effectiveness.\",\r\n    stageNum: 4,\r\n    progress: \"80%\",\r\n    next: function () {\r\n      if (vm.selectedRecord.CGFSLocation() == LOCATIONS.BANGKOK) {\r\n        return \"EffectivenessApprovalQTMB\";\r\n      }\r\n      return \"EffectivenessApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      var rejectReason = $(\"#selectEffectivenessRejectReason\").val();\r\n\r\n      switch (rejectReason) {\r\n        case \"Lack of Evidence\":\r\n          return \"EffectivenessSubmissionRejected\";\r\n        case \"Not Effective\":\r\n          return \"DevelopingActionPlan\";\r\n      }\r\n    },\r\n  },\r\n  EffectivenessApprovalQTMB: {\r\n    actionTaker: ROLES.ADMINTYPE.QTMB,\r\n    stage: \"Pending QTM-B Effectiveness Approval\",\r\n    description:\r\n      \"This record originated in Bangkok, and effectiveness must be approved at QTM-B.\",\r\n    stageNum: 4,\r\n    progress: \"85%\",\r\n  },\r\n  EffectivenessApprovalQTM: {\r\n    actionTaker: ROLES.ADMINTYPE.QTM,\r\n    stage: \"Pending QTM Effectiveness Approval\",\r\n    description: \"The QTM must approve the proof of effectiveness.\",\r\n    stageNum: 4,\r\n    progress: \"90%\",\r\n  },\r\n  ClosedAccepted: {\r\n    stage: \"Closed: Accepted\",\r\n    description:\r\n      \"This action plan has been completed and the verification accepted.\",\r\n    stageNum: 5,\r\n    progress: \"100%\",\r\n  },\r\n  ClosedRejected: {\r\n    stage: \"Closed: Rejected\",\r\n    description: \"This action plan has been rejected by the QTM.\",\r\n    stageNum: 5,\r\n    progress: \"100%\",\r\n  },\r\n  ClosedRecalled: {\r\n    stage: \"Closed: Closed by Submitter\",\r\n    description: \"This action plan has been closed by the submitter.\",\r\n    stageNum: 5,\r\n    progress: \"100%\",\r\n  },\r\n};\r\n", "import { ACTIONSTATES } from \"../constants.js\";\r\nimport {\r\n  DateField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class Action extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  PendingApproval = ko.pureComputed(() => {\r\n    [\r\n      ACTIONSTATES.QSOAPPROVAL,\r\n      ACTIONSTATES.QAOAPPROVAL,\r\n      ACTIONSTATES.QTMAPPROVAL,\r\n    ].includes(this.ImplementationStatus.Value());\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Plan #\",\r\n    isEditable: false,\r\n  });\r\n\r\n  ActionID = new TextField({\r\n    displayName: \"Action ID\",\r\n    isEditable: false,\r\n  });\r\n\r\n  ActionDescription = new TextAreaField({\r\n    displayName: \"Action Description\",\r\n    isRequired: true,\r\n    isRichText: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  TargetDate = new DateField({\r\n    displayName: \"Target Date\",\r\n    isRequired: true,\r\n  });\r\n\r\n  ActionResponsiblePerson = new PeopleField({\r\n    displayName: \"Action Responsible Person\",\r\n    isRequired: true,\r\n  });\r\n\r\n  RevisionCount = new TextField({\r\n    displayName: \"Revision Count\",\r\n    isEditable: false,\r\n    attr: {\r\n      type: \"number\",\r\n    },\r\n  });\r\n\r\n  ImplementationStatus = new SelectField({\r\n    displayName: \"Status\",\r\n    options: Object.values(ACTIONSTATES),\r\n    isEditable: false,\r\n  });\r\n\r\n  ImplementationDate = new DateField({\r\n    displayName: \"Implementation Date\",\r\n    isEditable: false,\r\n  });\r\n\r\n  PreviousActionDescription = new TextAreaField({\r\n    displayName: \"Previous Action Description\",\r\n    isRequired: false,\r\n    isRichText: true,\r\n    classList: [\"min-w-full\"],\r\n    isEditable: false,\r\n    isVisible: this.PendingApproval,\r\n  });\r\n\r\n  PreviousTargetDate = new DateField({\r\n    displayName: \"Previous Target Date\",\r\n    isRequired: false,\r\n    isEditable: false,\r\n    isVisible: this.PendingApproval,\r\n  });\r\n\r\n  PreviousActionResponsiblePerson = new PeopleField({\r\n    displayName: \"Previous Action Responsible Person\",\r\n    isRequired: false,\r\n    isEditable: false,\r\n    isVisible: this.PendingApproval,\r\n  });\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ActionID\",\r\n      \"ActionDescription\",\r\n      \"TargetDate\",\r\n      \"ActionResponsiblePerson\",\r\n      \"RevisionCount\",\r\n      \"ImplementationStatus\",\r\n      \"ImplementationDate\",\r\n      \"PrevImplementationStatus\",\r\n      \"PreviousActionDescription\",\r\n      \"PreviousTargetDate\",\r\n      \"PreviousActionResponsiblePerson\",\r\n    ],\r\n    New: [\r\n      \"ActionID\",\r\n      \"ActionDescription\",\r\n      \"TargetDate\",\r\n      \"ActionResponsiblePerson\",\r\n    ],\r\n    Edit: [\r\n      \"ActionDescription\",\r\n      \"TargetDate\",\r\n      \"ActionResponsiblePerson\",\r\n      \"RevisionCount\",\r\n      \"ImplementationStatus\",\r\n    ],\r\n    EditApproval: [\r\n      \"ActionDescription\",\r\n      \"TargetDate\",\r\n      \"ActionResponsiblePerson\",\r\n      \"RevisionCount\",\r\n      \"ImplementationStatus\",\r\n      \"PreviousActionDescription\",\r\n      \"PreviousTargetDate\",\r\n      \"PreviousActionResponsiblePerson\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"CAP_Actions\",\r\n    title: \"CAP_Actions\",\r\n  };\r\n}\r\n", "export const businessOfficeStore = ko.observableArray();\r\n\r\nexport const sourcesStore = ko.observableArray();\r\n", "import { businessOfficeStore, sourcesStore } from \"../infrastructure/store.js\";\r\nimport {\r\n  CheckboxField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n  DateField,\r\n  LookupField,\r\n  dateFieldTypes,\r\n} from \"../sal/fields/index.js\";\r\nimport { PLANTYPE, LOCATION } from \"../constants.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport { BusinessOffice, RECORDSOURCETYPES } from \"./index.js\";\r\nimport { appContext } from \"../infrastructure/app-db-context.js\";\r\n\r\nexport class Plan extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  isCAP = ko.pureComputed(() => {\r\n    return ko.unwrap(this.RecordType.Value) == PLANTYPE.CAP;\r\n  });\r\n\r\n  isCAR = ko.pureComputed(() => {\r\n    return ko.unwrap(this.RecordType.Value) == PLANTYPE.CAR;\r\n  });\r\n\r\n  isSelfInitiated = ko.pureComputed(() => {\r\n    return ko.unwrap(this.SelfInitiated.Value) == \"Yes\";\r\n  });\r\n\r\n  isSelfInitiatedCAR = ko.pureComputed(() => {\r\n    return (\r\n      ko.unwrap(this.RecordType.Value) == PLANTYPE.CAR &&\r\n      ko.unwrap(this.SelfInitiated.Value) == \"Yes\"\r\n    );\r\n  });\r\n\r\n  sourceOptions = ko.pureComputed(() => {\r\n    let recordTypeSources = sourcesStore()?.filter(\r\n      (source) =>\r\n        source.RecordType.Value() == RECORDSOURCETYPES.BOTH ||\r\n        source.RecordType.Value() == this.RecordType.Value()\r\n    );\r\n\r\n    if (this.isSelfInitiatedCAR()) {\r\n      recordTypeSources = recordTypeSources.filter(\r\n        (source) => source.SelfInitiated.Value() == this.SelfInitiated.Value()\r\n      );\r\n    }\r\n\r\n    return recordTypeSources.map((source) => source.Title.toString());\r\n  });\r\n\r\n  Active = new CheckboxField({\r\n    displayName: \"Active\",\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Item #\",\r\n    isEditable: false,\r\n  });\r\n\r\n  // NEW FORM\r\n\r\n  RecordType = new SelectField({\r\n    displayName: \"Record Type\",\r\n    options: [\"CAR\", \"CAP\"],\r\n    isRequired: true,\r\n  });\r\n\r\n  Source = new SelectField({\r\n    displayName: \"Source\",\r\n    options: this.sourceOptions,\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  BusinessOffice = new LookupField({\r\n    displayName: \"Business Office\",\r\n    type: BusinessOffice,\r\n    options: businessOfficeStore,\r\n    appContext: () => appContext,\r\n    isRequired: true,\r\n  });\r\n\r\n  CGFSLocation = new SelectField({\r\n    displayName: \"Location\",\r\n    options: Object.values(LOCATION),\r\n    isRequired: true,\r\n  });\r\n\r\n  QSO = new PeopleField({\r\n    displayName: \"Quality Segment Owner\",\r\n    isRequired: true,\r\n  });\r\n\r\n  QSOName = new TextField({\r\n    displayName: \"QSO Name\",\r\n    isVisible: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  QAO = new PeopleField({\r\n    displayName: \"Quality Area Owner\",\r\n    isRequired: true,\r\n  });\r\n\r\n  QAOName = new TextField({\r\n    displayName: \"QAO Name\",\r\n    isVisible: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  Subject = new TextField({\r\n    displayName: \"Subject\",\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  // CAR\r\n\r\n  SelfInitiated = new SelectField({\r\n    displayName: \"Self Initiated\",\r\n    options: [\"Yes\", \"No\"],\r\n    defaultValue: \"Yes\",\r\n    instructions: \"Are you opening this on behalf of your own business office?\",\r\n    isRequired: this.isCAR,\r\n    isVisible: this.isCAR,\r\n  });\r\n\r\n  ProblemDescription = new TextAreaField({\r\n    displayName: \"Problem Description\",\r\n    isRequired: this.isCAR,\r\n    isVisible: this.isCAR,\r\n    classList: [\"min-w-full\"],\r\n    isRichText: true,\r\n  });\r\n\r\n  ContainmentAction = new TextAreaField({\r\n    displayName: \"Containment Action\",\r\n    isRequired: this.isSelfInitiatedCAR,\r\n    isVisible: this.isSelfInitiatedCAR,\r\n    classList: [\"min-w-full\"],\r\n    isRichText: true,\r\n  });\r\n\r\n  ContainmentActionDate = new DateField({\r\n    displayName: \"Containment Action Date\",\r\n    isRequired: this.isSelfInitiatedCAR,\r\n    isVisible: this.isSelfInitiatedCAR,\r\n    type: dateFieldTypes.date,\r\n  });\r\n\r\n  RootCauseDetermination = new TextAreaField({\r\n    displayName: \"Root Cause Determination\",\r\n  });\r\n  // CAP\r\n\r\n  OFIDescription = new TextAreaField({\r\n    displayName: \"Opportunity for Improvement\",\r\n    isRequired: this.isCAP,\r\n    isVisible: this.isCAP,\r\n    classList: [\"min-w-full\"],\r\n    isRichText: true,\r\n  });\r\n\r\n  DiscoveryDataAnalysis = new TextAreaField({\r\n    displayName: \"Data, Discovery, and Analysis\",\r\n    isRequired: this.isCAP,\r\n    isVisible: this.isCAP,\r\n    classList: [\"min-w-full\"],\r\n    isRichText: true,\r\n  });\r\n\r\n  // Other\r\n\r\n  SubmittedDate = new DateField({\r\n    displayName: \"Submitted On\",\r\n  });\r\n\r\n  ProcessStage = new SelectField({\r\n    displayName: \"Status\",\r\n  });\r\n\r\n  PreviousStage = new TextField({\r\n    displayName: \"Previous Stage\",\r\n    isVisible: false,\r\n    isEditable: false,\r\n  });\r\n\r\n  NextTargetDate = new DateField({\r\n    displayName: \"Next Target Date\",\r\n  });\r\n\r\n  ProblemResolverName = new PeopleField({\r\n    displayName: \"CAR/CAP Coordinator\",\r\n  });\r\n\r\n  CoordinatorName = new TextField({\r\n    displayName: \"CAR/CAP Coordinator Name\",\r\n    isVisible: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  CloseDate = new DateField({\r\n    displayName: \"Closed On\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  CancelReason = new TextAreaField({\r\n    displayName: \"Cancellation Reason\",\r\n    instructions: \"Please provide a reason for cancelling this plan.\",\r\n    isRichText: true,\r\n    classList: [\"min-w-full\"],\r\n    isRequired: true,\r\n  });\r\n\r\n  ExtensionCount = new TextField({\r\n    displayName: \"Extension Count\",\r\n  });\r\n\r\n  OfficeImpactBool = new CheckboxField({\r\n    displayName:\r\n      \"Has Impact on Office Risks, Mitigations, or Internal Controls\",\r\n  });\r\n\r\n  OfficeImpactDesc = new TextAreaField({\r\n    displayName: \"Office Impact Description\",\r\n  });\r\n\r\n  ImplementationTargetDate = new DateField({\r\n    displayName: \"Implementation Target Date\",\r\n  });\r\n\r\n  QSOImplementAdjudicationDate = new DateField({\r\n    displayName: \"QSO Implementation Adjudication Date\",\r\n  });\r\n\r\n  EffectivenessVerificationTargetD = new DateField({\r\n    displayName: \"Effectiveness Verification Target Date\",\r\n  });\r\n\r\n  EffectivenessDescription = new TextAreaField({\r\n    displayName: \"Effectiveness Description\",\r\n  });\r\n\r\n  Author = new PeopleField({\r\n    displayName: \"Submitted By\",\r\n  });\r\n\r\n  AuthorName = new TextField({\r\n    displayName: \"Submitted By Name\",\r\n    isVisible: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  flatten() {\r\n    const plan = this;\r\n    console.log(\"Flattening Plan: \", plan.Title.Value());\r\n\r\n    const coordinatorName = ko.unwrap(plan.ProblemResolverName.Value)?.Title;\r\n    plan.CoordinatorName.Value(coordinatorName);\r\n\r\n    const qaoName = ko.unwrap(plan.QAO.Value)?.Title;\r\n    plan.QAOName.Value(qaoName);\r\n\r\n    const qsoName = ko.unwrap(plan.QSO.Value)?.Title;\r\n    plan.QSOName.Value(qsoName);\r\n\r\n    const authorName = ko.unwrap(plan.Author.Value)?.Title;\r\n    plan.AuthorName.Value(authorName);\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"Active\",\r\n      \"RecordType\",\r\n      \"SelfInitiated\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QSOName\",\r\n      \"QAO\",\r\n      \"QAOName\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SubmittedDate\",\r\n      \"ProblemResolverName\",\r\n      \"CoordinatorName\",\r\n      \"Subject\",\r\n      \"SelfInitiated\",\r\n      \"Source\",\r\n      \"SimilarNoncomformityBool\",\r\n      \"SimilarNoncomformityDesc\",\r\n      \"RootCauseDetermination\",\r\n      \"ProcessStage\",\r\n      \"PreviousStage\",\r\n      \"NextTargetDate\",\r\n      \"ExtensionCount\",\r\n      \"ImplementationTargetDate\",\r\n      \"OfficeImpactBool\",\r\n      \"OfficeImpactDesc\",\r\n      \"QSOImplementAdjudicationDate\",\r\n      \"EffectivenessVerificationTargetD\",\r\n      \"EffectivenessDescription\",\r\n      \"CancelReason\",\r\n      \"CloseDate\",\r\n      \"Author\",\r\n      \"AuthorName\",\r\n    ],\r\n    View: [\r\n      \"Title\",\r\n      \"Active\",\r\n      \"RecordType\",\r\n      \"SelfInitiated\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSOName\",\r\n      \"QAOName\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SubmittedDate\",\r\n      \"CoordinatorName\",\r\n      \"Subject\",\r\n      \"SelfInitiated\",\r\n      \"Source\",\r\n      \"SimilarNoncomformityBool\",\r\n      \"SimilarNoncomformityDesc\",\r\n      \"ProcessStage\",\r\n      \"PreviousStage\",\r\n      \"NextTargetDate\",\r\n      \"AuthorName\",\r\n    ],\r\n    New: [\r\n      \"RecordType\",\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QAO\",\r\n      \"Subject\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SelfInitiated\",\r\n      \"ProblemDescription\",\r\n      \"ContainmentAction\",\r\n      \"ContainmentActionDate\",\r\n    ],\r\n    QTMEditForm: [\r\n      \"Title\",\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QAO\",\r\n      \"Subject\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SelfInitiated\",\r\n      \"ProblemDescription\",\r\n      \"ContainmentAction\",\r\n      \"ContainmentActionDate\",\r\n      \"ProblemResolverName\",\r\n    ],\r\n    QTMEditSubmit: [\r\n      \"Title\",\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QSOName\",\r\n      \"QAO\",\r\n      \"QAOName\",\r\n      \"Subject\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SelfInitiated\",\r\n      \"ProblemDescription\",\r\n      \"ContainmentAction\",\r\n      \"ContainmentActionDate\",\r\n      \"ProblemResolverName\",\r\n      \"CoordinatorName\",\r\n    ],\r\n    SubmitterEditForm: [\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QAO\",\r\n      \"ProblemDescription\",\r\n    ],\r\n    SubmitterEditSubmit: [\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QSOName\",\r\n      \"QAO\",\r\n      \"QAOName\",\r\n      \"ProblemDescription\",\r\n    ],\r\n    Cancel: [\"CancelReason\"],\r\n    CancelSubmit: [\r\n      \"Active\",\r\n      \"CancelReason\",\r\n      \"ProcessStage\",\r\n      \"CloseDate\",\r\n      \"PreviousStage\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"CAP_Main\",\r\n    title: \"CAP_Main\",\r\n  };\r\n}\r\n", "import { PeopleField, TextField } from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport { LOCATION } from \"../constants.js\";\r\n\r\nexport class BusinessOffice extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n  });\r\n\r\n  QAO = new PeopleField({\r\n    displayName: \"Quality Area Ownew\",\r\n  });\r\n\r\n  QSO_Charleston = new PeopleField({\r\n    displayName: \"QSO Charleston\",\r\n  });\r\n\r\n  QSO_Bangkok = new PeopleField({\r\n    displayName: \"QSO Bangkok\",\r\n  });\r\n\r\n  QSO_Washington = new PeopleField({\r\n    displayName: \"QSO Washington\",\r\n  });\r\n\r\n  QSO_Paris = new PeopleField({\r\n    displayName: \"QSO Paris\",\r\n  });\r\n\r\n  QSO_Sofia = new PeopleField({\r\n    displayName: \"QSO Sofia\",\r\n  });\r\n\r\n  QSO_Manilla = new PeopleField({\r\n    displayName: \"QSO Manilla\",\r\n  });\r\n\r\n  getQSOByLocation(location) {\r\n    switch (location) {\r\n      case LOCATION.CHARLESTON:\r\n        return this.QSO_Charleston;\r\n      case LOCATION.BANGKOK:\r\n        return this.QSO_Bangkok;\r\n      case LOCATION.WASHINGTON:\r\n        return this.QSO_Washington;\r\n      case LOCATION.PARIS:\r\n        return this.QSO_Paris;\r\n      case LOCATION.SOFIA:\r\n        return this.QSO_Sofia;\r\n      case LOCATION.MANILA:\r\n        return this.QSO_Manilla;\r\n    }\r\n  }\r\n\r\n  // QSO_ = new PeopleField({\r\n  //     displayName: \"QSO \"\r\n  // })\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"QAO\",\r\n      \"QSO_Charleston\",\r\n      \"QSO_Bangkok\",\r\n      \"QSO_Washington\",\r\n      \"QSO_Paris\",\r\n      \"QSO_Sofia\",\r\n      \"QSO_Manila\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Business_Office\",\r\n    title: \"Business_Office\",\r\n  };\r\n}\r\n", "import {\r\n  DateField,\r\n  dateFieldTypes,\r\n  PeopleField,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class Notification extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Subject\",\r\n    isRequired: true,\r\n  });\r\n\r\n  To = new TextField({\r\n    displayName: \"To\",\r\n    isRequired: true,\r\n  });\r\n\r\n  CC = new TextField({\r\n    displayName: \"To\",\r\n    isRequired: true,\r\n  });\r\n\r\n  BCC = new TextField({\r\n    displayName: \"To\",\r\n    isRequired: true,\r\n  });\r\n\r\n  Subject = new TextField({\r\n    displayName: \"Subject\",\r\n    isRequired: true,\r\n  });\r\n\r\n  Body = new TextAreaField({\r\n    displayName: \"Body\",\r\n    isRequired: true,\r\n    isRichText: true,\r\n  });\r\n\r\n  Sent = new DateField({\r\n    displayName: \"Sent On\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  static FromTemplate({ title, to, cc = null, bcc = null, subject, body }) {\r\n    const notification = new Notification();\r\n    notification.Title.Value(title);\r\n    notification.To.Value(sanitizeEmails(to));\r\n    notification.CC.Value(sanitizeEmails(cc));\r\n    notification.BCC.Value(sanitizeEmails(bcc));\r\n    notification.Subject.Value(subject);\r\n    notification.Body.Value(body);\r\n    return notification;\r\n  }\r\n\r\n  static Views = {\r\n    All: [\"To\", \"CC\", \"BCC\", \"Title\", \"Subject\", \"Body\", \"Sent\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Notifications\",\r\n    title: \"Notifications\",\r\n  };\r\n}\r\n\r\nfunction sanitizeEmails(emails) {\r\n  if (!emails) return;\r\n  return [...new Set(emails.filter((n) => n))].join(\";\");\r\n}\r\n", "import { CheckboxField, SelectField, TextField } from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport const RECORDSOURCETYPES = { CAR: \"CAR\", CAP: \"CAP\", BOTH: \"BOTH\" };\r\n\r\nexport class RecordSource extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n  });\r\n\r\n  RecordType = new SelectField({\r\n    displayName: \"Record Type\",\r\n    options: Object.values(RECORDSOURCETYPES),\r\n  });\r\n\r\n  SelfInitiated = new CheckboxField({\r\n    displayName: \"Self Initiated\",\r\n  });\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"RecordType\", \"SelfInitiated\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Record_Sources\",\r\n    title: \"Record_Sources\",\r\n  };\r\n}\r\n", "import { EFFECTIVENESSREASONS } from \"../constants.js\";\r\nimport {\r\n  CheckboxField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class Rejection extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  showEffectivenessReason = ko.pureComputed(() => {\r\n    return this.Stage.Value();\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Plan ID\",\r\n    isEditable: false,\r\n  });\r\n\r\n  RejectionId = new TextField({\r\n    displayName: \"Rejection ID\",\r\n    isEditable: false,\r\n  });\r\n\r\n  //   EffectivenessReason = new SelectField({\r\n  //     displayName: \"Effectiveness Deficiency\",\r\n  //     options: Object.values(EFFECTIVENESSREASONS)\r\n  //   })\r\n\r\n  Reason = new TextAreaField({\r\n    displayName: \"Rejection Reason\",\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  Stage = new TextField({\r\n    displayName: \"Stage\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Rejector = new TextField({\r\n    displayName: \"Rejected By\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Active = new CheckboxField({\r\n    displayName: \"Active\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Created = new DateField({\r\n    displayName: \"Rejected On\",\r\n    type: dateFieldTypes.datetime,\r\n    isEditable: false,\r\n  });\r\n\r\n  Modified = new DateField({\r\n    displayName: \"Modified On\",\r\n    type: dateFieldTypes.datetime,\r\n    isEditable: false,\r\n  });\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"RejectionId\",\r\n      \"Reason\",\r\n      \"Stage\",\r\n      \"Rejector\",\r\n      \"Active\",\r\n      \"Created\",\r\n      \"Modified\",\r\n    ],\r\n    New: [\"Title\", \"RejectionId\", \"Reason\", \"Stage\", \"Rejector\", \"Active\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Rejections\",\r\n    title: \"Rejections\",\r\n  };\r\n}\r\n", "import { TextAreaField, TextField } from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class RootCauseWhy extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Number = new TextField({\r\n    displayName: \"Number\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Question = new TextAreaField({\r\n    displayName: \"Question\",\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  Answer = new TextAreaField({\r\n    displayName: \"Answer\",\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Number\", \"Question\", \"Answer\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Root_Cause_Why\",\r\n    title: \"Root_Cause_Why\",\r\n  };\r\n}\r\n", "import { SUPPORTINGDOCUMENTTYPES } from \"../constants.js\";\r\nimport {\r\n  DateField,\r\n  dateFieldTypes,\r\n  PeopleField,\r\n  SelectField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class SupportingDocument extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Record = new TextField({\r\n    displayName: \"Plan Number\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n  });\r\n\r\n  FileName = new TextField({\r\n    displayName: \"Name\",\r\n    systemName: \"FileLeafRef\",\r\n  });\r\n\r\n  DocType = new SelectField({\r\n    displayName: \"Document Type\",\r\n    options: Object.values(SUPPORTINGDOCUMENTTYPES),\r\n    isRequired: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  FileRef = new TextField({\r\n    displayName: \"File Link\",\r\n    systemName: \"FileRef\",\r\n  });\r\n\r\n  Modified = new DateField({\r\n    displayName: \"Modified\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  Editor = new PeopleField({\r\n    displayName: \"Modified By\",\r\n  });\r\n\r\n  Created = new DateField({\r\n    displayName: \"Created\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  Author = new PeopleField({\r\n    displayName: \"Created By\",\r\n  });\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Record\",\r\n      \"Title\",\r\n      \"FileLeafRef\",\r\n      \"DocType\",\r\n      \"FileRef\",\r\n      \"Modified\",\r\n      \"Editor\",\r\n      \"Created\",\r\n      \"Author\",\r\n    ],\r\n    Edit: [\"Record\", \"Title\", \"FileLeafRef\", \"DocType\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"SupportDocumentLibrary\",\r\n    title: \"SupportDocumentLibrary\",\r\n    isLib: true,\r\n  };\r\n}\r\n", "export class Result {\r\n  constructor(value) {\r\n    this.value = value;\r\n  }\r\n\r\n  value;\r\n  error;\r\n\r\n  get isSuccess() {\r\n    return !this.error;\r\n  }\r\n\r\n  get isFailure() {\r\n    return !this.isSuccess;\r\n  }\r\n\r\n  static Success(value) {\r\n    return new Result(value);\r\n  }\r\n\r\n  static Failure(error) {\r\n    const result = new Result();\r\n    result.error = error;\r\n  }\r\n}\r\n", "import { SitePage } from \"./entities/index.js\";\r\nimport { SPList, copyFileAsync, ensurePerson } from \"./infrastructure/index.js\";\r\nimport { Result } from \"./shared/index.js\";\r\n\r\nconst DEBUG = false;\r\n\r\nexport class DbContext {\r\n  constructor() {}\r\n\r\n  SitePages = new EntitySet(SitePage);\r\n\r\n  utilities = {\r\n    copyFileAsync,\r\n    ensurePerson,\r\n  };\r\n\r\n  _virtualSets = new Map();\r\n\r\n  Set = (entityType) => {\r\n    const key = entityType.ListDef.name;\r\n\r\n    // If we have a defined entityset, return that\r\n    const set = Object.values(this)\r\n      .filter((val) => val.constructor.name == EntitySet.name)\r\n      .find((set) => set.ListDef?.name == key);\r\n    if (set) return set;\r\n\r\n    if (!this._virtualSets.has(key)) {\r\n      const newSet = new EntitySet(entityType);\r\n      this._virtualSets.set(key, newSet);\r\n      return newSet;\r\n    }\r\n    return this._virtualSets.get(key);\r\n  };\r\n}\r\n\r\nexport class CachedEntitySet {\r\n  constructor(entityType) {\r\n    this.entitySet = new EntitySet(entityType);\r\n\r\n    this.AllDeclaredFields = this.entitySet.AllDeclaredFields;\r\n  }\r\n  _cache = ko.observable({});\r\n\r\n  FindById = async (id, fields = this.AllDeclaredFields) => {};\r\n}\r\n\r\nexport class EntitySet {\r\n  constructor(entityType) {\r\n    if (!entityType.ListDef) {\r\n      console.error(\"Missing entityType listdef for\", entityType);\r\n      return;\r\n    }\r\n\r\n    // Check if the object we passed in defines a ListDef\r\n    this.entityType = entityType;\r\n\r\n    try {\r\n      const allFieldsSet = new Set();\r\n      entityType.Views?.All?.map((field) => allFieldsSet.add(field));\r\n\r\n      // TODO: this is bombing due to circular dependencies,\r\n      // all fields need to be in View\r\n      const newEntity = new this.entityType();\r\n      if (newEntity.FieldMap) {\r\n        Object.keys(newEntity.FieldMap).map((field) => allFieldsSet.add(field));\r\n      }\r\n      // const fieldMapKeysSet = new Set(...);\r\n      // entityType.Views.All.map((field) => fieldMapKeysSet.add(field));\r\n      this.AllDeclaredFields = [...allFieldsSet];\r\n    } catch (e) {\r\n      console.warn(\"Could not instantiate\", entityType), console.warn(e);\r\n      this.AllDeclaredFields = entityType.Views?.All ?? [];\r\n    }\r\n\r\n    this.ListDef = entityType.ListDef;\r\n    this.Views = entityType.Views;\r\n    this.Title = entityType.ListDef.title;\r\n    this.Name = entityType.ListDef.name;\r\n\r\n    this.ListRef = new SPList(entityType.ListDef);\r\n\r\n    this.entityConstructor =\r\n      this.entityType.FindInStore || this.entityType.Create || this.entityType;\r\n  }\r\n\r\n  // Queries\r\n  FindById = async (id, fields = this.AllDeclaredFields) => {\r\n    // Hit our cache first\r\n\r\n    const result = await this.ListRef.getById(id, fields);\r\n    if (!result) return null;\r\n    const newEntity = new this.entityType(result);\r\n    mapObjectToEntity(result, newEntity);\r\n    return newEntity;\r\n  };\r\n\r\n  FindByTitle = async (title, fields = this.AllDeclaredFields) => {\r\n    // Hit our cache first\r\n\r\n    const result = await this.FindByColumnValue(\r\n      [{ column: \"Title\", value: title }],\r\n      {},\r\n      {},\r\n      fields\r\n    );\r\n\r\n    return result;\r\n  };\r\n\r\n  // TODO: Feature - Queries should return options to read e.g. toList, first, toCursor\r\n  /**\r\n   * Takes an array of columns and filter values with an optional comparison operator\r\n   * @param {[{column, op?, value}]} columnFilters\r\n   * @param {*} param1\r\n   * @param {*} param2\r\n   * @param {*} fields\r\n   * @param {*} includeFolders\r\n   * @returns\r\n   */\r\n  FindByColumnValue = async (\r\n    columnFilters,\r\n    { orderByColumn, sortAsc },\r\n    { count = null, includePermissions = false, includeFolders = false },\r\n    fields = this.AllDeclaredFields\r\n  ) => {\r\n    // if we pass in a count, we are expecting a cursor result\r\n    const returnCursor = count != null;\r\n    count = count ?? 5000;\r\n    // else, we should apply a count of 5000 and keep fetching\r\n\r\n    const results = await this.ListRef.findByColumnValueAsync(\r\n      columnFilters,\r\n      { orderByColumn, sortAsc },\r\n      { count, includePermissions, includeFolders },\r\n      fields\r\n    );\r\n\r\n    let cursor = {\r\n      _next: results._next,\r\n      results: results.results.map((item) => {\r\n        const newEntity = new this.entityConstructor(item);\r\n        mapObjectToEntity(item, newEntity);\r\n        return newEntity;\r\n      }),\r\n    };\r\n\r\n    if (returnCursor) {\r\n      return cursor;\r\n    }\r\n\r\n    const resultObj = {\r\n      results: cursor.results,\r\n    };\r\n\r\n    while (cursor._next) {\r\n      cursor = await this.LoadNextPage(cursor);\r\n      resultObj.results = resultObj.results.concat(cursor.results);\r\n    }\r\n\r\n    return resultObj;\r\n  };\r\n\r\n  LoadNextPage = async (cursor) => {\r\n    const results = await this.ListRef.loadNextPage(cursor);\r\n    return {\r\n      _next: results._next,\r\n      results: results.results.map((item) => {\r\n        const newEntity = new this.entityType(item);\r\n        mapObjectToEntity(item, newEntity);\r\n        return newEntity;\r\n      }),\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Return all items in list\r\n   */\r\n  ToList = async (refresh = false) => {\r\n    const fields = this.Views.All;\r\n    const results = await this.ListRef.getListItemsAsync({ fields });\r\n    const allItems = results.map((item) => {\r\n      let entityToLoad = new this.entityType(item);\r\n      mapObjectToEntity(item, entityToLoad);\r\n      return entityToLoad;\r\n    });\r\n    return allItems;\r\n  };\r\n\r\n  LoadEntity = async function (entity, refresh = false) {\r\n    if (!entity.ID) {\r\n      console.error(\"entity missing Id\", entity);\r\n      return false;\r\n    }\r\n\r\n    const result = await this.ListRef.getById(\r\n      entity.ID,\r\n      this.AllDeclaredFields\r\n    );\r\n    if (!result) return null;\r\n\r\n    mapObjectToEntity(result, entity);\r\n    return entity;\r\n  };\r\n\r\n  // Mutators\r\n  AddEntity = async function (entity, folderPath) {\r\n    const creationfunc = mapEntityToObject.bind(this);\r\n    const writeableEntity = creationfunc(entity, this.AllDeclaredFields);\r\n\r\n    if (DEBUG) console.log(writeableEntity);\r\n    const newId = await this.ListRef.createListItemAsync(\r\n      writeableEntity,\r\n      folderPath\r\n    );\r\n    mapObjectToEntity({ ID: newId }, entity);\r\n    return Result.Success(entity);\r\n  };\r\n\r\n  UpdateEntity = async function (entity, fields = null) {\r\n    const writeableEntity = mapEntityToObject.bind(this)(entity, fields);\r\n    writeableEntity.ID =\r\n      typeof entity.ID == \"function\" ? entity.ID() : entity.ID;\r\n    if (DEBUG) console.log(writeableEntity);\r\n    const result = await this.ListRef.updateListItemAsync(writeableEntity);\r\n    return Result.Success(result);\r\n  };\r\n\r\n  RemoveEntity = async function (entity) {\r\n    if (!entity.ID) return false;\r\n    await this.ListRef.deleteListItemAsync(entity.ID);\r\n    return true;\r\n  };\r\n\r\n  RemoveEntityById = function (entityId) {\r\n    return this.ListRef.deleteListItemAsync(entityId);\r\n  };\r\n\r\n  // Permissions\r\n  GetItemPermissions = function (entity) {\r\n    return this.ListRef.getItemPermissionsAsync(entity.ID);\r\n  };\r\n\r\n  SetItemPermissions = async function (entity, valuePairs, reset = false) {\r\n    // const salValuePairs = valuePairs\r\n    //   .filter((vp) => vp[0] && vp[1])\r\n    //   .map((vp) => [vp[0].getKey(), vp[1]]);\r\n    return this.ListRef.setItemPermissionsAsync(entity.ID, valuePairs, reset);\r\n  };\r\n\r\n  GetRootPermissions = function () {\r\n    return this.ListRef.getListPermissions();\r\n  };\r\n\r\n  SetRootPermissions = async function (itemPermissions, reset) {\r\n    // const valuePairs = itemPermissions.getValuePairs();\r\n    await this.ListRef.setListPermissionsAsync(itemPermissions, reset);\r\n  };\r\n\r\n  // Folder Methods\r\n  GetFolderUrl = function (relFolderPath = \"\") {\r\n    return this.ListRef.getServerRelativeFolderPath(relFolderPath);\r\n  };\r\n\r\n  GetItemsByFolderPath = async function (\r\n    folderPath,\r\n    fields = this.AllDeclaredFields\r\n  ) {\r\n    //return this.ListRef.getFolderContentsAsync(folderPath, fields);\r\n    const results = await this.ListRef.getFolderContentsAsync(\r\n      folderPath,\r\n      fields\r\n    );\r\n    return results.map((result) => {\r\n      const newEntity = new this.entityType(result);\r\n      mapObjectToEntity(result, newEntity);\r\n      return newEntity;\r\n    });\r\n  };\r\n\r\n  UpsertFolderPath = async function (folderPath) {\r\n    return this.ListRef.upsertFolderPathAsync(folderPath);\r\n  };\r\n\r\n  RemoveFolderByPath = async function (folderPath) {\r\n    const itemResults = await this.FindByColumnValue(\r\n      [{ column: \"FileLeafRef\", value: folderPath }],\r\n      {},\r\n      {},\r\n      [\"ID\", \"Title\", \"FileLeafRef\"],\r\n      true\r\n    );\r\n    const entities = itemResults.results ?? [];\r\n    for (const entity of entities) {\r\n      await this.RemoveEntityById(entity.ID);\r\n    }\r\n  };\r\n\r\n  // Permissions\r\n  SetFolderReadOnly = async function (relFolderPath) {\r\n    return this.ListRef.setFolderReadonlyAsync(relFolderPath);\r\n  };\r\n\r\n  SetFolderPermissions = async function (folderPath, valuePairs, reset = true) {\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].getKey(), vp[1]]);\r\n    return this.ListRef.setFolderPermissionsAsync(\r\n      folderPath,\r\n      salValuePairs,\r\n      reset\r\n    );\r\n  };\r\n\r\n  EnsureFolderPermissions = async function (relFolderPath, valuePairs) {\r\n    // Slightly more expensive operation to verify a user has the required permissions\r\n    // before adding them. This will cut down on the number of unique permissions in the\r\n    // system since a user may already have the permission via group membership.\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].LoginName ?? vp[0].Title, vp[1]]);\r\n    return this.ListRef.ensureFolderPermissionsAsync(\r\n      relFolderPath,\r\n      salValuePairs\r\n    );\r\n  };\r\n\r\n  // Other Functions\r\n  // Upload file directly from browser \"File\" object e.g. from input field\r\n  UploadFileWithEntity = async function ({\r\n    file,\r\n    entity,\r\n    view,\r\n    folderPath,\r\n    progress,\r\n  }) {\r\n    const filename = entity.FileName.Value();\r\n    const updates = mapEntityToObject.bind(this)(\r\n      entity,\r\n      view ?? this.AllDeclaredFields\r\n    );\r\n\r\n    const itemId = await this.ListRef.uploadFileToFolderAndUpdateMetadata(\r\n      file,\r\n      filename,\r\n      folderPath,\r\n      updates,\r\n      progress\r\n    );\r\n\r\n    await this.LoadEntity(entity);\r\n\r\n    return Result.Success(entity);\r\n  };\r\n\r\n  UploadFileToFolderAndUpdateMetadata = async function (\r\n    file,\r\n    filename,\r\n    folderPath,\r\n    updates,\r\n    progress\r\n  ) {\r\n    const itemId = await this.ListRef.uploadFileToFolderAndUpdateMetadata(\r\n      file,\r\n      filename,\r\n      folderPath,\r\n      updates,\r\n      progress\r\n    );\r\n    const item = await this.ListRef.getById(itemId, this.AllDeclaredFields);\r\n    const newEntity = new this.entityConstructor(item);\r\n    mapObjectToEntity(item, newEntity);\r\n    return newEntity;\r\n  };\r\n\r\n  // Open file upload Modal\r\n  UploadNewDocument = async function (folderPath, args) {\r\n    return this.ListRef.uploadNewDocumentAsync(\r\n      folderPath,\r\n      \"Attach a New Document\",\r\n      args\r\n    );\r\n  };\r\n\r\n  CopyFolderContents = async function (sourceFolder, targetFolder) {\r\n    return this.ListRef.copyFilesAsync(sourceFolder, targetFolder);\r\n  };\r\n\r\n  // Form Methods\r\n  ShowForm = async function (name, title, args) {\r\n    return new Promise((resolve, reject) =>\r\n      this.ListRef.showModal(name, title, args, resolve)\r\n    );\r\n  };\r\n\r\n  CheckInDocument = async function (fileRef) {\r\n    return new Promise((resolve) =>\r\n      this.ListRef.showCheckinModal(fileRef, resolve)\r\n    );\r\n  };\r\n\r\n  EnsureList = async function () {};\r\n}\r\n\r\nfunction mapObjectToEntity(inputObject, targetEntity) {\r\n  if (DEBUG)\r\n    console.log(\r\n      `ApplicationDBContext: ${targetEntity.constructor.name}: `,\r\n      inputObject\r\n    );\r\n  if (!inputObject || !targetEntity) return;\r\n  // Takes an object and attempts to map it to the target entity\r\n  Object.keys(inputObject).forEach((key) => {\r\n    mapValueToEntityProperty(key, inputObject[key], targetEntity);\r\n  });\r\n}\r\n\r\nfunction mapValueToEntityProperty(propertyName, inputValue, targetEntity) {\r\n  if (DEBUG)\r\n    console.log(\r\n      `ApplicationDBContext: ${targetEntity.constructor.name}.${propertyName} to ${inputValue}`\r\n    );\r\n  //1. Check if the targetEntity has a fieldmapping for this property\r\n  if (targetEntity.FieldMap && targetEntity.FieldMap[propertyName]) {\r\n    mapObjectToViewField(inputValue, targetEntity.FieldMap[propertyName]);\r\n    return;\r\n  }\r\n  // 2. This is just a regular property, set it\r\n  if (\r\n    targetEntity[propertyName] &&\r\n    typeof targetEntity[propertyName] == \"function\"\r\n  ) {\r\n    targetEntity[propertyName](inputValue);\r\n    return;\r\n  }\r\n  targetEntity[propertyName] = inputValue;\r\n  return;\r\n}\r\n\r\nfunction mapObjectToViewField(inVal, fieldMapping) {\r\n  // Fieldmap has Three options for setting,\r\n  // 1. observable - the fieldmap represents an observable\r\n  // 2. setter - the fieldmap exposes a setter\r\n  // 3. factory/obs - the fieldmap exposes a factory and an observable to put the result.\r\n\r\n  if (typeof fieldMapping == \"function\") {\r\n    fieldMapping(inVal);\r\n    return;\r\n  }\r\n\r\n  if (typeof fieldMapping != \"object\") {\r\n    fieldMapping = inVal;\r\n    return;\r\n  }\r\n\r\n  if (fieldMapping.set && typeof fieldMapping.set == \"function\") {\r\n    fieldMapping.set(inVal);\r\n    return;\r\n  }\r\n\r\n  if (fieldMapping.obs) {\r\n    if (!inVal) {\r\n      fieldMapping.obs(null);\r\n      return;\r\n    }\r\n    // If the input value is an array, then we are putting an array into the observable.\r\n    const outVal = Array.isArray(inVal)\r\n      ? inVal.map((item) => generateObject(item, fieldMapping))\r\n      : generateObject(inVal, fieldMapping);\r\n\r\n    fieldMapping.obs(outVal);\r\n    return;\r\n  }\r\n\r\n  fieldMapping = inVal;\r\n  //throw \"Error setting fieldmap?\";\r\n}\r\n\r\nfunction generateObject(inVal, fieldMap) {\r\n  // If the fieldMap provides a factory, use that, otherwise return the value\r\n  return fieldMap.factory ? fieldMap.factory(inVal) : inVal;\r\n}\r\n\r\nexport function mapEntityToObject(input, selectedFields = null) {\r\n  const entity = {};\r\n  // We either predefine the fields in the ListDef, or provide a complete fieldmap\r\n  const allWriteableFieldsSet = new Set([]);\r\n  if (this?.ListDef?.fields) {\r\n    this.ListDef.fields.forEach((field) => allWriteableFieldsSet.add(field));\r\n  }\r\n  if (this?.AllDeclaredFields) {\r\n    this.AllDeclaredFields.map((field) => allWriteableFieldsSet.add(field));\r\n  }\r\n  if (input.FieldMap) {\r\n    Object.keys(input.FieldMap).forEach((field) =>\r\n      allWriteableFieldsSet.add(field)\r\n    );\r\n  }\r\n  const allWriteableFields = [...allWriteableFieldsSet];\r\n\r\n  const fields =\r\n    selectedFields ??\r\n    (input.FieldMap ? Object.keys(input.FieldMap) : null) ??\r\n    Object.keys(input);\r\n\r\n  fields\r\n    .filter((field) => allWriteableFields.includes(field))\r\n    .map((field) => {\r\n      if (input.FieldMap && input.FieldMap[field]) {\r\n        const storedFieldKey = input.FieldMap[field].systemName ?? field;\r\n        entity[storedFieldKey] = mapViewFieldToValue(input.FieldMap[field]);\r\n        return;\r\n      }\r\n      entity[field] = input[field];\r\n    });\r\n\r\n  return entity;\r\n}\r\n\r\nfunction mapViewFieldToValue(fieldMap) {\r\n  // Fieldmap has Three options for getting,\r\n  // 1. observable - the fieldmap represents an observable or other function that returns a value\r\n  // 2. get - the fieldmap is an object that exposes a getter function\r\n  // 3. factory/obs - the fieldmap is an object exposes a factory and an observable.\r\n  if (typeof fieldMap == \"function\") {\r\n    return fieldMap();\r\n  }\r\n  if (fieldMap.get && typeof fieldMap.get == \"function\") {\r\n    return fieldMap.get();\r\n  }\r\n\r\n  if (fieldMap.obs) {\r\n    return fieldMap.obs();\r\n  }\r\n\r\n  return fieldMap;\r\n\r\n  // console.error(\"Error setting fieldMap\", fieldMap);\r\n  // throw \"Error getting fieldmap\";\r\n}\r\n", "import {\r\n  Action,\r\n  BusinessOffice,\r\n  Notification,\r\n  Plan,\r\n  RecordSource,\r\n  Rejection,\r\n  RootCauseWhy,\r\n  SupportingDocument,\r\n} from \"../entities/index.js\";\r\nimport { EntitySet, DbContext } from \"../sal/index.js\";\r\n\r\nclass ApplicationDbContext extends DbContext {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  Actions = new EntitySet(Action);\r\n\r\n  BusinessOffices = new EntitySet(BusinessOffice);\r\n\r\n  Notifications = new EntitySet(Notification);\r\n\r\n  Plans = new EntitySet(Plan);\r\n\r\n  RecordSources = new EntitySet(RecordSource);\r\n\r\n  Rejections = new EntitySet(Rejection);\r\n\r\n  RootCauseWhys = new EntitySet(RootCauseWhy);\r\n\r\n  SupportingDocuments = new EntitySet(SupportingDocument);\r\n}\r\n\r\nexport const appContext = new ApplicationDbContext();\r\n", "import { html } from \"../../infrastructure/index.js\";\r\n\r\nexport const modalDialogTemplate = html`\r\n  <dialog\r\n    id=\"\"\r\n    class=\"draggable sal-modal-dialog\"\r\n    data-bind=\"attr: {id: getUniqueId() }\"\r\n  >\r\n    <!-- Can't use 'with: currentDialog' since we need to register our \r\n      javascript event listeners for grabbing and resizing -->\r\n    <div class=\"modal-dialog-header grabber\">\r\n      <h2 class=\"modal-dialog-title\" data-bind=\"text: title\"></h2>\r\n      <h2 class=\"modal-dialog-title\">\r\n        <i class=\"fa-solid fa-xmark pointer\" data-bind=\"click: clickClose\"></i>\r\n      </h2>\r\n    </div>\r\n    <div class=\"dimmer\" data-bind=\"css: {'active': form.saving }\">\r\n      <span class=\"loader\"></span>\r\n      <ul class=\"\" data-bind=\"foreach: $root.blockingTasks\">\r\n        <li data-bind=\"text: msg + '...'\"></li>\r\n      </ul>\r\n    </div>\r\n    <div\r\n      class=\"modal-dialog-body\"\r\n      data-bind=\"component: { name: form.componentName, params: form.params }\"\r\n    ></div>\r\n    <div class=\"modal-dialog-actions\">\r\n      <button\r\n        style\r\n        type=\"button\"\r\n        class=\"btn btn-danger\"\r\n        data-bind=\"click: clickClose\"\r\n      >\r\n        Cancel\r\n      </button>\r\n    </div>\r\n  </dialog>\r\n\r\n  <style>\r\n    .sal-modal-dialog {\r\n      display: none;\r\n      position: absolute;\r\n      z-index: 15;\r\n      width: 615px;\r\n      min-width: 400px;\r\n      max-height: 85vh;\r\n      padding: 0;\r\n      margin: 0;\r\n      top: 125px;\r\n      resize: both;\r\n\r\n      border: 2px solid var(--primary-color);\r\n      border-radius: 6px;\r\n      display: flex;\r\n      flex-direction: column;\r\n    }\r\n\r\n    .sal-modal-dialog.active {\r\n      display: flex;\r\n    }\r\n\r\n    .sal-modal-dialog .modal-dialog-header {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      /* background-color: inherit; */\r\n      /* position: sticky;\r\n      top: 0; */\r\n      padding: 1.5rem 1.5rem 0.5rem 1.5rem;\r\n    }\r\n\r\n    .sal-modal-dialog .modal-dialog-title {\r\n      color: inherit;\r\n      margin: 0;\r\n    }\r\n\r\n    .sal-modal-dialog .modal-dialog-body {\r\n      padding: 0.5rem 1.5rem;\r\n      overflow: auto;\r\n    }\r\n\r\n    .sal-modal-dialog .modal-dialog-actions {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      gap: 1rem;\r\n      margin-top: auto;\r\n      padding: 0.5rem 1.5rem 1.5rem 1.5rem;\r\n    }\r\n\r\n    .draggable {\r\n      position: absolute;\r\n    }\r\n\r\n    .draggable .grabber {\r\n      cursor: move;\r\n    }\r\n  </style>\r\n`;\r\n", "import { directRegisterComponent } from \"../../infrastructure/index.js\";\r\nimport { modalDialogTemplate } from \"./ModalDialogTemplate.js\";\r\n\r\nconst componentName = \"modal-dialog-component\";\r\n\r\nexport const currentDialogs = ko.observableArray();\r\n\r\nexport let toggle;\r\n\r\nexport function showModalDialog(dialogOptions) {\r\n  currentDialogs.push(dialogOptions);\r\n}\r\n\r\nclass ModalDialogModule {\r\n  constructor(dialogOpts) {\r\n    this.dialogOpts = dialogOpts;\r\n    this.title = dialogOpts.title;\r\n    this.dialogReturnValueCallback = dialogOpts.dialogReturnValueCallback;\r\n\r\n    this.form = dialogOpts.form;\r\n\r\n    if (this.form?.onComplete) {\r\n      alert(\"Pass the form onComplete to the modal dialog!\");\r\n      return;\r\n    }\r\n    this.form.onComplete = this.close.bind(this);\r\n\r\n    toggle = this.toggle;\r\n  }\r\n\r\n  toggle = (show = null) => {\r\n    if (show == null) show = !this.dlgElement.hasAttribute(\"open\");\r\n\r\n    show ? this.showModal() : this.hide();\r\n  };\r\n\r\n  showModal = () => {\r\n    this.dlgElement.showModal();\r\n    this.dlgElement.classList.add(\"active\");\r\n  };\r\n\r\n  clickClose = () => {\r\n    this.close(false);\r\n  };\r\n\r\n  hide = () => {\r\n    this.dlgElement.close();\r\n    this.dlgElement.classList.remove(\"active\");\r\n  };\r\n\r\n  close(result) {\r\n    this.dlgElement.close();\r\n    this.dlgElement.classList.remove(\"active\");\r\n    if (this.dialogReturnValueCallback) this.dialogReturnValueCallback(result);\r\n    currentDialogs.remove(this.dialogOpts);\r\n  }\r\n\r\n  _id;\r\n  getUniqueId = () => {\r\n    if (!this._id) {\r\n      this._id = \"field-\" + Math.floor(Math.random() * 10000);\r\n    }\r\n    return this._id;\r\n  };\r\n\r\n  koDescendantsComplete = function (node) {\r\n    this.dlgElement = node.querySelector(\"dialog\");\r\n    dragElement(this.dlgElement);\r\n    resizeDialog(this.dlgElement);\r\n    this.showModal();\r\n  };\r\n}\r\n\r\ndirectRegisterComponent(componentName, {\r\n  template: modalDialogTemplate,\r\n  viewModel: ModalDialogModule,\r\n});\r\n\r\nfunction resizeDialog(elmnt) {\r\n  elmnt.style.width = \"550px\";\r\n  elmnt.style.height = \"\";\r\n  elmnt.style.top = \"125px\";\r\n  elmnt.style.left = (window.GetViewportWidth() - 550) / 2 + \"px\";\r\n}\r\n\r\n// TODO: this should be in a utility class or something\r\nfunction dragElement(elmnt) {\r\n  var pos1 = 0,\r\n    pos2 = 0,\r\n    pos3 = 0,\r\n    pos4 = 0;\r\n\r\n  // elmnt.style.top = elmnt.style.top\r\n\r\n  const dragger = elmnt.querySelector(\".grabber\");\r\n  if (dragger) {\r\n    // if present, the header is where you move the DIV from:\r\n    dragger.onmousedown = dragMouseDown;\r\n  } else {\r\n    // otherwise, move the DIV from anywhere inside the DIV:\r\n    elmnt.onmousedown = dragMouseDown;\r\n  }\r\n\r\n  function dragMouseDown(e) {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // get the mouse cursor position at startup:\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    document.onmouseup = closeDragElement;\r\n    // call a function whenever the cursor moves:\r\n    document.onmousemove = elementDrag;\r\n  }\r\n\r\n  function elementDrag(e) {\r\n    e = e || window.event;\r\n    e.preventDefault();\r\n    // calculate the new cursor position:\r\n    pos1 = pos3 - e.clientX;\r\n    pos2 = pos4 - e.clientY;\r\n    pos3 = e.clientX;\r\n    pos4 = e.clientY;\r\n    // set the element's new position:\r\n    elmnt.style.top = elmnt.offsetTop - pos2 + \"px\";\r\n    elmnt.style.left = elmnt.offsetLeft - pos1 + \"px\";\r\n  }\r\n\r\n  function closeDragElement() {\r\n    // stop moving when mouse button is released:\r\n    document.onmouseup = null;\r\n    document.onmousemove = null;\r\n  }\r\n}\r\n", "export const html = String.raw;\r\n\r\nexport class BaseForm {\r\n  constructor({ entity = null, view = null }) {\r\n    this.entity = entity;\r\n    this.view = view ?? entity.constructor.Views.All;\r\n  }\r\n\r\n  saving = ko.observable(false);\r\n\r\n  FormFields = ko.pureComputed(() => {\r\n    const entity = ko.utils.unwrapObservable(this.entity);\r\n    return Object.entries(entity.FieldMap)\r\n      .filter(([key, field]) => this.view.includes(key) && field?.Visible())\r\n      .map(([key, field]) => field);\r\n  });\r\n\r\n  // Validate just the fields on this form\r\n  validate = (showErrors = true) => {\r\n    Object.values(this.FormFields()).map(\r\n      (field) => field?.validate && field.validate(showErrors)\r\n    );\r\n    this.ShowErrors(showErrors);\r\n    return this.Errors();\r\n  };\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    return Object.values(this.FormFields())\r\n      .filter((field) => field?.Errors && field.Errors())\r\n      .flatMap((field) => field.Errors());\r\n  });\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  params = this;\r\n}\r\n", "export const FormDisplayModes = {\r\n  new: \"new\",\r\n  edit: \"edit\",\r\n  view: \"view\",\r\n};\r\n\r\nexport const FieldDisplayModes = {\r\n  new: \"new\",\r\n  edit: \"edit\",\r\n  view: \"view\",\r\n};\r\n", "import { FormDisplayModes } from \"../../../enums/display_modes.js\";\r\nimport { DomainError } from \"../../../primitives/index.js\";\r\nimport { Result } from \"../../../shared/index.js\";\r\nimport { BaseForm, html } from \"../index.js\";\r\nimport { appContext } from \"../../../../infrastructure/app-db-context.js\";\r\n\r\nconst componentName = \"default-constrained-entity-form\";\r\n\r\n/**\r\n * Combines functionality for View, Edit, Disp in one component.\r\n */\r\nexport class DefaultForm extends BaseForm {\r\n  constructor({ entity, view, displayMode, onSubmit }) {\r\n    super({ entity, view });\r\n    // this.entityView = new ConstrainedEntityView({ entity, view });\r\n    this.displayMode(displayMode);\r\n\r\n    if (onSubmit) this._submitAction = onSubmit;\r\n  }\r\n\r\n  // Default submit action:\r\n  // Add, Edit based on displayMode\r\n  _submitAction = () => {\r\n    const entity = ko.unwrap(this.entity);\r\n\r\n    // guess the default action for this form type;\r\n    const entitySet = appContext.Set(entity.constructor);\r\n    if (!entitySet)\r\n      return Result.Failure(\r\n        new DomainError({\r\n          source: \"default-form\",\r\n          entity,\r\n          description: \"Could not find entityset\",\r\n        })\r\n      );\r\n\r\n    const displayMode = ko.unwrap(this.displayMode);\r\n    const view = ko.unwrap(this.view);\r\n\r\n    switch (displayMode) {\r\n      case FormDisplayModes.new:\r\n        return entitySet.AddEntity(entity);\r\n      case FormDisplayModes.edit:\r\n        return entitySet.UpdateEntity(entity, view);\r\n    }\r\n\r\n    return Result.Success(\"Nothing to do\");\r\n  };\r\n\r\n  displayMode = ko.observable();\r\n\r\n  showSubmitButton = ko.pureComputed(() => {\r\n    return (\r\n      this._submitAction &&\r\n      ko.unwrap(this.displayMode) !== FormDisplayModes.view\r\n    );\r\n  });\r\n\r\n  async clickSubmit() {\r\n    this.saving(true);\r\n    await this.submit();\r\n    this.saving(false);\r\n  }\r\n\r\n  async submit() {\r\n    const errors = this.validate();\r\n    if (errors.length) return;\r\n\r\n    const entity = ko.unwrap(this.entity);\r\n\r\n    try {\r\n      const result = await this._submitAction(entity);\r\n      if (result?.isSuccess) this.onComplete(SP.UI.DialogResult.OK);\r\n      else alert(result?.error);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  clickCancel() {}\r\n\r\n  clickClear() {}\r\n\r\n  params = this;\r\n  componentName = componentName;\r\n}\r\n\r\nconst template = html`\r\n  <div class=\"app-form\">\r\n    <div class=\"form-fields vertical\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"form-field-component\"\r\n        data-bind=\"component: {\r\n            name: components[$parent.displayMode()], params: $data}, \r\n            class: classList\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"form-actions\">\r\n      <!-- ko if: showSubmitButton -->\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success\"\r\n        data-bind=\"click: clickSubmit\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <!-- /ko -->\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nko.components.register(componentName, {\r\n  template,\r\n});\r\n", "import { FormDisplayModes } from \"../../../enums/display_modes.js\";\r\nimport { DomainError } from \"../../../primitives/index.js\";\r\nimport { Result } from \"../../../shared/index.js\";\r\nimport { BaseForm, html } from \"../index.js\";\r\nimport { appContext } from \"../../../../infrastructure/app-db-context.js\";\r\n\r\nconst componentName = \"default-upload-constrained-entity-form\";\r\n\r\nfunction getFileTitle(filename) {\r\n  // Find the position of the last dot in the filename\r\n  const lastDotIndex = filename.lastIndexOf(\".\");\r\n\r\n  // If there is no dot, return the whole filename\r\n  if (lastDotIndex === -1) {\r\n    return filename;\r\n  }\r\n\r\n  // Return the part of the filename before the last dot\r\n  return filename.substring(0, lastDotIndex);\r\n}\r\n\r\n/**\r\n * Combines functionality for View, Edit, Disp in one component.\r\n */\r\nexport class DefaultUploadForm extends BaseForm {\r\n  constructor({ entity, view, folderPath }) {\r\n    super({ entity, view });\r\n    // this.entityView = new ConstrainedEntityView({ entity, view });\r\n    this.displayMode(FormDisplayModes.new);\r\n\r\n    this.folderPath = folderPath;\r\n\r\n    this.files.subscribeAdded(this.onFileAttachedHandler);\r\n  }\r\n\r\n  files = ko.observableArray();\r\n  file = ko.observable();\r\n\r\n  onFileAttachedHandler = async (newFiles) => {\r\n    if (!newFiles.length) return;\r\n\r\n    const newFile = newFiles[0];\r\n    this.file(newFile);\r\n\r\n    const entity = ko.unwrap(this.entity);\r\n    entity.FileName.Value(newFile.name);\r\n    entity.Title.Value(getFileTitle(newFile.name));\r\n  };\r\n\r\n  // Default submit action:\r\n  // Add, Edit based on displayMode\r\n  _submitAction = () => {\r\n    const entity = ko.unwrap(this.entity);\r\n\r\n    const entitySet = appContext.Set(entity.constructor);\r\n    if (!entitySet)\r\n      return Result.Failure(\r\n        new DomainError({\r\n          source: \"default-form\",\r\n          entity,\r\n          description: \"Could not find entityset\",\r\n        })\r\n      );\r\n\r\n    const file = ko.unwrap(this.file);\r\n    const folderPath = ko.unwrap(this.folderPath);\r\n    const view = ko.unwrap(this.view);\r\n\r\n    return entitySet.UploadFileWithEntity({\r\n      file,\r\n      entity,\r\n      folderPath,\r\n      view,\r\n    });\r\n  };\r\n\r\n  displayMode = ko.observable();\r\n\r\n  showSubmitButton = ko.pureComputed(() => {\r\n    return (\r\n      this._submitAction &&\r\n      ko.unwrap(this.displayMode) !== FormDisplayModes.view\r\n    );\r\n  });\r\n\r\n  async clickSubmit() {\r\n    this.saving(true);\r\n    await this.submit();\r\n    this.saving(false);\r\n  }\r\n\r\n  async submit() {\r\n    const errors = this.validate();\r\n    if (errors.length) return;\r\n\r\n    const entity = ko.unwrap(this.entity);\r\n\r\n    try {\r\n      const result = await this._submitAction(entity);\r\n      if (result?.isSuccess) this.onComplete(SP.UI.DialogResult.OK);\r\n      else alert(result?.error);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  clickCancel() {}\r\n\r\n  clickClear() {}\r\n\r\n  params = this;\r\n  componentName = componentName;\r\n}\r\n\r\nconst template = html`\r\n  <div class=\"app-form\">\r\n    <div class=\"form-fields vertical\">\r\n      <label class=\"file-upload-field\">\r\n        Upload Documents:\r\n        <div class=\"dropzone\" data-bind=\"\">Drop Files Here</div>\r\n        <input class=\"file-upload\" type=\"file\" data-bind=\"files: files\" />\r\n      </label>\r\n    </div>\r\n    <!-- ko if: file -->\r\n    <div class=\"form-fields vertical\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"form-field-component\"\r\n        data-bind=\"component: {\r\n            name: components[$parent.displayMode()], params: $data}, \r\n            class: classList\"\r\n      ></div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <div class=\"form-actions\">\r\n      <!-- ko if: showSubmitButton -->\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success\"\r\n        data-bind=\"click: clickSubmit\"\r\n      >\r\n        Submit\r\n      </button>\r\n      <!-- /ko -->\r\n    </div>\r\n  </div>\r\n`;\r\n\r\nko.components.register(componentName, {\r\n  template,\r\n});\r\n", "import { DefaultForm, DefaultUploadForm } from \"../components/forms/index.js\";\r\nimport { FieldDisplayModes } from \"../enums/display_modes.js\";\r\n\r\nexport function NewForm({ entity, view = null, onSubmit }) {\r\n  return new DefaultForm({\r\n    entity,\r\n    view,\r\n    onSubmit,\r\n    displayMode: FieldDisplayModes.new,\r\n  });\r\n}\r\n\r\nexport function EditForm({ entity, view = null, onSubmit }) {\r\n  return new DefaultForm({\r\n    entity,\r\n    view,\r\n    onSubmit,\r\n    displayMode: FieldDisplayModes.edit,\r\n  });\r\n}\r\n\r\nexport function DispForm({ entity, view = null }) {\r\n  return new DefaultForm({ entity, view, displayMode: FieldDisplayModes.view });\r\n}\r\n\r\nexport function UploadForm({ entity, view = null, folderPath }) {\r\n  return new DefaultUploadForm({ entity, view, folderPath });\r\n}\r\n", "const html = String.raw;\r\n\r\nexport function pendingProblemApprovalTemplate(plan) {\r\n  const recordType = plan.RecordType.Value();\r\n  const problemDescription = plan.ProblemDescription.Value();\r\n\r\n  const template = html`\r\n    <p>\r\n      A ${recordType} has been submitted to address the following nonconformity\r\n      and requires approval:\r\n    </p>\r\n    <p>${problemDescription}</p>\r\n    <p>\r\n      Please visit the following link to Approve or Reject this ${recordType}.\r\n    </p>\r\n  `;\r\n  return template;\r\n}\r\n", "import { ROLES, SITEROLEGROUPS } from \"../constants.js\";\r\nimport { People } from \"../sal/entities/index.js\";\r\n\r\nimport { getUserPropsAsync } from \"../sal/infrastructure/index.js\";\r\n\r\nexport const currentRole = ko.observable();\r\n\r\nexport const userRoleOpts = ko.pureComputed(() => {\r\n  const roles = [SITEROLEGROUPS.USER];\r\n  if (currentUser.isInGroupTitle(SITEROLEGROUPS.QTM.GROUPNAME)) {\r\n    roles.push(SITEROLEGROUPS.QOS);\r\n    roles.push(SITEROLEGROUPS.QTMB);\r\n    roles.push(SITEROLEGROUPS.QTM);\r\n    return roles;\r\n  }\r\n\r\n  if (\r\n    currentUser.isInGroupTitle(SITEROLEGROUPS.QOS.GROUPNAME) ||\r\n    currentUser.isInGroupTitle(SITEROLEGROUPS.QOSTEMP.GROUPNAME)\r\n  ) {\r\n    roles.push(SITEROLEGROUPS.QOS);\r\n  }\r\n\r\n  if (currentUser.isInGroupTitle(SITEROLEGROUPS.QTMB.GROUPNAME)) {\r\n    roles.push(SITEROLEGROUPS.QTMB);\r\n  }\r\n\r\n  return roles;\r\n});\r\n\r\nclass User extends People {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    LookupValue = null,\r\n    WorkPhone = null,\r\n    EMail = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n    Groups = null,\r\n  }) {\r\n    super({ ID, Title, LookupValue, LoginName, IsGroup, IsEnsured });\r\n\r\n    this.WorkPhone = WorkPhone;\r\n    this.EMail = EMail;\r\n\r\n    this.Groups = Groups;\r\n  }\r\n\r\n  Groups = [];\r\n\r\n  isInGroup(group) {\r\n    if (!group?.ID) return false;\r\n    return this.getGroupIds().includes(group.ID);\r\n  }\r\n\r\n  isInGroupTitle(groupTitle) {\r\n    return this.Groups.find((group) => group.Title == groupTitle);\r\n  }\r\n\r\n  getGroupIds() {\r\n    return this.Groups.map((group) => group.ID);\r\n  }\r\n\r\n  IsSiteOwner = ko.pureComputed(() =>\r\n    this.isInGroup(getDefaultGroups().owners)\r\n  );\r\n\r\n  hasSystemRole = (systemRole) => {\r\n    const userIsOwner = this.IsSiteOwner();\r\n    switch (systemRole) {\r\n      case systemRoles.Admin:\r\n        return userIsOwner;\r\n        break;\r\n      case systemRoles.ActionOffice:\r\n        return userIsOwner || this.ActionOffices().length;\r\n      default:\r\n    }\r\n  };\r\n\r\n  static _user = null;\r\n  static Create = async function () {\r\n    if (User._user) return User._user;\r\n    // TODO: Major - Switch to getUserPropertiesAsync since that includes phone # etc\r\n    const userProps = await getUserPropsAsync();\r\n    // const userProps2 = await UserManager.getUserPropertiesAsync();\r\n    User._user = new User(userProps);\r\n    return User._user;\r\n  };\r\n}\r\n\r\nexport const currentUser = await User.Create();\r\n", "import { html, LOCATION, PLANTYPE, stageDescriptions } from \"../constants.js\";\r\nimport { Plan } from \"../entities/plan.js\";\r\nimport { appContext } from \"../infrastructure/app-db-context.js\";\r\nimport { ValidationError } from \"../sal/primitives/index.js\";\r\nimport { Result } from \"../sal/shared/index.js\";\r\nimport { currentRole, currentUser } from \"./authorization.js\";\r\n\r\nexport function getRoleLinkToPlan(plan, role = null) {\r\n  return `${\r\n    _spPageContextInfo.webAbsoluteUrl\r\n  }/?capid=${plan.Title.Value()}&tab=detail${role ? `&role=${role}` : \"\"}`;\r\n}\r\n\r\nexport function getAnchorRoleLinkToPlan(plan, role = null) {\r\n  const link = getRoleLinkToPlan(plan, role);\r\n  return html`<a href=\"${link}\" target=\"blank\">${plan.Title.Value()}</a>`;\r\n}\r\n\r\nexport async function addNewPlan(plan) {\r\n  console.log(\"inserting plan\", plan);\r\n\r\n  const planType = ko.unwrap(plan.RecordType.Value);\r\n\r\n  if (!planType) {\r\n    return Result.Error(PlanErrors.recordTypeNotSetError);\r\n  }\r\n\r\n  let result;\r\n\r\n  if (plan.isCAR() && !plan.isSelfInitiated()) {\r\n    const loc = ko.unwrap(plan.CGFSLocation.Value);\r\n    if (loc == LOCATION.BANGKOK) {\r\n      plan.ProcessStage.Value(stageDescriptions.ProblemApprovalQTMB.stage);\r\n    } else {\r\n      plan.ProcessStage.Value(stageDescriptions.ProblemApprovalQTM.stage);\r\n    }\r\n  }\r\n\r\n  if (plan.isCAP()) {\r\n    plan.SelfInitiated.Value(\"Yes\");\r\n  }\r\n\r\n  if (plan.isSelfInitiated()) {\r\n    plan.ProcessStage.Value(stageDescriptions.DevelopingActionPlan.stage);\r\n\r\n    // Set the next target date\r\n    const today = new Date();\r\n    const target_deadline = new Date(\r\n      today.getFullYear(),\r\n      today.getMonth(),\r\n      today.getDate() + 30\r\n    );\r\n\r\n    plan.NextTargetDate.set(target_deadline);\r\n\r\n    const user = currentUser;\r\n\r\n    plan.ProblemResolverName.set(user);\r\n\r\n    // We only mark it as submitted once it's been approved.\r\n    plan.SubmittedDate.Value(new Date());\r\n  }\r\n\r\n  plan.flatten();\r\n\r\n  plan.AuthorName.Value(currentUser.Title);\r\n\r\n  plan.Active.Value(true);\r\n\r\n  return appContext.Plans.AddEntity(plan);\r\n}\r\n\r\nexport async function editPlan(plan, view) {\r\n  plan.flatten();\r\n\r\n  return appContext.Plans.UpdateEntity(plan, view);\r\n}\r\n\r\nexport async function cancelPlan(plan) {\r\n  // Switch userCurrentRole\r\n\r\n  const userRole = ko.unwrap(currentRole);\r\n\r\n  plan.PreviousStage.Value(plan.ProcessStage.toString());\r\n\r\n  let nextStage =\r\n    userRole == ROLES.ADMINTYPE.USER\r\n      ? stageDescriptions.ClosedRecalled.stage\r\n      : stageDescriptions.ClosedRejected.stage;\r\n\r\n  plan.ProcessStage.Value(nextStage);\r\n\r\n  plan.CloseDate.Value(new Date());\r\n  plan.Active.Value(false);\r\n\r\n  return appContext.Plans.UpdateEntity(plan, Plan.Views.CancelSubmit);\r\n}\r\n\r\nconst PlanErrors = {\r\n  recordTypeNotSetError: new ValidationError(\r\n    \"add-new-plan\",\r\n    \"required-field\",\r\n    \"Plan type is not set!\"\r\n  ),\r\n};\r\n", "import { html } from \"../constants.js\";\r\nimport { getAnchorRoleLinkToPlan } from \"../services/plan-service.js\";\r\n\r\nexport function developingActionPlanTemplate(plan) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n\r\n  const isSelfInitiated = plan.SelfInitiated.Value() == \"Yes\";\r\n\r\n  if (isSelfInitiated) {\r\n    return html`\r\n      <p>The following noncomformity has been assigned:</p>\r\n      <ul>\r\n        <li>Record: ${title}</li>\r\n        <li>Location: ${location}</li>\r\n      </ul>\r\n      <p>Please visit the link below to view the noncomformity.</p>\r\n    `;\r\n  }\r\n\r\n  return html`\r\n    <p>The following noncomformity has been assigned:</p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      You are receiving this email because your QSO has assigned you as the\r\n      responsible party for resolving this ${recordType}.\r\n    </p>\r\n    <p>\r\n      Please visit the link below to view the noncomformity and develop an\r\n      action plan.\r\n    </p>\r\n  `;\r\n}\r\n\r\nexport function developingActionPlanRejectedTemplate(plan, rejection) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n  const rejectionReason = rejection.Reason.Value();\r\n\r\n  return html`\r\n    <p>The following plan has been <span style=\"color: red\">rejected</span>:</p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      Rejection Reason:<br />\r\n      ${rejectionReason}\r\n    </p>\r\n    <p>\r\n      You are receiving this email because you are designated as the responsible\r\n      party for resolving this ${recordType}.\r\n    </p>\r\n    <p>\r\n      Please visit the link below to view the noncomformity and revise the\r\n      action plan.\r\n    </p>\r\n  `;\r\n}\r\n", "import { html } from \"../constants.js\";\r\nimport { getAnchorRoleLinkToPlan } from \"../services/plan-service.js\";\r\n\r\nexport function pendingPlanApprovalTemplate(plan, role) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan, role);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n\r\n  return html`\r\n    <p>\r\n      An action plan has been submitted to address the following noncomformity:\r\n    </p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      Please visit the following link to Approve or Reject this ${recordType}.\r\n    </p>\r\n  `;\r\n}\r\n", "import { html } from \"../constants.js\";\r\nimport { getAnchorRoleLinkToPlan } from \"../services/plan-service.js\";\r\n\r\nexport function implementingActionPlanTemplate(plan) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n\r\n  return html`\r\n    <p>The following action plan has been approved:</p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      You are receiving this email because you have been designated as an action\r\n      plan responsible person.\r\n    </p>\r\n    <p>Please visit the CAP/CAR tool to view and complete your actions.</p>\r\n  `;\r\n}\r\n\r\nexport function implementingActionPlanRejectedTemplate(plan, rejection) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n\r\n  return html`\r\n    <p>The following action plan has been <span>rejected</span>:</p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      Rejection Reason:<br />\r\n      ${rejection.Reason.Value()}\r\n    </p>\r\n    <p>\r\n      You are receiving this email because you have been designated as an action\r\n      plan responsible person.\r\n    </p>\r\n    <p>Please visit the CAP/CAR tool to view and complete your actions.</p>\r\n  `;\r\n}\r\n", "import { html } from \"../constants.js\";\r\nimport { getAnchorRoleLinkToPlan } from \"../services/plan-service.js\";\r\n\r\nexport function pendingImplementationApproval(plan, role) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan, role);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n\r\n  return html`\r\n    <p>\r\n      An action plan has been implemented to address the following\r\n      noncomformity:\r\n    </p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      Please visit the following link to Approve or Reject this ${recordType}\u2019s\r\n      implementation.\r\n    </p>\r\n  `;\r\n}\r\n", "import { html } from \"../constants.js\";\r\nimport { getAnchorRoleLinkToPlan } from \"../services/plan-service.js\";\r\n\r\nexport function pendingEffectivenessSubmissionTemplate(plan) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n\r\n  return html`\r\n    <p>The following ${recordType}\u2019s implementation has been approved:</p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      When ready, please submit proof of effectiveness by navigating to the link\r\n      below.\r\n    </p>\r\n    <p>\r\n      For guidance, refer to GFS-RD-QMS-0503 Guidance for CAR/CAP Stage 4 -\r\n      Verification of Effectiveness (<a\r\n        href=\"http://kbi.cgfs.state.sbu/article.aspx?article=39561&p=28\"\r\n        target=\"_blank\"\r\n      >\r\n        KB #39561</a\r\n      >)\r\n    </p>\r\n  `;\r\n}\r\n\r\nexport function pendingEffectivenessSubmissionRejectedTemplate(\r\n  plan,\r\n  rejection\r\n) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n\r\n  return html`\r\n    <p>\r\n      The following ${recordType}\u2019s implementation has been\r\n      <span style=\"color: red;\">rejected</span>:\r\n    </p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      Rejection Reason:<br />\r\n      ${rejection.Reason.Value()}\r\n    </p>\r\n    <p>\r\n      When ready, please update proof of effectiveness by navigating to the link\r\n      below.\r\n    </p>\r\n    <p>\r\n      For guidance, refer to GFS-RD-QMS-0503 Guidance for CAR/CAP Stage 4 -\r\n      Verification of Effectiveness (<a\r\n        href=\"http://kbi.cgfs.state.sbu/article.aspx?article=39561&p=28\"\r\n        target=\"_blank\"\r\n      >\r\n        KB #39561</a\r\n      >)\r\n    </p>\r\n  `;\r\n}\r\n", "import { html } from \"../constants.js\";\r\nimport { getAnchorRoleLinkToPlan } from \"../services/plan-service.js\";\r\n\r\nexport function pendingEffectivenessApprovalTemplate(plan, role) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan, role);\r\n  const recordType = plan.RecordType.Value();\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n\r\n  return html`\r\n    <p>\r\n      Proof of effectiveness has been submitted for the following ${recordType}:\r\n    </p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n    </ul>\r\n    <p>\r\n      Please visit the following link to Approve or Reject this ${recordType}\u2019s\r\n      effectiveness.\r\n    </p>\r\n    <p>\r\n      For guidance, refer to GFS-RD-QMS-0503 Guidance for CAR/CAP Stage 4 -\r\n      Verification of Effectiveness (<a\r\n        href=\"http://kbi.cgfs.state.sbu/article.aspx?article=39561&p=28\"\r\n        target=\"_blank\"\r\n      >\r\n        KB #39561</a\r\n      >)\r\n    </p>\r\n  `;\r\n}\r\n", "import { html, ROLES } from \"../constants.js\";\r\nimport { getAnchorRoleLinkToPlan } from \"../services/plan-service.js\";\r\n\r\nexport function actionRequiresQsoApprovalTemplate(plan, action) {\r\n  const location = plan.CGFSLocation.Value();\r\n  const title = getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QO);\r\n  const recordType = ko.unwrap(plan.RecordType.Value);\r\n  const responsiblePerson = plan.CoordinatorName.Value();\r\n  const qso = ko.unwrap(plan.QSO.Value);\r\n\r\n  return html`\r\n    <p>\r\n      Action\r\n      <span style=\"font-weight: bold;\"\r\n        >${ko.unwrap(action.ActionID.Value)}</span\r\n      >\r\n      on the following ${recordType} has been edited and requires the QSO's\r\n      approval.\r\n    </p>\r\n    <ul>\r\n      <li>Record: ${title}</li>\r\n      <li>Location: ${location}</li>\r\n      <li>CAR/CAP Coordinator: ${responsiblePerson}</li>\r\n      <li>QSO: ${qso.Title}</li>\r\n    </ul>\r\n    <p>Please visit the following link to Approve or Reject this Action.</p>\r\n  `;\r\n}\r\n", "const taskStates = {\r\n  pending: \"Pending\",\r\n  aging: \"Aging\",\r\n  completed: \"Completed\",\r\n};\r\n\r\nexport class TaskDef {\r\n  constructor(msg, blocking = false, type = null) {\r\n    this.msg = msg;\r\n    this.blocking = blocking;\r\n    this.type = type;\r\n  }\r\n  msg;\r\n  blocking;\r\n  type;\r\n}\r\n\r\nexport class Task {\r\n  constructor({ msg, blocking = false }) {\r\n    this.msg = msg;\r\n    this.blocking = blocking;\r\n    this.Status(taskStates.pending);\r\n  }\r\n\r\n  msg;\r\n  blocking;\r\n  Status = ko.observable();\r\n\r\n  timeout = window.setTimeout(() => {\r\n    console.warn(\"this task is aging:\", this);\r\n    this.Status(taskStates.aging);\r\n  }, 5000);\r\n\r\n  markComplete = () => {\r\n    window.clearTimeout(this.timeout);\r\n    this.Status(taskStates.completed);\r\n  };\r\n\r\n  // Should this task block user input?\r\n  IsBlocking = ko.pureComputed(\r\n    () => this.blocking && this.Status() != taskStates.completed\r\n  );\r\n}\r\n\r\nexport class ProgressTask {\r\n  constructor({ msg, blocking }) {\r\n    this.msg = msg;\r\n    this.blocking = blocking;\r\n    this.Status(taskStates.pending);\r\n  }\r\n\r\n  msg;\r\n  blocking;\r\n  Status = ko.observable();\r\n\r\n  updateProgress = ({ percentDone }) => {\r\n    this.Status(`${parseInt(percentDone * 100)}%`);\r\n  };\r\n\r\n  setTimeout = () =>\r\n    window.setTimeout(() => {\r\n      console.warn(\"this task is aging:\", this);\r\n      this.Status(`${this.Status()} (${taskStates.aging})`);\r\n    }, 50000);\r\n\r\n  resetTimeout = () => {\r\n    window.clearTimeout(this.timeout);\r\n    this.timeout = this.setTimeout();\r\n  };\r\n\r\n  timeout = this.setTimeout();\r\n\r\n  markComplete = () => {\r\n    window.clearTimeout(this.timeout);\r\n    this.Status(taskStates.completed);\r\n  };\r\n\r\n  // Should this task block user input?\r\n  IsBlocking = ko.pureComputed(\r\n    () => this.blocking && this.Status() != taskStates.completed\r\n  );\r\n\r\n  static Create(params) {\r\n    return new ProgressTask(params);\r\n  }\r\n}\r\n", "import { ProgressTask, Task, TaskDef } from \"../value-objects/task.js\";\r\n\r\nexport const tasks = {\r\n  init: new Task({ msg: \"Initializing the Application\" }),\r\n  save: new Task({ msg: \"Saving Plan...\", blocking: true }),\r\n  cancelAction: new Task({ msg: \"Cancelling Action...\" }),\r\n  view: new Task({ msg: \"Viewing Plan...\" }),\r\n  refresh: new Task({ msg: \"Refreshing Plan...\" }),\r\n  lock: new Task({ msg: \"Locking Plan...\", blocking: true }),\r\n  closing: new Task({ msg: \"Closing Plan...\", blocking: true }),\r\n  opening: new Task({ msg: \"Re-Opening Plan...\", blocking: true }),\r\n  pipeline: new Task({ msg: \"Progressing to Next Stage...\", blocking: true }),\r\n  refreshPlans: new Task({ msg: \"Refreshing Data...\" }),\r\n  newComment: new Task({ msg: \"Refreshing Comments...\" }),\r\n  newAction: new Task({ msg: \"Refreshing Actions...\", blocking: true }),\r\n  approve: new Task({ msg: \"Approving Plan...\", blocking: true }),\r\n  reject: (planTitle) => new TaskDef(`Rejecting ${planTitle}`, true),\r\n  notification: () => new TaskDef(\"Sending Notification\", true),\r\n};\r\n\r\nexport const runningTasks = ko.observableArray();\r\n\r\nexport const blockingTasks = ko.pureComputed(() => {\r\n  return runningTasks().filter((task) => task.IsBlocking()) ?? [];\r\n});\r\n\r\nexport const addTask = (taskDef) => {\r\n  // accept either a task or a taskdef;\r\n  let newTask;\r\n\r\n  if (taskDef.constructor == Task) {\r\n    newTask = taskDef;\r\n  } else {\r\n    if (taskDef.type) {\r\n      newTask = taskDef.type.Create(taskDef);\r\n    } else {\r\n      newTask = new Task(taskDef);\r\n    }\r\n  }\r\n\r\n  runningTasks.push(newTask);\r\n  return newTask;\r\n};\r\n\r\nexport const finishTask = function (activeTask) {\r\n  if (activeTask) {\r\n    activeTask.markComplete();\r\n    window.setTimeout(() => removeTask(activeTask), 3000);\r\n    // runningTasks.remove(activeTask);\r\n  }\r\n};\r\n\r\nconst removeTask = function (taskToRemove) {\r\n  runningTasks.remove(taskToRemove);\r\n};\r\n", "import { ROLES, stageDescriptions } from \"../constants.js\";\r\nimport { Notification } from \"../entities/index.js\";\r\nimport { appContext } from \"../infrastructure/app-db-context.js\";\r\nimport {\r\n  actionRequiresQsoApprovalTemplate,\r\n  developingActionPlanRejectedTemplate,\r\n  developingActionPlanTemplate,\r\n  implementingActionPlanTemplate,\r\n  pendingEffectivenessApprovalTemplate,\r\n  pendingEffectivenessSubmissionRejectedTemplate,\r\n  pendingEffectivenessSubmissionTemplate,\r\n  pendingImplementationApproval,\r\n  pendingPlanApprovalTemplate,\r\n  pendingProblemApprovalTemplate,\r\n} from \"../notification-templates/index.js\";\r\nimport { getAnchorRoleLinkToPlan } from \"./plan-service.js\";\r\nimport { addTask, finishTask, tasks } from \"./tasks-service.js\";\r\n\r\nconst defaultContact = {\r\n  QTM: \"CGFSQMSCARCAP@state.gov\",\r\n  QTMB: \"CGFSQMSBCARCAP@state.gov\",\r\n};\r\n\r\nconst approvedStageNotificationMap = {\r\n  \"Pending QTM-B Problem Approval\": pendingQtmbProblemApproval,\r\n  \"Pending QTM Problem Approval\": pendingQtmProblemApproval,\r\n  \"Pending QSO Problem Approval\": pendingQsoProblemApproval,\r\n  \"Pending QAO Problem Approval\": pendingQaoProblemApproval,\r\n  \"Developing Action Plan\": developingActionPlan,\r\n  \"Pending QSO Plan Approval\": pendingQsoPlanApproval,\r\n  \"Pending QTM-B Plan Approval\": pendingQtmbPlanApproval,\r\n  \"Pending QTM Plan Approval\": pendingQtmPlanApproval,\r\n  \"Implementing Action Plan\": implementingActionPlan,\r\n  \"Pending QSO Implementation Approval\": pendingQsoImplementationApproval,\r\n  \"Pending Effectiveness Submission\": pendingEffectivenessSubmission,\r\n  \"Pending QSO Effectiveness Approval\": pendingQsoEffectivenessApproval,\r\n  \"Pending QTM-B Effectiveness Approval\": pendingQtmbEffectivenessApproval,\r\n  \"Pending QTM Effectiveness Approval\": pendingQtmEffectivenessApproval,\r\n};\r\n\r\nfunction getRejectedNotificationByStage(stage, plan, rejection) {\r\n  switch (stage) {\r\n    case stageDescriptions.DevelopingActionPlan.stage:\r\n      return developingActionPlanRejected(plan, rejection);\r\n    case stageDescriptions.ImplementingActionPlan.stage:\r\n      return implementingActionPlanRejected(plan, rejection);\r\n    case stageDescriptions.EffectivenessSubmissionRejected.stage:\r\n      return pendingEffectivenessSubmissionRejected(plan, rejection);\r\n  }\r\n}\r\n\r\nfunction subjectTemplate(plan, content = null) {\r\n  content = content ?? plan.ProcessStage.toString();\r\n  return `QMS-CAR/CAP - ${content} - ${plan.Title.Value()}`;\r\n}\r\n\r\nasync function getEmailFromField(field) {\r\n  const person = ko.unwrap(field.Value);\r\n  const result = await appContext.utilities.ensurePerson(person);\r\n  return result?.Email;\r\n}\r\n\r\nfunction getQsoEmail(plan) {\r\n  return getEmailFromField(plan.QSO);\r\n}\r\n\r\nfunction getQaoEmail(plan) {\r\n  return getEmailFromField(plan.QAO);\r\n}\r\n\r\nfunction getCoordinatorEmail(plan) {\r\n  return getEmailFromField(plan.ProblemResolverName);\r\n}\r\n\r\nasync function pendingQtmbProblemApproval(plan) {\r\n  const to = [defaultContact.QTMB];\r\n\r\n  const subject = subjectTemplate(plan, \"Pending QTM-B Problem Approval\");\r\n  let body = pendingProblemApprovalTemplate(plan);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QTMB);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingQtmProblemApproval(plan) {\r\n  const to = [defaultContact.QTM];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingProblemApprovalTemplate(plan);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QTM);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingQsoProblemApproval(plan) {\r\n  const qo = await getQsoEmail(plan); // plan.QSO.Value();\r\n  if (!qo) return;\r\n  const to = [qo];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingProblemApprovalTemplate(plan);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QO);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingQaoProblemApproval(plan) {\r\n  const qo = await getQaoEmail(plan);\r\n  if (!qo) return;\r\n  const to = [qo];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingProblemApprovalTemplate(plan);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QO);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function developingActionPlan(plan) {\r\n  // const coordinator = plan.ProblemResolverName.Value();\r\n  const coordinatorEmail = await getCoordinatorEmail(plan);\r\n  const to = [coordinatorEmail];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = developingActionPlanTemplate(plan);\r\n  body += getAnchorRoleLinkToPlan(plan);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function developingActionPlanRejected(plan, rejection) {\r\n  const coordinatorEmail = await getCoordinatorEmail(plan);\r\n  const to = [coordinatorEmail];\r\n\r\n  const subject = subjectTemplate(plan, \"Action Plan Rejected\");\r\n  let body = developingActionPlanRejectedTemplate(plan, rejection);\r\n  body += getAnchorRoleLinkToPlan(plan);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingQsoPlanApproval(plan) {\r\n  const qoEmail = await getQsoEmail(plan);\r\n  const to = [qoEmail];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingPlanApprovalTemplate(plan, ROLES.ADMINTYPE.QO);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QO);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingQaoPlanApproval(plan) {\r\n  const qoEmail = await getQaoEmail(plan);\r\n  const to = [qoEmail];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingPlanApprovalTemplate(plan, ROLES.ADMINTYPE.QO);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QO);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nfunction pendingQtmbPlanApproval(plan) {\r\n  const to = [defaultContact.QTMB];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingPlanApprovalTemplate(plan, ROLES.ADMINTYPE.QTMB);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QTMB);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nfunction pendingQtmPlanApproval(plan) {\r\n  const to = [defaultContact.QTM];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingPlanApprovalTemplate(plan, ROLES.ADMINTYPE.QTM);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QTM);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function implementingActionPlan(plan) {\r\n  const coordinatorEmail = await getCoordinatorEmail(plan);\r\n  const actionsResult = await appContext.Actions.FindByTitle(\r\n    plan.Title.Value()\r\n  );\r\n  if (!actionsResult?.results) return;\r\n\r\n  const actionTakerEmails = new Set(\r\n    await Promise.all(\r\n      actionsResult.results.map((action) =>\r\n        getEmailFromField(action.ActionResponsiblePerson)\r\n      )\r\n    )\r\n  );\r\n  actionTakerEmails.delete(null);\r\n\r\n  const to = [...actionTakerEmails, coordinatorEmail];\r\n  const subject = subjectTemplate(plan);\r\n  let body = implementingActionPlanTemplate(plan);\r\n  body += getAnchorRoleLinkToPlan(plan);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function implementingActionPlanRejected(plan, rejection) {\r\n  const coordinatorEmail = await getCoordinatorEmail(plan);\r\n  const to = [coordinatorEmail];\r\n  const subject = subjectTemplate(plan, \"Plan Implementation Rejected\");\r\n  let body = implementingActionPlanTemplate(plan, rejection);\r\n  body += getAnchorRoleLinkToPlan(plan);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingQsoImplementationApproval(plan) {\r\n  const qoEmail = await getQsoEmail(plan);\r\n  const to = [qoEmail];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingImplementationApproval(plan, ROLES.ADMINTYPE.QO);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QO);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingEffectivenessSubmission(plan) {\r\n  const coordinatorEmail = await getCoordinatorEmail(plan);\r\n\r\n  const to = [coordinatorEmail];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingEffectivenessSubmissionTemplate(plan);\r\n  body += getAnchorRoleLinkToPlan(plan);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingEffectivenessSubmissionRejected(plan, rejection) {\r\n  const coordinatorEmail = await getCoordinatorEmail(plan);\r\n\r\n  const to = [coordinatorEmail];\r\n\r\n  const subject = subjectTemplate(plan, \"Effectiveness Rejected\");\r\n  let body = pendingEffectivenessSubmissionRejectedTemplate(plan, rejection);\r\n  body += getAnchorRoleLinkToPlan(plan);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nasync function pendingQsoEffectivenessApproval(plan) {\r\n  const qoEmail = await getQsoEmail(plan);\r\n  const to = [qoEmail];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingEffectivenessApprovalTemplate(plan, ROLES.ADMINTYPE.QO);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QO);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nfunction pendingQtmbEffectivenessApproval(plan) {\r\n  const to = [defaultContact.QTMB];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingEffectivenessApprovalTemplate(plan, ROLES.ADMINTYPE.QTMB);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QTMB);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nfunction pendingQtmEffectivenessApproval(plan) {\r\n  const to = [defaultContact.QTM];\r\n\r\n  const subject = subjectTemplate(plan);\r\n  let body = pendingEffectivenessApprovalTemplate(plan, ROLES.ADMINTYPE.QTM);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QTM);\r\n\r\n  return Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n}\r\n\r\nexport async function stageApprovedNotification(plan, newStage = null) {\r\n  newStage = newStage ?? plan.ProcessStage.Value();\r\n  const notificationFunction = approvedStageNotificationMap[newStage];\r\n  if (!notificationFunction) return;\r\n  const notificationTask = addTask(tasks.notification());\r\n\r\n  const notification = await notificationFunction(plan);\r\n  await sendPlanNotification(plan, notification);\r\n\r\n  finishTask(notificationTask);\r\n}\r\n\r\nexport async function stageRejectedNotification(plan, rejection) {\r\n  const newStage = plan.ProcessStage.Value();\r\n\r\n  const notificationPromise = getRejectedNotificationByStage(\r\n    newStage,\r\n    plan,\r\n    rejection\r\n  );\r\n\r\n  if (!notificationPromise) {\r\n    return;\r\n  }\r\n  const notificationTask = addTask(tasks.notification());\r\n  const notification = await notificationPromise;\r\n\r\n  await sendPlanNotification(plan, notification);\r\n  finishTask(notificationTask);\r\n}\r\n\r\nexport async function actionRequiresApprovalNotification(plan, action) {\r\n  const qoEmail = await getQsoEmail(plan);\r\n  const to = [qoEmail];\r\n\r\n  const subject = subjectTemplate(plan, \"Action Requires Approval\");\r\n  let body = actionRequiresQsoApprovalTemplate(plan, action);\r\n  body += getAnchorRoleLinkToPlan(plan, ROLES.ADMINTYPE.QO);\r\n\r\n  const notification = Notification.FromTemplate({\r\n    title: plan.Title.Value(),\r\n    to,\r\n    subject,\r\n    body,\r\n  });\r\n\r\n  return sendPlanNotification(plan, notification);\r\n}\r\n\r\nasync function sendPlanNotification(plan, notification) {\r\n  if (!notification) return;\r\n  const folderPath = plan.Title.Value();\r\n  await appContext.Notifications.UpsertFolderPath(folderPath);\r\n  const result = await appContext.Notifications.AddEntity(\r\n    notification,\r\n    folderPath\r\n  );\r\n  return result;\r\n}\r\n", "import { ACTIONSTATES, stageDescriptions } from \"../constants.js\";\r\nimport { Action } from \"../entities/index.js\";\r\nimport { appContext } from \"../infrastructure/app-db-context.js\";\r\nimport { Result } from \"../sal/shared/index.js\";\r\nimport { actionRequiresApprovalNotification } from \"./notifications-service.js\";\r\n\r\nexport function getNextActionId(planId, actions) {\r\n  let actionNoMax = 1;\r\n  actions.forEach((action) => {\r\n    let actionNo = parseInt(action.ActionID.split(\"-\")[2].split(\"A\")[1]);\r\n    if (actionNo >= actionNoMax) {\r\n      actionNoMax = actionNo + 1;\r\n    }\r\n  });\r\n\r\n  const actionCountPadded = actionNoMax.toString().padStart(2, \"0\");\r\n  return `${planId}-A${actionCountPadded}`;\r\n}\r\n\r\nexport async function submitNewAction(plan, action) {\r\n  console.log(\"submitting action: \" + action.ActionID.Value(), action);\r\n  action.ImplementationStatus.Value(ACTIONSTATES.PLANAPPROVAL);\r\n  action.RevisionCount.Value(0);\r\n  return appContext.Actions.AddEntity(action);\r\n}\r\n\r\nexport async function editAction(plan, action) {\r\n  const planStage = ko.unwrap(plan.ProcessStage.Value);\r\n  const actionStatus = ko.unwrap(action.ImplementationStatus.Value);\r\n\r\n  // If the plan hasn't been approved, or the action is pending approval,\r\n  // we don't need to increment\r\n  const planNotApproved = [\r\n    stageDescriptions.DevelopingActionPlan.stage,\r\n    stageDescriptions.PlanApprovalQSO.stage,\r\n  ].includes(planStage);\r\n\r\n  if (planNotApproved || actionStatus == ACTIONSTATES.QSOAPPROVAL) {\r\n    return appContext.Actions.UpdateEntity(action, Action.Views.Edit);\r\n  }\r\n\r\n  // Plan requires QSO approval\r\n  let revisions = action.RevisionCount.Value() ?? 0;\r\n  action.RevisionCount.Value(++revisions);\r\n\r\n  action.ImplementationStatus.Value(ACTIONSTATES.QSOAPPROVAL);\r\n\r\n  const result = await appContext.Actions.UpdateEntity(\r\n    action,\r\n    Action.Views.EditApproval\r\n  );\r\n\r\n  if (result.isFailure) return result;\r\n\r\n  return actionRequiresApprovalNotification(plan, action);\r\n}\r\n", "import { BaseForm } from \"../../../sal/components/forms/index.js\";\r\nimport { BusinessOffice, Plan } from \"../../../entities/index.js\";\r\nimport {\r\n  directRegisterComponent,\r\n  html,\r\n} from \"../../../sal/infrastructure/index.js\";\r\nimport { editAction } from \"../../../services/actions-service.js\";\r\n\r\nconst componentName = \"edit-action-form\";\r\n\r\nexport class EditActionForm extends BaseForm {\r\n  constructor({ entity, plan, view, onComplete }) {\r\n    super({ entity, view });\r\n\r\n    this.onComplete = onComplete;\r\n    this._plan = plan;\r\n\r\n    const action = ko.unwrap(entity);\r\n    action.PreviousActionDescription.set(action.ActionDescription.get());\r\n    action.PreviousTargetDate.set(action.TargetDate.get());\r\n    action.PreviousActionResponsiblePerson.set(\r\n      action.ActionResponsiblePerson.get()\r\n    );\r\n  }\r\n\r\n  showStageWarning = ko.pureComputed(() => {\r\n    const stage = ko.unwrap(this._plan.ProcessStage.Value);\r\n    return ![\"Developing Action Plan\", \"Pending QSO Plan Approval\"].includes(\r\n      stage\r\n    );\r\n  });\r\n\r\n  async clickSubmit() {\r\n    this.saving(true);\r\n    await this.submit();\r\n    this.saving(false);\r\n  }\r\n\r\n  async submit() {\r\n    const errors = this.validate();\r\n    if (errors.length) return;\r\n\r\n    const entity = ko.unwrap(this.entity);\r\n\r\n    try {\r\n      const result = await editAction(this._plan, entity);\r\n      if (result?.isSuccess) this.onComplete(SP.UI.DialogResult.OK);\r\n      else alert(result.error);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  params = this;\r\n  componentName = componentName;\r\n}\r\n\r\nconst template = html`\r\n  <div class=\"app-form\">\r\n    <!-- ko if: showStageWarning -->\r\n    <div class=\"alert alert-warning fw-bold\">\r\n      Editing this action will require re-approval by the QSO.\r\n    </div>\r\n    <!-- /ko -->\r\n    <div class=\"form-fields vertical\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"form-field-component\"\r\n        data-bind=\"component: {\r\n        name: components.new, params: $data}, \r\n        class: classList\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"form-actions\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success\"\r\n        data-bind=\"click: clickSubmit\"\r\n      >\r\n        Submit\r\n      </button>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\ndirectRegisterComponent(componentName, {\r\n  template,\r\n});\r\n", "import { BaseForm } from \"../../../sal/components/forms/index.js\";\r\nimport { BusinessOffice, Plan } from \"../../../entities/index.js\";\r\nimport {\r\n  directRegisterComponent,\r\n  html,\r\n} from \"../../../sal/infrastructure/index.js\";\r\nimport { addNewPlan } from \"../../../services/plan-service.js\";\r\n\r\nconst componentName = \"new-plan-form\";\r\n\r\nexport class NewPlanForm extends BaseForm {\r\n  constructor({ entity = new Plan(), onComplete }) {\r\n    super({ entity, view: Plan.Views.New });\r\n\r\n    this.onComplete = onComplete;\r\n\r\n    const _entity = ko.unwrap(entity);\r\n    if (!_entity) return;\r\n    _entity.BusinessOffice.Value.subscribe(this.officeLocationChangeHandler);\r\n    _entity.CGFSLocation.Value.subscribe(this.officeLocationChangeHandler);\r\n  }\r\n\r\n  officeLocationChangeHandler = (newVal) => {\r\n    if (!newVal) return;\r\n    const entity = ko.unwrap(this.entity);\r\n    if (!entity) return;\r\n    const office = ko.unwrap(entity.BusinessOffice.Value);\r\n    const location = ko.unwrap(entity.CGFSLocation.Value);\r\n    if (!office || !location) return;\r\n\r\n    entity.QAO.set(office.QAO.get());\r\n    entity.QSO.set(office.getQSOByLocation(location)?.get());\r\n  };\r\n\r\n  async clickSubmit() {\r\n    this.saving(true);\r\n    await this.submit();\r\n    this.saving(false);\r\n  }\r\n\r\n  async submit() {\r\n    const errors = this.validate();\r\n    if (errors.length) return;\r\n\r\n    const entity = ko.unwrap(this.entity);\r\n\r\n    try {\r\n      const result = await addNewPlan(entity);\r\n      if (result?.isSuccess) this.onComplete(SP.UI.DialogResult.OK);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  params = this;\r\n  componentName = componentName;\r\n}\r\n\r\nconst template = html`\r\n  <div class=\"app-form\">\r\n    <div class=\"form-fields vertical\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"form-field-component\"\r\n        data-bind=\"component: {\r\n        name: components.new, params: $data}, \r\n        class: classList\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"form-actions\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-success\"\r\n        data-bind=\"click: clickSubmit\"\r\n      >\r\n        Create CAR/CAP\r\n      </button>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\ndirectRegisterComponent(componentName, {\r\n  template,\r\n});\r\n", "import { Plan } from \"../../../entities/plan.js\";\r\nimport { BaseForm, html } from \"../../../sal/components/forms/index.js\";\r\nimport { TextAreaField } from \"../../../sal/fields/index.js\";\r\nimport { directRegisterComponent } from \"../../../sal/infrastructure/index.js\";\r\nimport { cancelPlan } from \"../../../services/plan-service.js\";\r\n\r\nconst componentName = \"cancel-plan-form\";\r\n\r\nexport class CancelPlanForm extends BaseForm {\r\n  constructor({ entity }) {\r\n    super({ entity, view: Plan.Views.Cancel });\r\n  }\r\n\r\n  saving = ko.observable(false);\r\n\r\n  async clickSubmit() {\r\n    this.saving(true);\r\n    await this.submit();\r\n    this.saving(false);\r\n  }\r\n\r\n  async submit() {\r\n    const errors = this.validate();\r\n    if (errors.length) return;\r\n\r\n    const entity = ko.unwrap(this.entity);\r\n\r\n    try {\r\n      const result = await cancelPlan(entity);\r\n      if (result?.isSuccess) this.onComplete(SP.UI.DialogResult.OK);\r\n      else alert(result?.error);\r\n    } catch (e) {\r\n      alert(e);\r\n    }\r\n  }\r\n\r\n  componentName = componentName;\r\n  params = this;\r\n}\r\n\r\nconst template = html`\r\n  <div class=\"app-form\">\r\n    <div class=\"alert alert-warning fw-bold\">\r\n      Once cancelled, you must contact QTM if you want to re-open this plan.\r\n    </div>\r\n    <div class=\"form-fields vertical\" data-bind=\"foreach: FormFields\">\r\n      <div\r\n        class=\"form-field-component\"\r\n        data-bind=\"component: {\r\n            name: components.edit, params: $data}, \r\n            class: classList\"\r\n      ></div>\r\n    </div>\r\n    <div class=\"form-actions\">\r\n      <button\r\n        type=\"button\"\r\n        class=\"btn btn-danger\"\r\n        data-bind=\"click: clickSubmit\"\r\n      >\r\n        Cancel CAR/CAP\r\n      </button>\r\n    </div>\r\n  </div>\r\n`;\r\n\r\ndirectRegisterComponent(componentName, { template });\r\n", "import { SUPPORTINGDOCUMENTTYPES } from \"../../constants.js\";\r\nimport { appContext } from \"../../infrastructure/app-db-context.js\";\r\nimport { getRoleLinkToPlan } from \"../../services/plan-service.js\";\r\n\r\n// import { printTemplate } from \"./print-template.js\";\r\nconst html = String.raw;\r\n\r\nexport async function printPlan(planId) {\r\n  const plan = await appContext.Plans.FindById(planId);\r\n\r\n  const linkToPlan = getRoleLinkToPlan(plan);\r\n\r\n  const planTitle = plan.Title.toString();\r\n\r\n  // const docs = await appContext.SupportingDocuments.GetItemsByFolderPath(\r\n  //   planTitle\r\n  // );\r\n  const docsResult = await appContext.SupportingDocuments.FindByColumnValue(\r\n    [`substringof('${planTitle}', FileRef)`],\r\n    {},\r\n    {}\r\n  );\r\n\r\n  const docs = docsResult.results;\r\n\r\n  const supportDocs = docs.filter(\r\n    (doc) => doc.DocType.Value() == SUPPORTINGDOCUMENTTYPES.SUPPORT\r\n  );\r\n  const effectivenessDocs = docs.filter(\r\n    (doc) => doc.DocType.Value() == SUPPORTINGDOCUMENTTYPES.EFFECTIVENESS\r\n  );\r\n\r\n  const actionsResult = await appContext.Actions.FindByTitle(planTitle);\r\n\r\n  const actions = actionsResult.results;\r\n\r\n  let recordTypeBody = \"\";\r\n  if (plan.isCAP()) {\r\n    recordTypeBody = capBodyTemplate({ plan });\r\n  } else {\r\n    const whysResult = await appContext.RootCauseWhys.FindByColumnValue(\r\n      [`substringof('${planTitle}', Title)`],\r\n      {},\r\n      {}\r\n    );\r\n    const whys = whysResult.results ?? [];\r\n    recordTypeBody = carBodyTemplate({ plan, whys });\r\n  }\r\n\r\n  const template = printTemplate({\r\n    plan,\r\n    recordTypeBody,\r\n    supportDocs,\r\n    effectivenessDocs,\r\n    actions,\r\n    linkToPlan,\r\n  });\r\n\r\n  const printPage = window.open(\"\", \"Print Page\");\r\n\r\n  printPage.document.open();\r\n  printPage.document.write(template);\r\n  printPage.document.close();\r\n\r\n  printPage.print();\r\n}\r\n\r\nconst printTemplate = ({\r\n  plan,\r\n  recordTypeBody,\r\n  supportDocs,\r\n  effectivenessDocs,\r\n  actions,\r\n  linkToPlan,\r\n}) => html` <html>\r\n  <head>\r\n    <title>${plan.Title.toString()}</title>\r\n  </head>\r\n  <!--\r\n  <link\r\n    rel=\"stylesheet\"\r\n    type=\"text/css\"\r\n    href=\"/sites/CGFS-QMS/Style Library/apps/qms-ci/dist/styles.css\"\r\n  />\r\n  -->\r\n  <style>\r\n    .report table,\r\n    .report th,\r\n    .report td {\r\n      border-collapse: collapse;\r\n      border: 1px solid black;\r\n      padding: 3px 7px;\r\n      font-family: \"Segoe UI\", Segoe, Tahom;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .report th {\r\n      font-weight: 500;\r\n    }\r\n\r\n    .app.report {\r\n      font-family: \"Segoe UI\", Segoe, Tahom;\r\n      font-size: 0.9rem;\r\n    }\r\n\r\n    .section {\r\n      margin-block-end: 1.5em;\r\n      break\r\n    }\r\n\r\n    .subsection {\r\n      break-inside: avoid;\r\n      margin-block-end: 1em;\r\n    }\r\n\r\n    h1.section-title {\r\n      font-size: 1.3rem;\r\n    }\r\n\r\n    .section-title {\r\n      padding: 0;\r\n      margin: 0;\r\n      font-size: 1.3em;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .section-subtitle {\r\n      padding: 0;\r\n      margin: 0.2em 0;\r\n      font-size: 1em;\r\n      font-weight: 600;\r\n    }\r\n\r\n    .plan-link {\r\n      font-size: .9em;\r\n    }\r\n\r\n    .nowrap {\r\n      white-space: nowrap;\r\n    }\r\n  </style>\r\n  <div class=\"app report\">\r\n    <h1 class=\"section-title\">\r\n      ${plan.Title.toString()} - ${plan.Subject.toString()}\r\n    </h1>\r\n    <div class=\"section\">\r\n      <span class=\"plan-link\">[${linkToPlan}]</span>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td>Record ID:</td>\r\n            <td>${plan.Title.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Type:</td>\r\n            <td>${plan.RecordType.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Subject:</td>\r\n            <td>${plan.Subject.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Business Office:</td>\r\n            <td>${plan.BusinessOffice.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>CGFS Location:</td>\r\n            <td>${plan.CGFSLocation.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>QSO:</td>\r\n            <td>${plan.QSO.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>QAO:</td>\r\n            <td>${plan.QAO.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Source:</td>\r\n            <td>${plan.Source.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Self-Initiated:</td>\r\n            <td>${plan.SelfInitiated.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Coordinator:</td>\r\n            <td>${plan.CoordinatorName.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Submitted Date:</td>\r\n            <td>${plan.SubmittedDate.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Submitted By:</td>\r\n            <td>${plan.AuthorName.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Extension Count:</td>\r\n            <td>${plan.ExtensionCount.toString() ?? \"0\"}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Target Implementation Date:</td>\r\n            <td>${plan.ImplementationTargetDate.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Implementation Completed Date:</td>\r\n            <td>${plan.QSOImplementAdjudicationDate.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Target Verification Date:</td>\r\n            <td>${plan.EffectivenessVerificationTargetD.toString()}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Supporting Docs Count:</td>\r\n            <td>${supportDocs.length}</td>\r\n          </tr>\r\n          <tr>\r\n            <td>Effectiveness Docs Count:</td>\r\n            <td>${effectivenessDocs.length}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    ${recordTypeBody}\r\n    <div class=\"section\">\r\n      <h2 class=\"section-title\">Supporting Documents:</h2>\r\n      <ul>\r\n        ${supportDocs.length\r\n          ? supportDocs\r\n              .map((doc) => html`<li>${doc.FileName.toString()}</li>`)\r\n              .join(\"\")\r\n          : html`<li style=\"font-style: italic\">No Documents.</li>`}\r\n      </ul>\r\n    </div>\r\n    <div class=\"section\">\r\n      <h2 class=\"section-title\">Actions:</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Description</th>\r\n            <th>Responsible Person</th>\r\n            <th>Target Date</th>\r\n            <th>Completion Date</th>\r\n            <th>Status</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${actions.map(actionTemplate).join(\"\")}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    <div class=\"section\">\r\n      <h2 class=\"section-title\">Office Risk Impact</h2>\r\n      <div class=\"subsection\">\r\n        <h3 class=\"section-subtitle\">\r\n          Does this CAR/CAP impact your Office Risks, Mitigations, or Internal\r\n          Controls?\r\n        </h3>\r\n        <div>${plan.OfficeImpactBool.toString()}</div>\r\n      </div>\r\n      <div class=\"subsection\">\r\n        <h3 class=\"section-subtitle\">Please give a brief description:</h3>\r\n        <div data-bind=\"html: OfficeImpactDesc\">\r\n          ${plan.OfficeImpactDesc.toString()}\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"section\">\r\n      <h2 class=\"section-title\">Proof of Effectiveness:</h2>\r\n      <div class=\"subsection\">\r\n        <h3 class=\"section-subtitle\">Text Description:</h3>\r\n        <div>${plan.EffectivenessDescription.toString()}</div>\r\n      </div>\r\n      <div class=\"subsection\">\r\n        <h3 class=\"section-subtitle\">Effectiveness Documents:</h3>\r\n        <ul>\r\n          ${effectivenessDocs.length\r\n            ? effectivenessDocs\r\n                .map((doc) => html`<li>${doc.FileName.toString()}</li>`)\r\n                .join(\"\")\r\n            : html`<li style=\"font-style: italic\">No Documents.</li>`}\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</html>`;\r\n\r\nconst capBodyTemplate = ({ plan }) => html` <div>\r\n  <div class=\"section\">\r\n    <h2 class=\"section-title\">Opportunity for Improvement:</h2>\r\n    <div>${plan.OFIDescription.toString()}</div>\r\n  </div>\r\n  <div class=\"section\">\r\n    <h2 class=\"section-title\">Discovery Data and Analysis:</h2>\r\n    <div>${plan.DiscoveryDataAnalysis.toString()}</div>\r\n  </div>\r\n</div>`;\r\n\r\nconst carBodyTemplate = ({ plan, whys }) => html` <div>\r\n  <div class=\"section\">\r\n    <h2 class=\"section-title\">Problem Description:</h2>\r\n    <div>${plan.ProblemDescription.toString()}</div>\r\n  </div>\r\n  <div class=\"section\">\r\n    <h2 class=\"section-title\">Containment Action:</h2>\r\n    <div>${plan.ContainmentAction.toString()}</div>\r\n  </div>\r\n  <div class=\"section\">\r\n    <h2 class=\"section-title\">Root Cause Determination:</h2>\r\n    <div class=\"subsection\">\r\n      <h3 class=\"section-subtitle\">5 whys:</h3>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Question</th>\r\n            <th>Answer</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          ${whys.map(\r\n            (why) => html`<tr>\r\n              <td>${why.Number.toString()}</td>\r\n              <td>${why.Question.toString()}</td>\r\n              <td>${why.Answer.toString()}</td>\r\n            </tr>`\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n\r\n    <div class=\"subsection\">\r\n      <h3 class=\"section-subtitle\">Root Cause Determination:</h3>\r\n      <div>${plan.RootCauseDetermination.toString()}</div>\r\n    </div>\r\n  </div>\r\n  <div class=\"section\">\r\n    <h2 class=\"section-title\">Similar Nonconformities:</h2>\r\n    <div class=\"subsection\">\r\n      <h3 class=\"section-subtitle\">\r\n        Could this noncomformance occur in another one of your office processes\r\n        or in a corresponding office in another CGFS location?\r\n      </h3>\r\n      <div>${plan.SimilarNoncomformityBool.toString()}</div>\r\n    </div>\r\n    <div class=\"subsection\">\r\n      <h3 class=\"section-subtitle\">Explanation:</h3>\r\n      <div>${plan.SimilarNoncomformityDesc.toString()}</div>\r\n    </div>\r\n  </div>\r\n</div>`;\r\n\r\nconst actionTemplate = (action) => html`\r\n  <tr>\r\n    <td class=\"nowrap\">${action.ActionID.toString()}</td>\r\n    <td>${action.ActionDescription.toString()}</td>\r\n    <td>${action.ActionResponsiblePerson.toString()}</td>\r\n    <td>${action.TargetDate.toString()}</td>\r\n    <td>${action.ImplementationDate.toString()}</td>\r\n    <td>${action.ImplementationStatus.toString()}</td>\r\n  </tr>\r\n`;\r\n", "import { getUrlParam, setUrlParam } from \"../../common/router.js\";\r\nimport { Tab, TabsModule } from \"../../components/tabs/tabs.js\";\r\nimport { makeDataTable } from \"../../common/data-table.js\";\r\n\r\nimport { InitSal, sortByTitle } from \"../../sal/infrastructure/index.js\";\r\nimport { appContext } from \"../../infrastructure/app-db-context.js\";\r\n\r\nimport * as ModalDialog from \"../../sal/components/modal/index.js\";\r\nimport * as FormManager from \"../../sal/infrastructure/form_manager.js\";\r\nimport {\r\n  businessOfficeStore,\r\n  sourcesStore,\r\n} from \"../../infrastructure/store.js\";\r\nimport {\r\n  Action,\r\n  Plan,\r\n  Rejection,\r\n  RootCauseWhy,\r\n  SupportingDocument,\r\n} from \"../../entities/index.js\";\r\n\r\nimport {\r\n  ROLES,\r\n  LOCATION,\r\n  stageDescriptions,\r\n  SUPPORTINGDOCUMENTTYPES,\r\n} from \"../../constants.js\";\r\n\r\nimport { EditActionForm, NewPlanForm } from \"../../forms/index.js\";\r\n\r\nimport {\r\n  editAction,\r\n  getNextActionId,\r\n  submitNewAction,\r\n} from \"../../services/actions-service.js\";\r\nimport {\r\n  DateField,\r\n  PeopleField,\r\n  TextAreaField,\r\n} from \"../../sal/fields/index.js\";\r\nimport { editPlan } from \"../../services/plan-service.js\";\r\n\r\nimport {\r\n  addTask,\r\n  blockingTasks,\r\n  finishTask,\r\n  runningTasks,\r\n  tasks,\r\n} from \"../../services/tasks-service.js\";\r\nimport { CancelPlanForm } from \"../../forms/plan/cancel/cancel-plan-form.js\";\r\nimport {\r\n  currentRole,\r\n  currentUser,\r\n  userRoleOpts,\r\n} from \"../../services/authorization.js\";\r\n\r\nimport {\r\n  stageApprovedNotification,\r\n  stageRejectedNotification,\r\n} from \"../../services/notifications-service.js\";\r\nimport { printPlan } from \"../../components/print/print.js\";\r\n\r\n// import { CAPViewModel } from \"../../vm.js\";\r\n/*      app-main.js\r\n\r\n    SPA used by CAP/CAR Submitters, QSO's/\r\n    QAO's, and QTM for CAP/CAR monitoring and adjudication.\r\n\r\n    App Dependencies: ViewModels.js, SAL.js, CAPColumnsMapping.js\r\n    Library Dependencies: knockout 3.4, jquery 3.3\r\n\r\n    Author: Peter Backlund\r\n    Email: backlundpf <@> state.gov\r\n    Date Created: 2018-12-18\r\n\r\n*/\r\n\r\n/*\r\n    TODO:\r\n    Important - \r\n    x Add target implementation date.\r\n    Actions sent to QTM after second revision.\r\n    x Legend for CAP Process Stage\r\n    Add link to record version history\r\n    x Remove implementation remark, just have a mark as complete option.\r\n    x Add rejection entities.\r\n    Howto send to QAO after QSO rejection?\r\n\r\n    TODO PURGE:\r\n    EffectivenessProcessStage\r\n    DateSubmitted\r\n\r\n    Other -\r\n    Once a CAP is approved, we need to reload the main data so it disappears from the \"Awaiting Approval\"\r\n    Archive previously closed caps\r\n    Status bar\r\n*/\r\nwindow.app = window.app || {};\r\ndocument.title = \"CAR/CAP Tool\";\r\n\r\nvar timer = null;\r\nvar refreshInterval = 100 * 60 * 1000; // 10 minutes\r\n\r\nfunction refreshPageInterval() {\r\n  clearTimeout(timer);\r\n  timer = setTimeout(function () {\r\n    window.location.reload(true);\r\n  }, refreshInterval);\r\n}\r\n\r\n$(document).mousemove(refreshPageInterval);\r\n\r\nDate.prototype.toDateInputValue = function () {\r\n  var local = new Date(this);\r\n  local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n  return local.toJSON().slice(0, 10);\r\n};\r\n\r\nfunction initStaticListRefs() {\r\n  app.listRefs = {};\r\n  app.listRefs.Plans = new sal.NewSPList(CIItemListDef);\r\n  app.listRefs.Actions = new sal.NewSPList(ActionListDef);\r\n  app.listRefs.Whys = new sal.NewSPList(WhyListDef);\r\n  app.listRefs.Rejections = new sal.NewSPList(RejectionListDef);\r\n  app.listRefs.BusinessOffices = new sal.NewSPList(BusinessOfficeListDef);\r\n  app.listRefs.SupportDocs = new sal.NewSPList(DocumentListDef);\r\n  app.listRefs.TempQOs = new sal.NewSPList(TempQOListDef);\r\n  app.listRefs.RecordSources = new sal.NewSPList(RecordSourcesListDef);\r\n}\r\n\r\nfunction isRecordOwner() {\r\n  // Check if we are listed as the QAO or QSO\r\n  vm.selectedRecord.curUserHasRole(ROLES.QSO);\r\n}\r\n\r\nfunction onlyUnique(value, index, self) {\r\n  return self.indexOf(value) === index;\r\n}\r\n\r\n// Check if any of our rejections have negated by making it passed their stage.\r\nfunction approveUpdateRejections() {\r\n  var valuepair = [[\"Active\", 0]];\r\n  var rejectionsToClose = [];\r\n  var curStageIndex = vm\r\n    .stageDescriptionsArray()\r\n    .findIndex(function (stageDesc) {\r\n      return stageDesc.stage == vm.selectedRecord.ProcessStage();\r\n    });\r\n  vm.Rejections().forEach(function (item, idx, arr) {\r\n    var rejectionStageIndex = vm\r\n      .stageDescriptionsArray()\r\n      .findIndex(function (stageDesc) {\r\n        return stageDesc.stage == item.Stage;\r\n      });\r\n    if (rejectionStageIndex) {\r\n      if (rejectionStageIndex <= curStageIndex) {\r\n        // push this rejection to the list of rejections we're closing.\r\n        rejectionsToClose.push(item.ID);\r\n        //UpdateRejectionItemValuePair(item.RejectionId, valuepair);\r\n      }\r\n    }\r\n  });\r\n\r\n  // We don't need to track the number of items since our calling\r\n  // function should be handling it.\r\n\r\n  rejectionsToClose.forEach(function (id) {\r\n    app.listRefs.Rejections.updateListItem(id, valuepair, function () {});\r\n  });\r\n}\r\n\r\n// $(\"#tabs\").on(\"click\", function () {\r\n//   // curPath = location.href;\r\n//   vm.tab($(\"#tabs\").tabs(\"option\", \"active\"));\r\n\r\n//   //history.pushState({}, \"\", curPath);\r\n// });\r\n\r\n/********************************************************************************/\r\n/*                                        Tab 0                                 */\r\n/********************************************************************************/\r\n\r\n/********************************************************************************/\r\n/*                                        Tab 1                                 */\r\n/********************************************************************************/\r\n// Refresh button\r\n$(\"#linkRefresh\").click(m_fnRefresh);\r\n// Initial Submission\r\n\r\n//          STAGE 1:\r\n$(\"#warnAddProblemResolver\").click(function () {\r\n  document.getElementById(\"divInformation\").scrollIntoView();\r\n});\r\n\r\n//          STAGE 2: Develop Action Plan\r\n// set the CAPs Process Stage to Submit for QSO Approval\r\n$(\"#warnAddAction\").click(function () {\r\n  document.getElementById(\"cardAwaitingActionList\").scrollIntoView();\r\n});\r\n\r\n$(\"#warnAddContainmentAction\").click(function () {\r\n  document.getElementById(\"cardContainmentAction\").scrollIntoView();\r\n});\r\n\r\n$(\"#warnAddWhy\").click(function () {\r\n  document.getElementById(\"rootCauseDiv\").scrollIntoView();\r\n});\r\n\r\n$(\"#warnAddRootCause\").click(function () {\r\n  document.getElementById(\"rootCauseDiv\").scrollIntoView();\r\n});\r\n\r\n$(\"#warnAddSimilarNoncomformity\").click(function () {\r\n  document.getElementById(\"cardSimilarNoncomformities\").scrollIntoView();\r\n});\r\n\r\n$(\"#warnAddProblemResolver2\").click(function () {\r\n  document.getElementById(\"divInformation\").scrollIntoView();\r\n});\r\n\r\n//          STAGE 3: Work Actions\r\n// Implementation Submission\r\n$(\"#warnCompleteActions\").click(function () {\r\n  document.getElementById(\"cardAwaitingActionList\").scrollIntoView();\r\n});\r\n\r\n$(\"#warnAddSupportingDoc\").click(function () {\r\n  document.getElementById(\"cardSupportingDocuments\").scrollIntoView();\r\n});\r\n\r\n//          STAGE 4: Effectiveness\r\n// Effectiveness Actions\r\n$(\"#warnAddEffectivenessDoc\").click(function () {\r\n  document.getElementById(\"cardEffectivenessDocuments\").scrollIntoView();\r\n});\r\n\r\n/* Documents */\r\n\r\n// CAR Specific\r\n//Problem description\r\n\r\n// Action List\r\n$(\"#buttonSubmitNewAction\").click(function () {\r\n  if (vm.controls.allowSubmitNewAction()) {\r\n    m_fnCreateAction(vm.CAPID(), OnActionCreateCallback);\r\n  }\r\n});\r\n\r\n/********************************************************************************/\r\n/*                                        Tab 4 lookup                          */\r\n/********************************************************************************/\r\n\r\n$(\"#btnRequestAllRecords\").click(LoadMainData);\r\n\r\n// Tab 0 My CAP Table configuration:\r\n\r\n//TAB 1\r\n\r\n// Loading CAP data\r\n// This is where we structure the query for what get's loaded on main tab page and the drop-down on the specific record page.\r\nfunction LoadMainData(next) {\r\n  const refreshTask = addTask(tasks.refreshPlans);\r\n  document.getElementById(\"spanLoadStatus\").innerText = \"Loading Data\";\r\n  next = next ? next : function () {};\r\n  var dataLoadIncrementer = new Incremental(0, 3, () => {\r\n    finishTask(refreshTask);\r\n    next();\r\n  });\r\n  // Let's load our Actions and our Items\r\n  app.listRefs.Plans.getListItems(\"\", function (plans) {\r\n    vm.allRecordsArray(plans);\r\n    document.getElementById(\"spanLoadStatus\").innerText = \"Plans Loaded\";\r\n    dataLoadIncrementer.inc();\r\n  });\r\n\r\n  app.listRefs.Actions.getListItems(\"\", function (actions) {\r\n    vm.allActionsArray(actions);\r\n    document.getElementById(\"spanLoadStatus\").innerText = \"Actions Loaded\";\r\n    dataLoadIncrementer.inc();\r\n  });\r\n\r\n  app.listRefs.BusinessOffices.getListItems(\"\", function (offices) {\r\n    vm.allBusinessOffices(offices);\r\n    document.getElementById(\"spanLoadStatus\").innerText = \"Offices Loaded\";\r\n    dataLoadIncrementer.inc();\r\n  });\r\n\r\n  app.listRefs.TempQOs.getListItems(\"\", function (offices) {\r\n    vm.allTempQOs(offices);\r\n    document.getElementById(\"spanLoadStatus\").innerText = \"QOs Loaded\";\r\n    dataLoadIncrementer.inc();\r\n  });\r\n}\r\n\r\nfunction loadSelectedRecordByObj(record) {\r\n  LoadSelectedCAP(record.Title);\r\n}\r\n// IMPORTANT - use this section to hide and show elements to the user based on permission level.\r\nasync function LoadSelectedCAP(capid) {\r\n  const viewTask = addTask(tasks.view);\r\n\r\n  var capid = capid.Title ? capid.Title : capid;\r\n\r\n  // New Application Structure\r\n  const plan = await appContext.Plans.FindByTitle(capid);\r\n  if (plan?.results.length) vm.selectedPlan(plan.results.pop());\r\n\r\n  // Check if we are being passed an object\r\n  //capid = capid.Title;\r\n\r\n  var selectedRecordObj = vm.allRecordsArray().find(function (record) {\r\n    return record.Title == capid;\r\n  });\r\n\r\n  if (!selectedRecordObj || !selectedRecordObj.Title) return;\r\n\r\n  Common.Utilities.setValuePairs(\r\n    CIItemListDef,\r\n    vm.selectedRecord,\r\n    selectedRecordObj\r\n  );\r\n\r\n  var incrementer = new Incremental(0, 2, () => {\r\n    finishTask(viewTask);\r\n  });\r\n\r\n  // Fetch related data\r\n  var camlQ =\r\n    \"<View><Query><Where><Eq><FieldRef Name='Title'/><Value Type='Text'>\" +\r\n    capid +\r\n    \"</Value></Eq></Where><OrderBy><FieldRef Name='Title' Ascending='FALSE'/></OrderBy></Query></View>\";\r\n\r\n  //loadRejections();\r\n  app.listRefs.Rejections.getListItems(camlQ, (rejections) => {\r\n    incrementer.inc();\r\n    vm.Rejections(rejections);\r\n  });\r\n  // loadStatusLegend();\r\n\r\n  var docsCamlQ =\r\n    \"<View Scope='RecursiveAll'><Query><Where><Eq><FieldRef Name='Record'/><Value Type='Text'>\" +\r\n    capid +\r\n    \"</Value></Eq></Where><OrderBy><FieldRef Name='Title' Ascending='FALSE'/></OrderBy></Query></View>\";\r\n\r\n  app.listRefs.SupportDocs.getListItems(docsCamlQ, (docs) => {\r\n    incrementer.inc();\r\n    vm.selectedDocuments(docs);\r\n  });\r\n\r\n  //hideEditFields();\r\n\r\n  if (vm.selectedRecord.RecordType() == \"CAR\") {\r\n    incrementer.incTarget();\r\n    var camlQ =\r\n      \"<View><Query><Where><Contains><FieldRef Name='Title'/><Value Type='Text'>\" +\r\n      capid +\r\n      \"</Value></Contains></Where><OrderBy><FieldRef Name='Number' Ascending='TRUE'/></OrderBy></Query></View>\";\r\n\r\n    app.listRefs.Whys.getListItems(camlQ, (whys) => {\r\n      vm.RootCauseWhy(whys);\r\n      incrementer.inc();\r\n    });\r\n  }\r\n  //loadStages();\r\n}\r\n\r\n/************************************************************\r\n * Logic for action items\r\n ************************************************************/\r\n\r\n/**********************************************************************************************/\r\n/*                               APPROVALS AND REJECTIONS EVENT HANDLERS                                  */\r\n/**********************************************************************************************/\r\n/* Problem Approval */\r\nfunction m_fnApproveProblemQSO() {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QSO)) {\r\n    alert('You don\\'t have the correct role \"QSO\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QSOProblemAdjudication\", \"Approved\"],\r\n    [\"SubmittedDate\", ts],\r\n    [\"QSOProblemAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Developing Action Plan\"],\r\n  ];\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\nfunction m_fnApproveProblemQAO() {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QAO)) {\r\n    alert('You don\\'t have the correct role \"QAO\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QAOProblemAdjudication\", \"Approved\"],\r\n    [\"SubmittedDate\", ts],\r\n    [\"QAOProblemAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Developing Action Plan\"],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\nfunction m_fnApproveProblemQTMB() {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTMB)) {\r\n    alert('You don\\'t have the correct role \"QTM-B\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QMSBProblemAdjudication\", \"Approved\"],\r\n    [\"QMSBProblemAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Pending QTM Problem Approval\"],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\nfunction m_fnApproveProblemQTM() {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTM)) {\r\n    alert('You don\\'t have the correct role \"QTM\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  const today = new Date();\r\n  const target_deadline = new Date(\r\n    today.getFullYear(),\r\n    today.getMonth(),\r\n    today.getDate() + 30\r\n  ).toISOString();\r\n\r\n  var valuePair = [\r\n    [\"QTMProblemAdjudication\", \"Approved\"],\r\n    [\"QTMProblemAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Pending QSO Problem Approval\"],\r\n    [\"NextTargetDate\", target_deadline],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\nfunction m_fnRejectProblemQSO(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QSO)) {\r\n    alert('You don\\'t have the correct role \"QSO\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var valuePair = [\r\n    [\"QSOProblemAdjudication\", \"Rejected\"],\r\n    [\"QSOProblemAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Pending QAO Problem Approval\"],\r\n  ];\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\nfunction m_fnRejectProblemQAO(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QAO)) {\r\n    alert('You don\\'t have the correct role \"QAO\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var valuePair = [\r\n    [\"QAOProblemAdjudication\", \"Rejected\"],\r\n    [\"QAOProblemAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Editing\"],\r\n  ];\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\nfunction m_fnRejectProblemQTMB(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTMB)) {\r\n    alert('You don\\'t have the correct role \"QTM-B\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var valuePair = [\r\n    [\"QMSBProblemAdjudication\", \"Rejected\"],\r\n    [\"QMSBAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Editing\"],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\nfunction m_fnRejectProblemQTM(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTM)) {\r\n    alert('You don\\'t have the correct role \"QTM\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var valuePair = [\r\n    [\"QTMProblemAdjudication\", \"Rejected\"],\r\n    [\"QTMProblemAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Editing\"],\r\n  ];\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\n/* Plan Approval */\r\nfunction m_fnApprovePlanQSO(planId) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QSO)) {\r\n    alert('You don\\'t have the correct role \"QSO\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QSOApprovalStatus\", \"Approved\"],\r\n    [\"QSOAdjudicationDate\", ts],\r\n  ];\r\n  switch (vm.selectedRecord.CGFSLocation()) {\r\n    case \"Bangkok\":\r\n      valuePair.push([\r\n        \"ProcessStage\",\r\n        stageDescriptions.PlanApprovalQTMB.stage,\r\n      ]);\r\n      break;\r\n    default:\r\n      valuePair.push([\"ProcessStage\", stageDescriptions.PlanApprovalQTM.stage]);\r\n  }\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\nfunction m_fnApprovePlanQTMB(planId) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTMB)) {\r\n    alert('You don\\'t have the correct role \"QTM-B\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QMSBApprovalStatus\", \"Approved\"],\r\n    [\"QMSBAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Pending QTM Plan Approval\"],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\nfunction m_fnApprovePlanQTM(planId) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTM)) {\r\n    alert('You don\\'t have the correct role \"QTM\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QTMApprovalStatus\", \"Approved\"],\r\n    [\"QTMAdjudicationDate\", ts],\r\n    [\"ProcessStage\", \"Implementing Action Plan\"],\r\n    [\r\n      \"NextTargetDate\",\r\n      new Date(vm.selectedRecord.ImplementationTargetDate.date()).toISOString(),\r\n    ],\r\n  ];\r\n  activateActions(function () {\r\n    app.listRefs.Plans.updateListItem(\r\n      planId,\r\n      valuePair,\r\n      onStageApprovedCallback\r\n    );\r\n  });\r\n}\r\n\r\nfunction activateActions(callback) {\r\n  var pendingActions = vm.ActionListItems().filter(function (action) {\r\n    return action.ImplementationStatus == ACTIONSTATE.PENDINGAPPROVAL;\r\n  });\r\n\r\n  if (!pendingActions.length) {\r\n    callback();\r\n    return;\r\n  }\r\n\r\n  var actionInc = new Incremental(0, pendingActions.length, callback);\r\n\r\n  pendingActions.forEach(function (action) {\r\n    app.listRefs.Actions.updateListItem(\r\n      action.ID,\r\n      [[\"ImplementationStatus\", ACTIONSTATE.INPROGRESS]],\r\n      function () {\r\n        // increment the counter\r\n        actionInc.inc();\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n// Plan Rejections\r\nfunction m_fnRejectPlanQSO(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QSO)) {\r\n    alert('You don\\'t have the correct role \"QSO\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var valuePair = [\r\n    [\"QSOApprovalStatus\", \"Rejected\"],\r\n    [\"QSOAdjudicationDate\", ts],\r\n    [\r\n      \"ProcessStage\",\r\n      stageDescriptions[vm.selectedRecord.ProcessStageObj().onReject()].stage,\r\n    ],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\nfunction m_fnRejectPlanQTMB(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTMB)) {\r\n    alert('You don\\'t have the correct role \"QTM-B\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var valuePair = [\r\n    [\"QMSBApprovalStatus\", \"Rejected\"],\r\n    [\"QMSBAdjudicationDate\", ts],\r\n    [\r\n      \"ProcessStage\",\r\n      stageDescriptions[vm.selectedRecord.ProcessStageObj().onReject()].stage,\r\n    ],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\nfunction m_fnRejectPlanQTM(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTM)) {\r\n    alert('You don\\'t have the correct role \"QTM\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var valuePair = [\r\n    [\"QTMApprovalStatus\", \"Rejected\"],\r\n    [\"QTMAdjudicationDate\", ts],\r\n    [\r\n      \"ProcessStage\",\r\n      stageDescriptions[vm.selectedRecord.ProcessStageObj().onReject()].stage,\r\n    ],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\n/* Implementation Approval */\r\n\r\nfunction m_fnApproveImplement() {\r\n  var planId = vm.selectedRecord.ID();\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"ProcessStage\", \"Pending Effectiveness Submission\"],\r\n    [\"QSOImplementAdjudication\", \"Accepted\"],\r\n    [\"QSOImplementAdjudicationDate\", ts],\r\n    [\r\n      \"NextTargetDate\",\r\n      new Date(\r\n        vm.selectedRecord.EffectivenessVerificationTargetD.date()\r\n      ).toISOString(),\r\n    ],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\n// Set the CAPProcessStage to Pending QSO Approval\r\nfunction m_fnRejectImplement(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"ProcessStage\", \"Implementing Action Plan\"],\r\n    [\"QSOImplementAdjudication\", \"Rejected\"],\r\n    [\"QSOImplementAdjudicationDate\", ts],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\n/* Effectiveness Approval and Verification Stage */\r\nfunction m_fnApproveEffectivenessQSO() {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QSO)) {\r\n    alert('You don\\'t have the correct role \"QSO\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QSOEffectivenessAdjudication\", \"Accepted\"],\r\n    [\"QSOEffectivenessAdjudicationDate\", ts],\r\n  ];\r\n\r\n  switch (vm.selectedRecord.CGFSLocation()) {\r\n    case \"Bangkok\":\r\n      valuePair.push([\"ProcessStage\", \"Pending QTM-B Effectiveness Approval\"]);\r\n      break;\r\n    default:\r\n      valuePair.push([\"ProcessStage\", \"Pending QTM Effectiveness Approval\"]);\r\n  }\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\nfunction m_fnApproveEffectivenessQTMB() {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTMB)) {\r\n    alert('You don\\'t have the correct role \"QTM-B\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QMSBEffectivenessAdjudication\", \"Accepted\"],\r\n    [\"QMSBEffectivenessAdjudicationDat\", ts],\r\n    [\"ProcessStage\", \"Pending QTM Effectiveness Approval\"],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\nfunction m_fnApproveEffectivenessQTM() {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTM)) {\r\n    alert('You don\\'t have the correct role \"QTM\" to perform this action');\r\n    return;\r\n  }\r\n  approveUpdateRejections();\r\n  var ts = new Date().toISOString();\r\n  var valuePair = [\r\n    [\"QTMEffectivenessAdjudication\", \"Accepted\"],\r\n    [\"QTMEffectivenessAdjudicationDate\", ts],\r\n    [\"NextTargetDate\", new Date(0).toISOString()],\r\n    [\"ProcessStage\", \"Closed: Accepted\"],\r\n    [\"Active\", \"0\"],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, onStageApprovedCallback);\r\n}\r\n\r\nfunction m_fnRejectEffectivenessQSO(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QSO)) {\r\n    alert('You don\\'t have the correct role \"QSO\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var rejectReason = vm.effectivenessRejectReason();\r\n\r\n  var valuePair = [\r\n    [\"QSOEffectivenessAdjudication\", \"Rejected\"],\r\n    [\"QSOEffectivenessAdjudicationDate\", ts],\r\n  ];\r\n\r\n  switch (rejectReason) {\r\n    case \"Lack of Evidence\":\r\n      // Sent back for lack of evidence, add more effectiveness docs\r\n      valuePair.push([\r\n        \"ProcessStage\",\r\n        \"Pending Effectiveness Submission: Rejected\",\r\n      ]);\r\n      break;\r\n    case \"Not Effective\":\r\n      // CAP was ineffective, we need to send it all the way back to the implementation stage.\r\n      // TODO: Should we clear everything else here as well?\r\n      valuePair.push([\"ProcessStage\", \"Developing Action Plan\"]);\r\n      break;\r\n  }\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\nfunction m_fnRejectEffectivenessQTMB(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTMB)) {\r\n    alert('You don\\'t have the correct role \"QTMB\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var rejectReason = vm.effectivenessRejectReason();\r\n\r\n  var valuePair = [\r\n    [\"QMSBEffectivenessAdjudication\", \"Rejected\"],\r\n    [\"QMSBEffectivenessAdjudicationDat\", ts],\r\n  ];\r\n\r\n  switch (rejectReason) {\r\n    case \"Lack of Evidence\":\r\n      // Sent back for lack of evidence, add more effectiveness docs\r\n      valuePair.push([\r\n        \"ProcessStage\",\r\n        \"Pending Effectiveness Submission: Rejected\",\r\n      ]);\r\n      break;\r\n    case \"Not Effective\":\r\n      // CAP was ineffective, we need to send it all the way back to the implementation stage.\r\n      // TODO: Should we clear everything else here as well?\r\n      valuePair.push([\"ProcessStage\", \"Developing Action Plan\"]);\r\n      break;\r\n  }\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\nfunction m_fnRejectEffectivenessQTM(callback) {\r\n  var planId = vm.selectedRecord.ID();\r\n  if (!vm.selectedRecord.curUserHasRole(ROLES.QTM)) {\r\n    alert('You don\\'t have the correct role \"QTM\" to perform this action');\r\n    return;\r\n  }\r\n  var ts = new Date().toISOString();\r\n\r\n  var rejectReason = vm.effectivenessRejectReason();\r\n\r\n  var valuePair = [\r\n    [\"QTMEffectivenessAdjudication\", \"Rejected\"],\r\n    [\"QTMEffectivenessAdjudicationDate\", ts],\r\n  ];\r\n\r\n  switch (rejectReason) {\r\n    case \"Lack of Evidence\":\r\n      // Sent back for lack of evidence, add more effectiveness docs\r\n      valuePair.push([\r\n        \"ProcessStage\",\r\n        \"Pending Effectiveness Submission: Rejected\",\r\n      ]);\r\n      break;\r\n    case \"Not Effective\":\r\n      // CAP was ineffective, we need to send it all the way back to the implementation stage.\r\n      // TODO: Should we clear everything else here as well?\r\n      valuePair.push([\"ProcessStage\", \"Developing Action Plan\"]);\r\n      break;\r\n  }\r\n\r\n  app.listRefs.Plans.updateListItem(planId, valuePair, callback);\r\n}\r\n\r\n/* CALLBACKS AND PAGE MANIPULATIONS */\r\n\r\nfunction m_fnRefresh(result, value) {\r\n  if (typeof result !== \"undefined\" && result == SP.UI.DialogResult.CANCEL) {\r\n    return;\r\n  }\r\n  addTask(tasks.refresh);\r\n  LoadMainData(function () {\r\n    LoadSelectedCAP(vm.selectedTitle());\r\n    finishTask(tasks.refresh);\r\n  });\r\n}\r\n\r\nasync function onStageApprovedCallback(result) {\r\n  if (typeof result !== \"undefined\" && result == SP.UI.DialogResult.CANCEL) {\r\n    return;\r\n  }\r\n  const refreshTask = addTask(tasks.refresh);\r\n\r\n  LoadMainData(async function () {\r\n    await LoadSelectedCAP(vm.selectedTitle());\r\n    const plan = ko.unwrap(vm.selectedPlan);\r\n    await stageApprovedNotification(plan);\r\n    finishTask(refreshTask);\r\n  });\r\n}\r\n\r\nasync function onStageRejectedCallback(plan, rejection) {\r\n  // if (typeof result !== \"undefined\" && result == SP.UI.DialogResult.CANCEL) {\r\n  //   return;\r\n  // }\r\n  return new Promise((resolve) => {\r\n    const refreshTask = addTask(tasks.refresh);\r\n\r\n    LoadMainData(async function () {\r\n      await LoadSelectedCAP(vm.selectedTitle());\r\n      const plan = ko.unwrap(vm.selectedPlan);\r\n      await stageRejectedNotification(plan, rejection);\r\n      finishTask(refreshTask);\r\n      resolve();\r\n    });\r\n  });\r\n}\r\n\r\nfunction OnCapCreateCallback(result, value) {\r\n  if (result === SP.UI.DialogResult.OK) {\r\n    addTask(tasks.refreshPlans);\r\n    app.listRefs.Plans.getListItems(\"\", function (items) {\r\n      var id = items[items.length - 1];\r\n      vm.allRecordsArray(items);\r\n      vm.selectedTitle(id.Title);\r\n      vm.tab(TABS.PLANDETAIL);\r\n      finishTask(tasks.refreshPlans);\r\n      // m_fnForward();\r\n    });\r\n  }\r\n}\r\n\r\nfunction OnCapEditRefresh(result, value) {\r\n  // result = 1 is OK\r\n  // result = 0 is Cancel\r\n  // result = -1 is Uh oh, something is wrong\r\n  //TODO: Check if the processstage is now closed.\r\n  if (result === SP.UI.DialogResult.OK) {\r\n    m_fnRefresh();\r\n  }\r\n}\r\n\r\nfunction OnActionEditCallback(result, value) {\r\n  if (result === SP.UI.DialogResult.OK) {\r\n    addTask(tasks.newAction);\r\n    app.listRefs.Actions.getListItems(\"\", function (actions) {\r\n      vm.allActionsArray(actions);\r\n      vm.controls.record.updateImplementationDate();\r\n      finishTask(tasks.newAction);\r\n    });\r\n  }\r\n}\r\n\r\nfunction OnActionCreateCallback(result, value) {\r\n  if (result === SP.UI.DialogResult.OK) {\r\n    addTask(tasks.newAction);\r\n    // The user has modified the Action, the Associated CAP must be updated.\r\n    app.listRefs.Actions.getListItems(\"\", function (actions) {\r\n      vm.allActionsArray(actions);\r\n      vm.controls.record.updateImplementationDate();\r\n      finishTask(tasks.newAction);\r\n    });\r\n  }\r\n}\r\n\r\nfunction OnCallbackFormRefresh(result, value) {\r\n  // result = 1 is OK\r\n  // result = 0 is Cancel\r\n  // result = -1 is Uh oh, something is wrong\r\n  if (result === SP.UI.DialogResult.OK) {\r\n    m_fnRefresh();\r\n  }\r\n}\r\n\r\nfunction closePlan(id, { title, newStage, prevStage, cancelReason }) {\r\n  addTask(tasks.closing);\r\n  const valuePair = [\r\n    [\"ProcessStage\", newStage],\r\n    [\"Active\", \"0\"],\r\n    [\"PreviousStage\", prevStage],\r\n    [\"CloseDate\", new Date().toISOString()],\r\n    [\"CancelReason\", cancelReason],\r\n  ];\r\n\r\n  app.listRefs.Plans.updateListItem(id, valuePair, function () {\r\n    //   toggleLockPlan(title, true, function () {\r\n    //     alert(\"Plan has been locked. Please contact QTM to Re-Open.\");\r\n    //     m_fnRefresh();\r\n    //   });\r\n    m_fnRefresh();\r\n    finishTask(tasks.closing);\r\n  });\r\n}\r\n// var incrementer;\r\n\r\n/**\r\n *\r\n * @param {string} title the title of the plan e.g. C20-030\r\n * @param {bool} lock pass true to lock request\r\n */\r\nfunction toggleLockPlan(title, lock, callback) {\r\n  addTask(tasks.lock);\r\n  callback = callback === undefined ? m_fnRefresh : callback;\r\n  // Pass true to lock request\r\n\r\n  // Set permissions on list first\r\n  var listRefs = [\r\n    app.listRefs.Plans,\r\n    app.listRefs.Actions,\r\n    app.listRefs.Rejections,\r\n    app.listRefs.Whys,\r\n  ];\r\n\r\n  var incrementer = new Incremental(0, listRefs.length, () => {\r\n    finishTask(tasks.lock);\r\n    callback();\r\n  });\r\n\r\n  var camlq =\r\n    '<View Scope=\"RecursiveAll\"><Query><Where><And><Eq>' +\r\n    '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">0</Value>' +\r\n    \"</Eq><Eq>\" +\r\n    '<FieldRef Name=\"FileRef\"/><Value Type=\"Text\">' +\r\n    title +\r\n    \"</Value>\" +\r\n    \"</Eq></And></Where></Query><RowLimit>1</RowLimit></View>\";\r\n\r\n  var vp = [\r\n    [\"Submitters\", \"Restricted Read\"],\r\n    [\"QOs\", \"Restricted Read\"],\r\n    [\"QTM\", \"Restricted Contribute\"],\r\n    [\"QTM B\", \"Restricted Contribute\"],\r\n  ];\r\n\r\n  listRefs.forEach(function (list) {\r\n    list.getListItems(camlq, function (items) {\r\n      items.forEach((item) => {\r\n        incrementer.incTarget();\r\n        if (lock) {\r\n          list.setItemPermissions(\r\n            item.ID,\r\n            vp,\r\n            function () {\r\n              console.log(\r\n                \"Updated item perms \" +\r\n                  list.config.def.name +\r\n                  \" \" +\r\n                  incrementer.val()\r\n              );\r\n              incrementer.inc();\r\n            },\r\n            true\r\n          );\r\n        } else {\r\n          list.resetItemPermissions(item.ID, function () {\r\n            console.log(\r\n              \"Updated item perms \" +\r\n                list.config.def.name +\r\n                \" \" +\r\n                incrementer.val()\r\n            );\r\n            incrementer.inc();\r\n          });\r\n        }\r\n      });\r\n      incrementer.inc();\r\n    });\r\n  });\r\n\r\n  var listRefWithFolders = [app.listRefs.SupportDocs];\r\n  // Now break support docs permissions\r\n  var camlqFolder =\r\n    '<View Scope=\"RecursiveAll\"><Query><Where><And><Eq>' +\r\n    '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">1</Value>' +\r\n    \"</Eq><Eq>\" +\r\n    '<FieldRef Name=\"FileLeafRef\"/><Value Type=\"Text\">' +\r\n    title +\r\n    \"</Value>\" +\r\n    \"</Eq></And></Where></Query><RowLimit>1</RowLimit></View>\";\r\n\r\n  listRefWithFolders.forEach(function (list) {\r\n    incrementer.incTarget();\r\n    list.getListItems(camlqFolder, function (items) {\r\n      if (items[0]) {\r\n        incrementer.incTarget();\r\n        var item = items[0];\r\n        if (lock) {\r\n          list.setItemPermissions(\r\n            item.ID,\r\n            vp,\r\n            function () {\r\n              console.log(\r\n                \"Updated item perms \" +\r\n                  list.config.def.name +\r\n                  \" \" +\r\n                  incrementer.val()\r\n              );\r\n              incrementer.inc();\r\n            },\r\n            true\r\n          );\r\n        } else {\r\n          list.resetItemPermissions(item.ID, function () {\r\n            console.log(\r\n              \"Updated item perms \" +\r\n                list.config.def.name +\r\n                \" \" +\r\n                incrementer.val()\r\n            );\r\n            incrementer.inc();\r\n          });\r\n        }\r\n      }\r\n    });\r\n    incrementer.inc();\r\n  });\r\n}\r\n\r\nfunction initComplete() {\r\n  ko.applyBindings(vm);\r\n  document.getElementById(\"spanLoadStatus\").innerText = \"Building Interface\";\r\n\r\n  vm.currentUser(sal.globalConfig.currentUser);\r\n  var tabId = getUrlParam(\"tab\");\r\n  var capid = getUrlParam(\"capid\");\r\n\r\n  $(\"#showme\").hide();\r\n\r\n  $(\"#tabs\").show();\r\n  // $(\"#tabs\").tabs();\r\n\r\n  if (!tabId) {\r\n    let defaultTab = vm.tabOpts.myPlans;\r\n    switch (vm.AdminType()) {\r\n      case ROLES.ADMINTYPE.QO:\r\n        defaultTab = vm.tabOpts.qo;\r\n        break;\r\n      case ROLES.ADMINTYPE.QTM:\r\n        defaultTab = vm.tabOpts.all;\r\n        break;\r\n      case ROLES.ADMINTYPE.QTMB:\r\n        defaultTab = vm.tabOpts.qtmb;\r\n        break;\r\n      default:\r\n    }\r\n\r\n    vm.tabs.selectById(defaultTab);\r\n  }\r\n  if (capid) {\r\n    vm.CAPID(capid);\r\n    vm.selectedTitle(capid);\r\n    //LoadSelectedCAP(capid);\r\n    //$(\"#ddlCAPID\").val(capid);\r\n  }\r\n  // makeDataTable(\"#tblMyOpenRecords\");\r\n  // makeDataTable(\"#tblQOOpenRecords\");\r\n  // makeDataTable(\"#tblQTMBOpenRecords\");\r\n  // makeDataTable(\"#tblAllOpenRecords\");\r\n  // makeDataTable(\"#tblMyAwaitingActionRecords\");\r\n  // makeDataTable(\"#tblAwaitingAction\");\r\n  // makeDataTable(\"#tblLookupRecords\");\r\n\r\n  finishTask(tasks.init);\r\n\r\n  // var idTab =\r\n  // $('#injectAdditionalTabs').\r\n  loadFinish = new Date();\r\n  var loadTimeSeconds = (loadFinish - loadStart) / 1000;\r\n  vm.appLoadTime(loadTimeSeconds + \"s\");\r\n  console.log(\"Application Load Time: \", (loadFinish - loadStart) / 1000);\r\n}\r\n\r\nvar loadStart,\r\n  loadFinish = 0;\r\n\r\nasync function initApp() {\r\n  loadStart = new Date();\r\n  initSal();\r\n  InitSal();\r\n  Common.Init();\r\n  document.getElementById(\"spanLoadStatus\").innerText =\r\n    \"Initiating Application\";\r\n  vm = await App.Create();\r\n  const initTask = addTask(tasks.init);\r\n  initStaticListRefs();\r\n\r\n  LoadMainData(initComplete); // This will call initComplete() when all data is loaded\r\n}\r\n\r\n/***************************** COPY PASTE VM CONTENTS *****************************/\r\n/* \r\n    ViewModels.js\r\n\r\n    Define the viewmodels that we will be using from the CARCAP process.\r\n    This will be included on every page, so let's load it up.\r\n\r\n*/\r\n/*****************************************************************************/\r\n/*                          Bindings                                         */\r\n/*****************************************************************************/\r\n\r\n/*****************************************************************************/\r\n/*                          Models                                           */\r\n/*****************************************************************************/\r\n// ViewModel = window.ViewModel || {}\r\nconst loc = window.location;\r\nvar directSiteUrl = loc.origin;\r\nif (loc.host[0] == \"s\") {\r\n  //in staging\r\n  directSiteUrl += \"/sites/cgfsweb/QMS/\";\r\n} else {\r\n  directSiteUrl += \"/sites/QMS-CI\";\r\n}\r\n\r\n// ADMINTYPE is currently set by the page the user is accessing\r\n// Other roles are on the individual record and are determined\r\n// dynamically using the vm.selectedRecord.userHasRole function\r\nwindow.ROLES = ROLES;\r\n\r\nvar EXTENSIONDAYS = 45;\r\n\r\nvar DOCTYPES = {\r\n  SUPPORT: \"Support\",\r\n  EFFECTIVENESS: \"Effectiveness\",\r\n};\r\n\r\nvar TABS = {\r\n  ALLPLANS: 0,\r\n  QTMBPLANS: 1,\r\n  MYPLANS: 2,\r\n  QOPLANS: 3,\r\n  PLANDETAIL: 4,\r\n  MYAWAITINGACTION: 5,\r\n  LOOKUP: 7,\r\n};\r\n\r\nvar ACTIONSTATE = {\r\n  PENDINGAPPROVAL: \"Pending Plan Approval\",\r\n  INPROGRESS: \"In progress\",\r\n  COMPLETED: \"Completed\",\r\n};\r\n\r\nfunction convertModelToViewfield(model) {\r\n  let vf = \"<ViewFields>\";\r\n  for (let i = 0; i < model.length; i++) {\r\n    vf = vf + \"<FieldRef Name='\" + model[i] + \"'/>\";\r\n  }\r\n\r\n  vf += \"</ViewFields>\";\r\n\r\n  return vf;\r\n}\r\n\r\nvar locations = [\r\n  \"Charleston\",\r\n  \"Bangkok\",\r\n  \"Washington\",\r\n  \"Paris\",\r\n  \"Sofia\",\r\n  \"Manila\",\r\n];\r\n\r\nvar RecordSourcesListDef = {\r\n  name: \"Record_Sources\",\r\n  title: \"Record_Sources\",\r\n  viewFields: {\r\n    ID: { type: \"Text\" },\r\n    Title: { type: \"Text\" },\r\n    RecordType: { type: \"Text\" },\r\n    SelfInitiated: { type: \"Bool\" },\r\n  },\r\n};\r\n\r\nvar CIItemListDef = {\r\n  name: \"CAP_Main\",\r\n  title: \"CAP_Main\",\r\n  viewModelObj: \"selectedRecord\",\r\n  viewFields: {\r\n    ID: { type: \"Text\" },\r\n    Active: { type: \"Bool\" },\r\n    Author: { type: \"Person\" },\r\n    AuthorName: { type: \"Text\" },\r\n    CloseDate: { type: \"Date\" },\r\n    CancelReason: { type: \"Text\" },\r\n    Created: { type: \"Date\" },\r\n    Title: { type: \"Text\" },\r\n    RecordType: { type: \"Text\" },\r\n    BusinessOffice: { type: \"Text\" },\r\n    CGFSLocation: { type: \"Text\" },\r\n    QSO: { type: \"Person\" },\r\n    QSOName: { type: \"Text\" },\r\n    QAO: { type: \"Person\" },\r\n    QAOName: { type: \"Text\" },\r\n    OFIDescription: { type: \"Text\" },\r\n    DiscoveryDataAnalysis: { type: \"Text\" },\r\n    SubmittedDate: { type: \"Date\" },\r\n    SubmittedBy: { type: \"Text\" },\r\n    ProblemResolverName: { type: \"Person\" },\r\n    CoordinatorName: { type: \"Text\" },\r\n    Subject: { type: \"Text\" },\r\n    QSOAdjudicationDate: { type: \"Date\" },\r\n    QSOApprovalStatus: { type: \"Text\" },\r\n    QMSBAdjudicationDate: { type: \"Date\" },\r\n    QMSBApprovalStatus: { type: \"Text\" },\r\n    QTMAdjudicationDate: { type: \"Date\" },\r\n    QTMApprovalStatus: { type: \"Text\" },\r\n    RecordStatus: { type: \"Text\" },\r\n    EffectivenessRejectReason: { type: \"Text\" },\r\n    ExtensionCount: { type: \"Number\" },\r\n    ExtensionRequested: { type: \"Bool\" },\r\n    OfficeImpactBool: { type: \"Text\" },\r\n    OfficeImpactDesc: { type: \"Text\" },\r\n    QSOEffectivenessAdjudication: { type: \"Text\" },\r\n    QMSBEffectivenessAdjudication: { type: \"Text\" },\r\n    QTMEffectivenessAdjudication: { type: \"Text\" },\r\n    QSOEffectivenessAdjudicationDate: { type: \"Date\" },\r\n    QMSBEffectivenessAdjudicationDat: { type: \"Date\" },\r\n    QTMEffectivenessAdjudicationDate: { type: \"Date\" },\r\n    SubmittedEffectivenessDate: { type: \"Date\" },\r\n    SubmittedImplementDate: { type: \"Date\" },\r\n    EffectivenessVerificationTargetD: { type: \"Date\" },\r\n    QSOImplementAdjudication: { type: \"Text\" },\r\n    QSOImplementAdjudicationDate: { type: \"Date\" },\r\n    ImplementationTargetDate: { type: \"Date\" },\r\n    EffectivenessDescription: { type: \"Text\" },\r\n    ProblemDescription: { type: \"Text\" },\r\n    SelfInitiated: { type: \"Bool\" },\r\n    ContainmentAction: { type: \"Text\" },\r\n    ContainmentActionDate: { type: \"Date\" },\r\n    RootCauseDetermination: { type: \"Text\" },\r\n    QSOProblemAdjudication: { type: \"Text\" },\r\n    QSOProblemAdjudicationDate: { type: \"Date\" },\r\n    QAOProblemAdjudication: { type: \"Text\" },\r\n    QAOProblemAdjudicationDate: { type: \"Date\" },\r\n    QMSBProblemAdjudication: { type: \"Text\" },\r\n    QMSBProblemAdjudicationDate: { type: \"Date\" },\r\n    QTMProblemAdjudication: { type: \"Text\" },\r\n    QTMProblemAdjudicationDate: { type: \"Date\" },\r\n    Source: { type: \"Text\" },\r\n    SimilarNoncomformityBool: { type: \"Bool\" },\r\n    SimilarNoncomformityDesc: { type: \"Text\" },\r\n    ProcessStage: { type: \"Text\" },\r\n    PreviousStage: { type: \"Text\" },\r\n    NextTargetDate: { type: \"Date\" },\r\n  },\r\n};\r\n\r\nvar CAPModel = [\r\n  \"Active\",\r\n  \"Title\",\r\n  \"RecordType\",\r\n  \"BusinessOffice\",\r\n  \"CGFSLocation\",\r\n  \"QSO\",\r\n  \"QSOName\",\r\n  \"QAO\",\r\n  \"QAOName\",\r\n  \"OFIDescription\",\r\n  \"DiscoveryDataAnalysis\",\r\n  \"SubmittedDate\",\r\n  \"SubmittedBy\",\r\n  \"ProblemResolverName\",\r\n  \"CoordinatorName\",\r\n  \"Subject\",\r\n  \"QSOAdjudicationDate\",\r\n  \"QSOApprovalStatus\",\r\n  \"QMSBAdjudicationDate\",\r\n  \"QMSBApprovalStatus\",\r\n  \"QTMAdjudicationDate\",\r\n  \"QTMApprovalStatus\",\r\n  \"CAP_Source\",\r\n  \"RecordStatus\",\r\n  \"EffectivenessRejectReason\",\r\n  \"OfficeImpactBool\",\r\n  \"OfficeImpactDesc\",\r\n  \"QSOEffectivenessAdjudication\",\r\n  \"QMSBEffectivenessAdjudication\",\r\n  \"QTMEffectivenessAdjudication\",\r\n  \"QSOEffectivenessAdjudicationDate\",\r\n  \"QMSBEffectivenessAdjudicationDat\",\r\n  \"QTMEffectivenessAdjudicationDate\",\r\n  \"SubmittedEffectivenessDate\",\r\n  \"SubmittedImplementDate\",\r\n  \"EffectivenessVerificationTargetD\",\r\n  \"QSOImplementAdjudication\",\r\n  \"QSOImplementAdjudicationDate\",\r\n  \"ImplementationTargetDate\",\r\n  \"EffectivenessDescription\",\r\n  \"ProblemDescription\",\r\n  \"SelfInitiated\",\r\n  \"ContainmentAction\",\r\n  \"ContainmentActionDate\",\r\n  \"RootCauseDetermination\",\r\n  \"QSOProblemAdjudication\",\r\n  \"QSOProblemAdjudicationDate\",\r\n  \"QAOProblemAdjudication\",\r\n  \"QAOProblemAdjudicationDate\",\r\n  \"QMSBProblemAdjudication\",\r\n  \"QMSBProblemAdjudicationDate\",\r\n  \"QTMProblemAdjudication\",\r\n  \"QTMBProblemAdjudicationDate\",\r\n  \"Source\",\r\n  \"SimilarNoncomformityBool\",\r\n  \"SimilarNoncomformityDesc\",\r\n  \"ProcessStage\",\r\n  \"PreviousStage\",\r\n  \"NextTargetDate\",\r\n  \"PlanSubmissionTargetDate\",\r\n  \"Author\",\r\n  \"AuthorName\",\r\n];\r\n\r\nvar ActionListDef = {\r\n  name: \"CAP_Actions\",\r\n  title: \"CAP_Actions\",\r\n  viewFields: {\r\n    ID: { type: \"Text\" },\r\n    Title: { type: \"Text\" },\r\n    ActionDescription: { type: \"Text\" },\r\n    ActionID: { type: \"Text\" },\r\n    TargetDate: { type: \"Date\" },\r\n    ActionResponsiblePerson: { type: \"Person\" },\r\n    ImplementationDate: { type: \"Date\" },\r\n    ImplementationDescription: { type: \"Text\" },\r\n    ImplementationStatus: { type: \"Text\" },\r\n    ImplementationRemark: { type: \"Text\" },\r\n    PreviousTargetDate: { type: \"Date\" },\r\n    RevisionCount: { type: \"Text\" },\r\n    ExtensionCount: { type: \"Text\" },\r\n    PreviousActionDescription: { type: \"Text\" },\r\n    PreviousActionResponsiblePerson: { type: \"Person\" },\r\n  },\r\n};\r\n\r\nvar ActionModel = [\r\n  \"Title\",\r\n  \"ActionDescription\",\r\n  \"ActionID\",\r\n  \"TargetDate\",\r\n  \"ActionResponsiblePerson\",\r\n  \"ImplementationDate\",\r\n  \"ImplementationDescription\",\r\n  \"ImplementationStatus\",\r\n  \"ImplementationRemark\",\r\n  \"RequiresApproval\",\r\n  \"PreviousTargetDate\",\r\n  \"RevisionCount\",\r\n  \"ExtensionCount\",\r\n  \"PreviousActionDescription\",\r\n  \"PreviousActionResponsiblePerson\",\r\n];\r\n\r\nvar WhyListDef = {\r\n  name: \"Root_Cause_Why\",\r\n  title: \"Root_Cause_Why\",\r\n  viewFields: {\r\n    ID: { type: \"Text\" },\r\n    Title: { type: \"Text\" },\r\n    Number: { type: \"Text\" },\r\n    Question: { type: \"Text\" },\r\n    Answer: { type: \"Text\" },\r\n  },\r\n};\r\n\r\nvar WhyModel = [\"Title\", \"Number\", \"Question\", \"Answer\"];\r\n\r\nvar RejectionListDef = {\r\n  name: \"Rejections\",\r\n  title: \"Rejections\",\r\n  viewFields: {\r\n    ID: { type: \"Text\" },\r\n    Title: { type: \"Text\" },\r\n    Reason: { type: \"Text\" },\r\n    Stage: { type: \"Text\" },\r\n    Date: { type: \"Date\" },\r\n    Rejector: { type: \"Person\" },\r\n    Active: { type: \"Bool\" },\r\n    RejectionId: { type: \"Text\" },\r\n  },\r\n};\r\nvar RejectionModel = [\r\n  \"Title\",\r\n  \"Reason\",\r\n  \"Stage\",\r\n  \"Date\",\r\n  \"Rejector\",\r\n  \"Active\",\r\n  \"RejectionId\",\r\n];\r\n\r\nvar OfficeModel = [\r\n  \"Charleston\",\r\n  \"Washington\",\r\n  \"Bangkok\",\r\n  \"Manila\",\r\n  \"Paris\",\r\n  \"Sofia\",\r\n];\r\n\r\nvar BusinessOfficeListDef = {\r\n  name: \"Business_Office\",\r\n  title: \"Business_Office\",\r\n  viewFields: {\r\n    ID: { type: \"Text\" },\r\n    Title: { type: \"Text\" },\r\n    ol_Department: { type: \"Text\" },\r\n    QAO: { type: \"Person\" },\r\n    QSO_Charleston: { type: \"Person\" },\r\n    QSO_Bangkok: { type: \"Person\" },\r\n    QSO_Washington: { type: \"Person\" },\r\n    QSO_Paris: { type: \"Person\" },\r\n    QSO_Sofia: { type: \"Person\" },\r\n    QSO_Manila: { type: \"Person\" },\r\n  },\r\n};\r\n\r\nvar BusinessOfficeModel = [\r\n  \"Title\",\r\n  \"ol_Department\",\r\n  \"QAO\",\r\n  \"QSO_Charleston\",\r\n  \"QSO_Bangkok\",\r\n  \"QSO_Washington\",\r\n  \"QSO_Paris\",\r\n  \"QSO_Sofia\",\r\n  \"QSO_Manila\",\r\n];\r\n\r\nvar TempQOListDef = {\r\n  name: \"Temp_QOs\",\r\n  title: \"Temp_QOs\",\r\n  viewFields: {\r\n    ID: { type: \"Text\" },\r\n    Person: { type: \"Person\" },\r\n    Office: { type: \"Lookup\" },\r\n    Location: { type: \"Text\" },\r\n    Role: { type: \"Text\" },\r\n    Note: { type: \"Text\" },\r\n  },\r\n};\r\n\r\n//var SupportDocumentModel = ['NewColumn1', 'LinkFileName', 'Title'];\r\n\r\n//var EffectivenessDocumentModel = ['Title', 'LinkFileName', 'Record'];\r\n\r\nvar DocumentListDef = {\r\n  name: \"SupportDocumentLibrary\",\r\n  title: \"SupportDocumentLibrary\",\r\n  viewFields: {\r\n    ID: { type: \"Text\" },\r\n    Title: { type: \"Text\" },\r\n    FileLeafRef: { type: \"Text\" },\r\n    Record: { type: \"Text\" },\r\n    FileRef: { type: \"Text\" },\r\n    DocType: { type: \"Text\" },\r\n    Author: { type: \"Person\" },\r\n  },\r\n};\r\n\r\nvar DocumentModel = [\"Title\", \"LinkFileName\", \"Record\", \"DocType\"];\r\n\r\nvar recordViewFields = convertModelToViewfield(CAPModel);\r\n\r\nvar actionViewFields = convertModelToViewfield(ActionModel);\r\n\r\nvar documentViewFields = convertModelToViewfield(DocumentModel);\r\n\r\nvar whyViewFields = convertModelToViewfield(WhyModel);\r\n\r\nvar rejectionViewFields = convertModelToViewfield(RejectionModel);\r\n\r\nvar businessOfficeViewFields = convertModelToViewfield(BusinessOfficeModel);\r\n\r\n// Filter for CAPViewModel actions\r\nfunction checkComplete(action) {\r\n  return action.ImplementationStatus != \"Completed\";\r\n}\r\n\r\nfunction clearVM() {\r\n  vm.ProblemResolverName(\"\");\r\n  vm.EffectivenessVerificationTargetDate();\r\n  vm.SupportDocuments([]);\r\n  vm.EffectivenessDocuments([]);\r\n}\r\n\r\n// CAP Model View\r\nexport function CAPViewModel(capIdstring) {\r\n  console.log(\"evaluating viewmodel\");\r\n  var self = this;\r\n\r\n  // self.currentUser = ko.observable(\r\n  //   $().SPServices.SPGetCurrentUser({\r\n  //     fieldName: \"Title\",\r\n  //     debug: false,\r\n  //   })\r\n  // );\r\n  var APPPROCESSTIMEOUT = 10 * 1000; // 10 seconds\r\n  var APPPROCESSDISMISSTIMEOUT = 1000;\r\n  self.app = {\r\n    currentDialogs: ModalDialog.currentDialogs,\r\n  };\r\n\r\n  self.bindingCompleteHandlers = {\r\n    tableBound: function (nodes) {\r\n      var tableId = nodes.id;\r\n      makeDataTable(tableId);\r\n    },\r\n  };\r\n  self.stageDescriptionsArray = ko.pureComputed(function () {\r\n    return Object.keys(stageDescriptions).map(function (key) {\r\n      return stageDescriptions[key];\r\n    });\r\n  });\r\n\r\n  self.impersonateUserField = new PeopleField({\r\n    displayName: \"Impersonate User\",\r\n  });\r\n\r\n  self.impersonateUserField.Value.subscribe(function (people) {\r\n    if (people.length) {\r\n      self.currentUser(people[0]);\r\n      self.currentUserObj.id(people[0].get_id());\r\n    } else {\r\n      self.currentUser(sal.globalConfig.currentUser);\r\n      self.currentUserObj.id(sal.globalConfig.currentUser);\r\n    }\r\n  });\r\n\r\n  self.currentUser = ko.observable();\r\n\r\n  self.currentUserObj = {\r\n    id: ko.observable(_spPageContextInfo.userId),\r\n    businessOfficeOwnership: ko.pureComputed(function () {\r\n      var userId = self.currentUserObj.id();\r\n      var myOffices = [];\r\n      self.allBusinessOffices().map(function (office) {\r\n        if (office.QAO.get_lookupId() == userId) {\r\n          var qaoObj = {};\r\n          qaoObj.id = office.ID;\r\n          qaoObj.location = \"All\";\r\n          qaoObj.office = office.Title;\r\n          qaoObj.department = office.Department;\r\n          qaoObj.type = \"qao\";\r\n          myOffices.push(qaoObj);\r\n        }\r\n        for (let j = 0; j < locations.length; j++) {\r\n          var qsoLoc = office[\"QSO_\" + locations[j]];\r\n          if (qsoLoc && qsoLoc.get_lookupId() == userId) {\r\n            var adminObj = {};\r\n            adminObj.id = office.ID;\r\n            adminObj.location = locations[j];\r\n            adminObj.office = office.Title;\r\n            adminObj.department = office.Department;\r\n            adminObj.type = \"qso\";\r\n            myOffices.push(adminObj);\r\n          }\r\n        }\r\n      });\r\n      self.allTempQOs().map(function (office) {\r\n        if (office.Person.get_lookupId() == userId) {\r\n          var adminObj = {\r\n            id: office.Office.get_lookupId(),\r\n            office: office.Office.get_lookupValue(),\r\n            location: office.Location,\r\n            type: office.Role,\r\n          };\r\n          myOffices.push(adminObj);\r\n        }\r\n      });\r\n      return myOffices;\r\n    }),\r\n  };\r\n\r\n  // Default adminType to that provided on page.\r\n  const adminType = getUrlParam(\"role\");\r\n\r\n  self.AdminType = currentRole;\r\n\r\n  self.userRoleOpts = userRoleOpts;\r\n\r\n  self.AdminType(adminType || \"\");\r\n\r\n  self.AdminType.subscribe((val) => {\r\n    setUrlParam(\"role\", val);\r\n  });\r\n\r\n  self.runningTasks = runningTasks;\r\n  self.blockingTasks = blockingTasks;\r\n\r\n  self.tabOpts = {\r\n    qtm: new Tab({\r\n      urlKey: \"qtm\",\r\n      linkText: \"All Open CARs/CAPs\",\r\n      template: {\r\n        id: \"tabs-qtm\",\r\n        data: self,\r\n      },\r\n      visible: ko.pureComputed(() => {\r\n        return self.AdminType() == ROLES.ADMINTYPE.QTM;\r\n      }),\r\n    }),\r\n    qtmb: new Tab({\r\n      urlKey: \"qtmb\",\r\n      linkText: \"Bangkok Open CARs/CAPs\",\r\n      template: {\r\n        id: \"tabs-qtmb\",\r\n        data: self,\r\n      },\r\n      visible: ko.pureComputed(() => {\r\n        return self.AdminType() == ROLES.ADMINTYPE.QTMB;\r\n      }),\r\n    }),\r\n    myPlans: new Tab({\r\n      urlKey: \"my-plans\",\r\n      linkText: \"My CARs/CAPs\",\r\n      template: {\r\n        id: \"tabs-my-plans\",\r\n        data: self,\r\n      },\r\n      visible: ko.pureComputed(() => {\r\n        return self.AdminType() == ROLES.ADMINTYPE.USER;\r\n      }),\r\n    }),\r\n    qo: new Tab({\r\n      urlKey: \"qo\",\r\n      linkText: \"QO CARs/CAPs\",\r\n      template: {\r\n        id: \"tabs-qo\",\r\n        data: self,\r\n      },\r\n      visible: ko.pureComputed(() => {\r\n        return self.AdminType() == ROLES.ADMINTYPE.QO;\r\n      }),\r\n    }),\r\n    detail: new Tab({\r\n      urlKey: \"detail\",\r\n      linkText: \"CAR/CAP Details\",\r\n      template: {\r\n        id: \"tabs-detail\",\r\n        data: self,\r\n      },\r\n    }),\r\n    awaitingAction: new Tab({\r\n      urlKey: \"awaiting\",\r\n      linkText: \"Awaiting Action\",\r\n      template: {\r\n        id: \"tabs-awaiting\",\r\n        data: self,\r\n      },\r\n      visible: ko.pureComputed(() => {\r\n        return self.AdminType() == ROLES.ADMINTYPE.USER;\r\n      }),\r\n    }),\r\n    lookup: new Tab({\r\n      urlKey: \"lookup\",\r\n      linkText: \"Lookup\",\r\n      template: {\r\n        id: \"tabs-lookup\",\r\n        data: self,\r\n      },\r\n    }),\r\n  };\r\n  self.tabs = new TabsModule(Object.values(self.tabOpts));\r\n\r\n  // self.tab = ko.observable();\r\n\r\n  // self.tab.subscribe(function (newTab) {\r\n  //   // $(\"#tabs\").tabs(\"option\", \"active\", newTab);\r\n  //   Common.Utilities.updateUrlParam(\"tab\", newTab.toString());\r\n  // });\r\n\r\n  self.navigateToRecord = async function (record) {\r\n    vm.CAPID(record.Title);\r\n    //Common.Utilities.updateUrlParam(\"capid\", record.Title);\r\n    //LoadSelectedCAP(record.Title);\r\n    vm.selectedTitle(record.Title);\r\n\r\n    vm.tabs.selectTab(self.tabOpts.detail);\r\n  };\r\n\r\n  self.selectedTitleObs = ko.observable();\r\n  self.selectedTitle = ko.pureComputed({\r\n    write: function (newSelection) {\r\n      if (!newSelection) return;\r\n      if (self.currentlyEditingSection() > 0) {\r\n        if (confirm(\"Do you want to discard changes?\")) {\r\n          self.discardEdits();\r\n        } else {\r\n          self.selectedTitle.notifySubscribers();\r\n          return;\r\n        }\r\n      }\r\n      Common.Utilities.updateUrlParam(\"capid\", newSelection);\r\n\r\n      if (newSelection == self.selectedRecord.Title()) {\r\n        return;\r\n      }\r\n      self.selectedTitleObs(newSelection);\r\n      LoadSelectedCAP(newSelection);\r\n    },\r\n    read: function () {\r\n      return self.selectedTitleObs();\r\n    },\r\n  });\r\n\r\n  // self.selectedTitle.subscribe(function (newSelection) {\r\n  //   if (!newSelection) return;\r\n  //   if (self.currentlyEditingSection() > 0) {\r\n  //     if (confirm(\"Do you want to discard changes?\")) {\r\n  //       self.discardEdits();\r\n  //     } else {\r\n  //       return;\r\n  //     }\r\n  //   }\r\n  //   Common.Utilities.updateUrlParam(\"capid\", newSelection);\r\n\r\n  //   if (newSelection == self.selectedRecord.Title()) {\r\n  //     return;\r\n  //   }\r\n  //   LoadSelectedCAP(newSelection);\r\n  // });\r\n\r\n  // Declare our record object arrays for different views (My CARs/CAPs, Awaiting Action, etc)\r\n  self.allBusinessOffices = ko.observableArray([]);\r\n  self.allTempQOs = ko.observableArray([]);\r\n\r\n  self.allRecordsArray = ko.observableArray([]);\r\n  self.allActionsArray = ko.observableArray([]);\r\n\r\n  self.allOpenRecordsArray = ko.pureComputed(function () {\r\n    return self.allRecordsArray().filter(function (record) {\r\n      return record.Active;\r\n    });\r\n  });\r\n\r\n  self.allOpenActionsArray = ko.pureComputed(function () {\r\n    return self.allActionsArray().filter(function (action) {\r\n      return action.ImplementationStatus != \"Completed\";\r\n    });\r\n  });\r\n\r\n  self.actionsMapping = ko.pureComputed(function () {\r\n    var start = new Date();\r\n    var plans = {};\r\n    self.allRecordsArray().map(function (plan) {\r\n      plans[plan.Title] = self.allActionsArray().filter(function (action) {\r\n        return action.Title == plan.Title;\r\n      });\r\n    });\r\n    var end = new Date();\r\n    console.log(\"Actions Mapped in: \", (end - start) / 1000);\r\n    return plans;\r\n  });\r\n\r\n  self.myOpenRecordsArray = ko.pureComputed(function () {\r\n    var userId = self.currentUserObj.id();\r\n    return self.allOpenRecordsArray().filter(function (record) {\r\n      if (\r\n        record.ProblemResolverName &&\r\n        record.ProblemResolverName.get_lookupId() == userId\r\n      ) {\r\n        return true;\r\n      }\r\n\r\n      if (record.Author.get_lookupId() == userId) {\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n  });\r\n\r\n  self.myOpenActionsArray = ko.pureComputed(function () {\r\n    var userId = self.currentUserObj.id();\r\n    return self.allOpenActionsArray().filter(function (action) {\r\n      return action.ActionResponsiblePerson.get_lookupId() == userId;\r\n    });\r\n  });\r\n\r\n  self.myAwaitingActionRecords = ko.pureComputed(function () {\r\n    var myStages = [\r\n      \"Implementing Action Plan\",\r\n      \"Developing Action Plan\",\r\n      \"Pending Effectiveness Submission\",\r\n    ];\r\n    return self.myOpenRecordsArray().filter(function (record) {\r\n      return myStages.includes(record.ProcessStage);\r\n    });\r\n  });\r\n\r\n  self.myAwaitingActionActions = ko.pureComputed(function () {\r\n    return self.myOpenActionsArray().filter(function (action) {\r\n      return action.ImplementationStatus == \"In progress\";\r\n    });\r\n  });\r\n\r\n  self.qoOpenRecords = ko.pureComputed(function () {\r\n    // There are three types of records\r\n    // 1. Records that we have been assigned as QSO or QAO directly\r\n    // 2. Records that are in our QAO BusinessOffices\r\n    // 3. Records that are in our QSO BusinessOffice and Location\r\n    var userId = self.currentUserObj.id();\r\n    var officeIds = self.currentUserObj\r\n      .businessOfficeOwnership()\r\n      .map(function (office) {\r\n        return office.id;\r\n      });\r\n    var assignedRecords = self.allOpenRecordsArray().filter(function (record) {\r\n      //1. Records that have been assigned directly\r\n      if (record.QSO && record.QSO.get_lookupId() == userId) {\r\n        return true;\r\n      }\r\n      if (record.QAO && record.QAO.get_lookupId() == userId) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    var officeRecords = [];\r\n    self.currentUserObj.businessOfficeOwnership().map(function (office) {\r\n      if (office.type == ROLES.QSO) {\r\n        // 3. match both the BusinessOffice and Location\r\n        officeRecords = officeRecords.concat(\r\n          self.allOpenRecordsArray().filter(function (record) {\r\n            return (\r\n              record.BusinessOffice.get_lookupId() == office.id &&\r\n              (office.location == \"All\" ||\r\n                record.CGFSLocation == office.location)\r\n            );\r\n          })\r\n        );\r\n      }\r\n      if (office.type == ROLES.QAO) {\r\n        // 2. Match just the business office\r\n        officeRecords = officeRecords.concat(\r\n          self.allOpenRecordsArray().filter(function (record) {\r\n            return record.BusinessOffice.get_lookupId() == office.id;\r\n          })\r\n        );\r\n      }\r\n    });\r\n\r\n    assignedRecords = assignedRecords.concat(officeRecords);\r\n\r\n    // now filter duplicates\r\n    return assignedRecords.filter(function (record, index, self) {\r\n      return (\r\n        index ===\r\n        self.findIndex(function (subrecord) {\r\n          return subrecord.Title === record.Title;\r\n        })\r\n      );\r\n    });\r\n  });\r\n\r\n  self.qoOpenActions = ko.pureComputed(function () {\r\n    var qoActions = [];\r\n    self.qoOpenRecords().forEach(function (record) {\r\n      qoActions = qoActions.concat(self.actionsMapping()[record.Title]);\r\n    });\r\n\r\n    return qoActions.filter(function (action) {\r\n      return action.ImplementationStatus != \"Completed\";\r\n    });\r\n  });\r\n\r\n  self.qoAwaitingActionRecords = ko.pureComputed(function () {\r\n    var qoStages = [\r\n      \"Pending QSO Problem Approval\",\r\n      \"Pending QAO Problem Approval\",\r\n      \"Pending QSO Plan Approval\",\r\n      \"Pending QSO Plan Approval: Action\",\r\n      \"Pending QSO Implementation Approval\",\r\n      \"Pending QSO Effectiveness Approval\",\r\n    ];\r\n    return self.qoOpenRecords().filter(function (record) {\r\n      if (qoStages.includes(record.ProcessStage)) {\r\n        return true;\r\n      }\r\n    });\r\n  });\r\n\r\n  self.filterRequiresQOAction = function (record) {\r\n    var qoStages = [\r\n      \"Pending QSO Problem Approval\",\r\n      \"Pending QAO Problem Approval\",\r\n      \"Pending QSO Plan Approval\",\r\n      \"Pending QSO Plan Approval: Action\",\r\n      \"Pending QSO Implementation Approval\",\r\n      \"Pending QSO Effectiveness Approval\",\r\n    ];\r\n    if (qoStages.includes(record.ProcessStage)) {\r\n      return true;\r\n    }\r\n  };\r\n\r\n  self.filterAwaitingActionByCurRoleStages = ko.pureComputed(function () {\r\n    var stages = [];\r\n    switch (vm.AdminType()) {\r\n      case ROLES.ADMINTYPE.USER:\r\n        stages = [\r\n          \"Implementing Action Plan\",\r\n          \"Developing Action Plan\",\r\n          \"Pending Effectiveness Submission\",\r\n        ];\r\n        break;\r\n      case ROLES.ADMINTYPE.QO:\r\n        stages = [\r\n          \"Pending QSO Problem Approval\",\r\n          \"Pending QAO Problem Approval\",\r\n          \"Pending QSO Plan Approval\",\r\n          \"Pending QSO Plan Approval: Action\",\r\n          \"Pending QSO Implementation Approval\",\r\n          \"Pending QSO Effectiveness Approval\",\r\n        ];\r\n        break;\r\n      case ROLES.ADMINTYPE.QTM:\r\n        stages = [\r\n          \"Pending QTM Problem Approval\",\r\n          \"Pending QTM Plan Approval\",\r\n          \"Pending QTM Effectiveness Approval\",\r\n        ];\r\n        break;\r\n      case ROLES.ADMINTYPE.QTMB:\r\n        stages = [\r\n          \"Pending QTM-B Problem Approval\",\r\n          \"Pending QTM-B Plan Approval\",\r\n          \"Pending QTM-B Effectiveness Approval\",\r\n        ];\r\n        break;\r\n      default:\r\n    }\r\n    return stages;\r\n  });\r\n\r\n  self.qoAwaitingActionActions = ko.pureComputed(function () {\r\n    var qoStages = [\"Requires Approval QSO\", \"Requires Approval QAO\"];\r\n\r\n    return self.qoOpenActions().filter(function (action) {\r\n      return qoStages.includes(action.ImplementationStatus);\r\n    });\r\n  });\r\n\r\n  self.qtmbOpenRecordsArray = ko.pureComputed(function () {\r\n    return self.allOpenRecordsArray().filter(function (record) {\r\n      return record.CGFSLocation == \"Bangkok\";\r\n    });\r\n  });\r\n\r\n  self.qtmbAwaitingActionRecords = ko.pureComputed(function () {\r\n    var qtmbStages = [\r\n      \"Pending QTM-B Problem Approval\",\r\n      \"Pending QTM-B Plan Approval\",\r\n      \"Pending QTM-B Effectiveness Approval\",\r\n    ];\r\n    return self.qtmbOpenRecordsArray().filter(function (record) {\r\n      return qtmbStages.includes(record.ProcessStage);\r\n    });\r\n  });\r\n\r\n  self.filterRequiresQTMBAction = function (record) {\r\n    var qtmStages = [\r\n      \"Pending QTM-B Problem Approval\",\r\n      \"Pending QTM-B Plan Approval\",\r\n      \"Pending QTM-B Effectiveness Approval\",\r\n    ];\r\n    return qtmStages.includes(record.ProcessStage);\r\n  };\r\n\r\n  self.qtmAwaitingActionRecords = ko.pureComputed(function (record) {\r\n    var qtmStages = [\r\n      \"Pending QTM Problem Approval\",\r\n      \"Pending QTM Plan Approval\",\r\n      \"Pending QTM Effectiveness Approval\",\r\n    ];\r\n    return self.allOpenRecordsArray().filter(function (record) {\r\n      return qtmStages.includes(record.ProcessStage);\r\n    });\r\n  });\r\n\r\n  self.filterRequiresQTMAction = function (record) {\r\n    var qtmStages = [\r\n      \"Pending QTM Problem Approval\",\r\n      \"Pending QTM Plan Approval\",\r\n      \"Pending QTM Effectiveness Approval\",\r\n    ];\r\n    return qtmStages.includes(record.ProcessStage);\r\n  };\r\n\r\n  self.coordinatorAwaitingActionRecords = ko.pureComputed(function (record) {\r\n    var userId = self.currentUserObj.id();\r\n    var coordinatorStages = [\r\n      \"Implementing Action Plan\",\r\n      \"Developing Action Plan\",\r\n      \"Pending Effectiveness Submission\",\r\n    ];\r\n    return self.allOpenRecordsArray().filter(function (record) {\r\n      return (\r\n        record.ProblemResolverName.get_lookupId() == userId &&\r\n        coordinatorStages.includes(record.ProcessStage)\r\n      );\r\n    });\r\n  });\r\n\r\n  // All the available record titles\r\n  self.CAPIDOptions = ko.pureComputed(function () {\r\n    var records = [];\r\n    switch (vm.AdminType()) {\r\n      case ROLES.ADMINTYPE.USER:\r\n        records = self.myOpenRecordsArray();\r\n        break;\r\n      case ROLES.ADMINTYPE.QO:\r\n        records = self.qoOpenRecords();\r\n        break;\r\n      case ROLES.ADMINTYPE.QTM:\r\n        records = self.allOpenRecordsArray();\r\n        break;\r\n      case ROLES.ADMINTYPE.QTMB:\r\n        records = self.qtmbOpenRecordsArray();\r\n        break;\r\n    }\r\n    return records\r\n      .map(function (record) {\r\n        return record.Title;\r\n      })\r\n      .sort()\r\n      .reverse();\r\n  });\r\n\r\n  //self.MyOpenRecordsArray = ko.observableArray();\r\n  self.MyAwaitingActionRecordsArray = ko.pureComputed(function () {\r\n    // Based on the current role, return the appropriate action set\r\n    switch (vm.AdminType()) {\r\n      case ROLES.ADMINTYPE.QO:\r\n        return self.qoOpenRecords();\r\n      case ROLES.ADMINTYPE.QTM:\r\n        return self.allOpenRecordsArray();\r\n    }\r\n  });\r\n  self.LookupRecordsArray = ko.observableArray();\r\n\r\n  //self.CAPArray = ko.observableArray();\r\n  //self.ApprovalArray = ko.observableArray();\r\n  self.ApprovalArray = ko.observableArray();\r\n\r\n  self.ActionListItems = ko.pureComputed(function () {\r\n    return self.actionsMapping()[self.selectedRecord.Title()] || [];\r\n  });\r\n\r\n  // Be sure to deprecate\r\n  self.ActionsRequiringAction = ko.observableArray();\r\n  self.LookupArray = ko.observableArray();\r\n  // Deprecate\r\n\r\n  self.selectedDocuments = ko.observableArray();\r\n  self.SupportDocuments = ko.pureComputed(function () {\r\n    return self.selectedDocuments().filter(function (doc) {\r\n      return doc.DocType == \"Support\";\r\n    });\r\n  });\r\n  self.EffectivenessDocuments = ko.pureComputed(function () {\r\n    return self.selectedDocuments().filter(function (doc) {\r\n      return doc.DocType == \"Effectiveness\";\r\n    });\r\n  });\r\n\r\n  self.RecordType = ko.observable();\r\n  self.RecordStatus = ko.observable();\r\n\r\n  // This function handles arrays and objects\r\n  function eachRecursive(obj, executor) {\r\n    for (var k in obj) {\r\n      if (typeof obj[k] == \"object\" && obj[k] !== null) {\r\n        eachRecursive(obj[k], executor);\r\n      } else {\r\n        executor(k, obj[k]);\r\n      }\r\n    }\r\n  }\r\n\r\n  function setIsEditingFalse(key, value) {\r\n    if (key == \"isEditing\") {\r\n      if (value()) {\r\n        value(false);\r\n      }\r\n    }\r\n  }\r\n  self.discardEdits = function () {\r\n    eachRecursive(self.section, setIsEditingFalse);\r\n  };\r\n\r\n  self.currentlyEditingSection = function () {\r\n    var cnt = 0;\r\n    eachRecursive(self.section, function (key, value) {\r\n      if (key == \"isEditing\") {\r\n        if (value()) {\r\n          cnt++;\r\n        }\r\n      }\r\n    });\r\n    return cnt;\r\n  };\r\n\r\n  self.section = {\r\n    Info: {\r\n      coordinator: {\r\n        isEditing: ko.observable(false),\r\n        isEditable: ko.pureComputed(function () {\r\n          if (!self.selectedRecord.Active()) {\r\n            return false;\r\n          }\r\n          if (self.selectedRecord.curUserHasRole(ROLES.QSO)) {\r\n            return true;\r\n          }\r\n          return false;\r\n        }),\r\n        tempCoordinator: new PeopleField({\r\n          displayName: \"CAR/CAP Coordinator\",\r\n        }),\r\n        edit: function () {\r\n          if (self.selectedRecord.ProblemResolverName.ensuredPeople().length) {\r\n            self.section.Info.coordinator.tempCoordinator.set(\r\n              self.selectedRecord.ProblemResolverName.ensuredPeople()[0]\r\n            );\r\n          }\r\n          self.section.Info.coordinator.isEditing(true);\r\n        },\r\n        save: function () {\r\n          self.selectedRecord.ProblemResolverName.removeAllPeople();\r\n          const coord = self.section.Info.coordinator.tempCoordinator.Value();\r\n          const coordString = `${coord.ID};#${coord.LoginName};#`;\r\n          var valuePair = [\r\n            [\"ProblemResolverName\", coordString],\r\n            [\"CoordinatorName\", coord.Title],\r\n          ];\r\n          self.section.Info.coordinator.isEditing(false);\r\n          app.listRefs.Plans.updateListItem(\r\n            self.selectedRecord.ID(),\r\n            valuePair,\r\n            m_fnRefresh\r\n          );\r\n        },\r\n        cancel: function () {\r\n          self.section.Info.coordinator.isEditing(false);\r\n        },\r\n      },\r\n    },\r\n    OpportunityForImprovement: {\r\n      isEditing: ko.observable(false),\r\n      isEditable: ko.pureComputed(function () {\r\n        if (self.section.OpportunityForImprovement.isEditing()) {\r\n          return false;\r\n        }\r\n        // Implementors can only update their own problems.\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n        if (\r\n          [\"DevelopingActionPlan\", \"PlanApprovalQSO\"].indexOf(\r\n            self.selectedRecord.ProcessStageKey()\r\n          ) >= 0\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }),\r\n      field: new TextAreaField({\r\n        displayName: \"Opportunity for Improvement\",\r\n        isRichText: true,\r\n      }),\r\n      edit: function () {\r\n        self.section.OpportunityForImprovement.field.Value(\r\n          self.selectedRecord.OFIDescription()\r\n        );\r\n        self.section.OpportunityForImprovement.isEditing(true);\r\n      },\r\n      save: function () {\r\n        var valuepair = [\r\n          [\r\n            \"OFIDescription\",\r\n            self.section.OpportunityForImprovement.field.Value(),\r\n          ],\r\n        ];\r\n        self.section.OpportunityForImprovement.isEditing(false);\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuepair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n      cancel: function () {\r\n        self.section.OpportunityForImprovement.isEditing(false);\r\n      },\r\n    },\r\n    DiscoveryDataAnalysis: {\r\n      isEditing: ko.observable(false),\r\n      isEditable: ko.pureComputed(function () {\r\n        if (self.section.DiscoveryDataAnalysis.isEditing()) {\r\n          return false;\r\n        }\r\n        // Implementors can only update their own problems.\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n        if (\r\n          [\"DevelopingActionPlan\", \"PlanApprovalQSO\"].indexOf(\r\n            self.selectedRecord.ProcessStageKey()\r\n          ) >= 0\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        return false;\r\n      }),\r\n      field: new TextAreaField({\r\n        displayName: \"Data Discovery and Analysis\",\r\n        isRichText: true,\r\n      }),\r\n      edit: function () {\r\n        self.section.DiscoveryDataAnalysis.field.Value(\r\n          self.selectedRecord.DiscoveryDataAnalysis()\r\n        );\r\n        self.section.DiscoveryDataAnalysis.isEditing(true);\r\n      },\r\n      save: function () {\r\n        var valuepair = [\r\n          [\r\n            \"DiscoveryDataAnalysis\",\r\n            self.section.DiscoveryDataAnalysis.field.Value(),\r\n          ],\r\n        ];\r\n        self.section.DiscoveryDataAnalysis.isEditing(false);\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuepair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n      cancel: function () {\r\n        self.section.DiscoveryDataAnalysis.isEditing(false);\r\n      },\r\n    },\r\n    ProblemDescription: {\r\n      isEditing: ko.observable(false),\r\n      isEditable: ko.pureComputed(function () {\r\n        if (self.section.ProblemDescription.isEditing()) {\r\n          return false;\r\n        }\r\n        if (self.selectedRecord.SelfInitiated() == \"Yes\") {\r\n          // Implementors can only update their own problems.\r\n          if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n            return false;\r\n          }\r\n          if (\r\n            [\"DevelopingActionPlan\", \"PlanApprovalQSO\"].indexOf(\r\n              self.selectedRecord.ProcessStageKey()\r\n            ) >= 0\r\n          ) {\r\n            return true;\r\n          }\r\n        } else if (self.selectedRecord.CGFSLocation() == LOCATION.BANGKOK) {\r\n          return self.selectedRecord.ProcessStageKey() == \"ProblemApprovalQTMB\";\r\n        } else {\r\n          return self.selectedRecord.ProcessStageKey() == \"ProblemApprovalQTM\";\r\n        }\r\n\r\n        return false;\r\n      }),\r\n      field: new TextAreaField({\r\n        displayName: \"Problem Description\",\r\n        isRichText: true,\r\n      }),\r\n      edit: function () {\r\n        self.section.ProblemDescription.field.Value(\r\n          self.selectedRecord.ProblemDescription()\r\n        );\r\n        self.section.ProblemDescription.isEditing(true);\r\n      },\r\n      save: function () {\r\n        var valuepair = [\r\n          [\"ProblemDescription\", self.section.ProblemDescription.field.Value()],\r\n        ];\r\n        self.section.ProblemDescription.isEditing(false);\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuepair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n      cancel: function () {\r\n        self.section.ProblemDescription.isEditing(false);\r\n      },\r\n    },\r\n    ContainmentAction: {\r\n      isVisible: ko.pureComputed(function () {\r\n        return (\r\n          self.selectedRecord.SelfInitiated() == \"Yes\" ||\r\n          self.selectedRecord.ProcessStageObj().stageNum >= 2\r\n        );\r\n      }),\r\n      isEditing: ko.observable(false),\r\n      isEditable: ko.pureComputed(function () {\r\n        if (self.section.ContainmentAction.isEditing()) {\r\n          return false;\r\n        }\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n        if (\r\n          [\"DevelopingActionPlan\", \"PlanApprovalQSO\"].indexOf(\r\n            self.selectedRecord.ProcessStageKey()\r\n          ) >= 0\r\n        ) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }),\r\n      field: new TextAreaField({\r\n        displayName: \"Containment Action\",\r\n        isRichText: true,\r\n      }),\r\n      actionDate: new DateField({ displayName: \"Containment Action Date\" }),\r\n      edit: function () {\r\n        self.section.ContainmentAction.field.Value(\r\n          self.selectedRecord.ContainmentAction()\r\n        );\r\n        // If our datetime is set\r\n        if (\r\n          self.selectedRecord.ContainmentActionDate.isDate() &&\r\n          self.selectedRecord.ContainmentActionDate.date().getTime()\r\n        ) {\r\n          self.section.ContainmentAction.actionDate.set(\r\n            self.selectedRecord.ContainmentActionDate.date()\r\n          );\r\n        }\r\n        self.section.ContainmentAction.isEditing(true);\r\n      },\r\n      save: function () {\r\n        var valuepair = [\r\n          [\"ContainmentAction\", self.section.ContainmentAction.field.Value()],\r\n          [\r\n            \"ContainmentActionDate\",\r\n            self.section.ContainmentAction.actionDate.get() ??\r\n              new Date(0).toISOString(),\r\n          ],\r\n        ];\r\n        self.section.ContainmentAction.isEditing(false);\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuepair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n      cancel: function () {\r\n        self.section.ContainmentAction.isEditing(false);\r\n      },\r\n    },\r\n    RootCause: {\r\n      new: function () {\r\n        const rootCauseWhy = new RootCauseWhy();\r\n\r\n        const planNum = self.selectedRecord.Title();\r\n        const actionNumber = self.RootCauseWhy().length\r\n          ? self.RootCauseWhy().length + 1\r\n          : 1;\r\n\r\n        const title = `${planNum}-${actionNumber}`;\r\n\r\n        rootCauseWhy.Title.Value(title);\r\n        rootCauseWhy.Number.Value(actionNumber);\r\n\r\n        const form = FormManager.NewForm({\r\n          entity: rootCauseWhy,\r\n        });\r\n\r\n        const options = {\r\n          title: \"New Why\",\r\n          form,\r\n          dialogReturnValueCallback: OnCallbackFormRefresh,\r\n        };\r\n\r\n        ModalDialog.showModalDialog(options);\r\n      },\r\n      editWhy: async function (why) {\r\n        const rootCauseWhy = await appContext.RootCauseWhys.FindById(why.ID);\r\n\r\n        const form = FormManager.EditForm({ entity: rootCauseWhy });\r\n\r\n        const options = {\r\n          title: \"Edit Why\",\r\n          form,\r\n          dialogReturnValueCallback: OnCallbackFormRefresh,\r\n        };\r\n\r\n        ModalDialog.showModalDialog(options);\r\n      },\r\n      editWhyDeprecated: function (why) {\r\n        var args = {\r\n          id: why.ID,\r\n        };\r\n        app.listRefs.Whys.showModal(\r\n          \"EditForm.aspx\",\r\n          \"Edit Question\",\r\n          args,\r\n          OnCallbackFormRefresh\r\n        );\r\n      },\r\n      isEditing: ko.observable(false),\r\n      isEditable: ko.pureComputed(function () {\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n        if (\r\n          [\"DevelopingActionPlan\", \"PlanApprovalQSO\"].indexOf(\r\n            self.selectedRecord.ProcessStageKey()\r\n          ) >= 0\r\n        ) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }),\r\n      determination: ko.observable(),\r\n      edit: function () {\r\n        self.section.RootCause.isEditing(true);\r\n        self.section.RootCause.determination(\r\n          self.selectedRecord.RootCauseDetermination()\r\n        );\r\n      },\r\n      cancel: function () {\r\n        self.section.RootCause.isEditing(false);\r\n      },\r\n      save: function () {\r\n        var valuepair = [\r\n          [\"RootCauseDetermination\", self.section.RootCause.determination()],\r\n        ];\r\n        self.section.RootCause.isEditing(false);\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuepair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n    },\r\n    SimilarNonconformity: {\r\n      isEditing: ko.observable(false),\r\n      isEditable: ko.pureComputed(function () {\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n        if (\r\n          [\"DevelopingActionPlan\", \"PlanApprovalQSO\"].indexOf(\r\n            self.selectedRecord.ProcessStageKey()\r\n          ) >= 0\r\n        ) {\r\n          return true;\r\n        }\r\n        return false;\r\n      }),\r\n      edit: function () {\r\n        self.section.SimilarNonconformity.isEditing(true);\r\n        self.section.SimilarNonconformity.otherOfficeBool(\r\n          self.selectedRecord.SimilarNoncomformityBool()\r\n        );\r\n        self.section.SimilarNonconformity.explanation(\r\n          self.selectedRecord.SimilarNoncomformityDesc()\r\n        );\r\n      },\r\n      otherOfficeBool: ko.observable(),\r\n      explanation: ko.observable(),\r\n      cancel: function () {\r\n        self.section.SimilarNonconformity.isEditing(false);\r\n      },\r\n      save: function () {\r\n        var valuepair = [\r\n          [\r\n            \"SimilarNoncomformityDesc\",\r\n            self.section.SimilarNonconformity.explanation(),\r\n          ],\r\n          [\r\n            \"SimilarNoncomformityBool\",\r\n            self.section.SimilarNonconformity.otherOfficeBool(),\r\n          ],\r\n        ];\r\n        self.section.SimilarNonconformity.isEditing(false);\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuepair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n    },\r\n    SupportDocs: {\r\n      allowUploadSupportDoc: ko.pureComputed(function () {\r\n        if (!self.selectedRecord.Active()) {\r\n          return false;\r\n        }\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n        return [\r\n          \"Pending QTM-B Problem Approval\",\r\n          \"Pending QTM Problem Approval\",\r\n          \"Developing Action Plan\",\r\n          \"Implementing Action Plan\",\r\n        ].includes(self.selectedRecord.ProcessStage());\r\n      }),\r\n      new: function () {\r\n        const planNum = self.selectedRecord.Title();\r\n\r\n        const supportingDocument = new SupportingDocument();\r\n        supportingDocument.Record.Value(planNum);\r\n        supportingDocument.DocType.Value(SUPPORTINGDOCUMENTTYPES.SUPPORT);\r\n\r\n        const folderPath = planNum;\r\n\r\n        const form = FormManager.UploadForm({\r\n          entity: supportingDocument,\r\n          folderPath,\r\n          view: SupportingDocument.Views.Edit,\r\n        });\r\n\r\n        const options = {\r\n          title: \"Upload New Supporting Document\",\r\n          form,\r\n          dialogReturnValueCallback: m_fnRefresh,\r\n        };\r\n\r\n        ModalDialog.showModalDialog(options);\r\n      },\r\n      view: async function (doc) {\r\n        const supportingDocument =\r\n          await appContext.SupportingDocuments.FindById(doc.ID);\r\n\r\n        const form = FormManager.DispForm({ entity: supportingDocument });\r\n\r\n        const options = {\r\n          title: \"View Document\",\r\n          form,\r\n        };\r\n\r\n        ModalDialog.showModalDialog(options);\r\n      },\r\n      edit: async function (doc) {\r\n        const supportingDocument =\r\n          await appContext.SupportingDocuments.FindById(doc.ID);\r\n\r\n        const form = FormManager.EditForm({\r\n          entity: supportingDocument,\r\n          view: SupportingDocument.Views.Edit,\r\n        });\r\n\r\n        const options = {\r\n          title: \"Edit Document\",\r\n          form,\r\n          dialogReturnValueCallback: m_fnRefresh,\r\n        };\r\n\r\n        ModalDialog.showModalDialog(options);\r\n      },\r\n    },\r\n    Actions: {\r\n      allowSubmitNewAction: ko.pureComputed(function () {\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n        return self.selectedRecord.ProcessStageKey() == \"DevelopingActionPlan\";\r\n      }),\r\n      completeEnable: function (action) {\r\n        // Let's first check to see if our record is in one of the stages we can complete actions in\r\n        if (\r\n          ![\r\n            \"Implementing Action Plan\",\r\n            \"Pending QSO Plan Approval: Action\",\r\n          ].includes(vm.selectedRecord.ProcessStage())\r\n        ) {\r\n          return false;\r\n        }\r\n\r\n        if (!vm.selectedRecord.curUserHasRole(ROLES.ACTIONRESPONSIBLEPERSON)) {\r\n          return false;\r\n        }\r\n\r\n        if (action.ImplementationStatus == \"In progress\") {\r\n          return true;\r\n        }\r\n        return false;\r\n      },\r\n      completeClass: function (action) {\r\n        return action.ImplementationStatus == \"Completed\"\r\n          ? \"btn-success\"\r\n          : \"btn-outline-success\";\r\n      },\r\n      completeText: function (action) {\r\n        return action.ImplementationStatus == \"Completed\"\r\n          ? \"Completed\"\r\n          : \"Mark Complete\";\r\n      },\r\n      completeClick: function (action) {\r\n        var completionDate = new Date().toISOString();\r\n        // Set the status of this action item to completed\r\n        var vp = [\r\n          [\"ImplementationDate\", completionDate],\r\n          [\"ImplementationStatus\", \"Completed\"],\r\n        ];\r\n        app.listRefs.Actions.updateListItem(action.ID, vp, m_fnRefresh);\r\n      },\r\n      new: async function () {\r\n        const planNum = self.selectedRecord.Title();\r\n        const nextActionId = getNextActionId(planNum, self.ActionListItems());\r\n\r\n        const action = new Action();\r\n\r\n        action.Title.Value(planNum);\r\n        action.ActionID.Value(nextActionId);\r\n\r\n        const form = FormManager.NewForm({\r\n          entity: action,\r\n          view: Action.Views.New,\r\n          onSubmit: () => submitNewAction(null, action),\r\n        });\r\n\r\n        const options = {\r\n          title: \"New Action\",\r\n          form,\r\n          dialogReturnValueCallback: OnActionCreateCallback,\r\n        };\r\n\r\n        ModalDialog.showModalDialog(options);\r\n      },\r\n      isEditable: function (action) {\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n        // Only edit in progress actions\r\n        if (action.ImplementationStatus == ACTIONSTATE.COMPLETED) {\r\n          return false;\r\n        }\r\n        return [\r\n          \"DevelopingActionPlan\",\r\n          \"PlanApprovalQSO\",\r\n          \"PlanApprovalQSOAction\",\r\n          \"ImplementingActionPlan\",\r\n        ].includes(self.selectedRecord.ProcessStageKey());\r\n      },\r\n      editClick: async function (action) {\r\n        const entity = await appContext.Actions.FindById(action.ID);\r\n        const planId = self.selectedRecord.ID();\r\n        const plan = await appContext.Plans.FindById(planId);\r\n\r\n        const form = new EditActionForm({ entity, plan });\r\n\r\n        const options = {\r\n          title: \"Editing Action \" + entity.ActionID.Value(),\r\n          form,\r\n          dialogReturnValueCallback: OnActionEditCallback,\r\n        };\r\n\r\n        ModalDialog.showModalDialog(options);\r\n      },\r\n      requiresApproval: function (action) {\r\n        if (vm.AdminType()) {\r\n          switch (action.ImplementationStatus) {\r\n            case \"Requires Approval QTM\":\r\n              return vm.selectedRecord.curUserHasRole(ROLES.ADMINTYPE.QTM);\r\n            case \"Requires Approval QAO\":\r\n              return vm.selectedRecord.curUserHasRole(ROLES.QAO);\r\n            case \"Requires Approval QSO\":\r\n              return vm.selectedRecord.curUserHasRole(ROLES.QSO);\r\n            default:\r\n              return false;\r\n          }\r\n        }\r\n\r\n        return false;\r\n      },\r\n      approvalApproveClick: function (action) {\r\n        const valuePair = [\r\n          [\"ImplementationStatus\", \"In progress\"],\r\n          [\"PreviousActionDescription\", \"\"],\r\n          [\"PreviousActionResponsiblePerson\", \"\"],\r\n          [\"PreviousTargetDate\", null],\r\n        ];\r\n\r\n        app.listRefs.Actions.updateListItem(action.ID, valuePair, function () {\r\n          //setActionApprovalState();\r\n          //action.ImplementationStatus = 'In progress';\r\n          app.listRefs.Actions.getListItems(\"\", vm.allActionsArray);\r\n\r\n          vm.controls.record.updateImplementationDate();\r\n          m_fnRefresh();\r\n        });\r\n      },\r\n      approvalRejectClick: function (action) {\r\n        const valuePair = [\r\n          [\"ImplementationStatus\", \"In progress\"],\r\n          [\"PreviousActionDescription\", \"\"],\r\n          [\"PreviousActionResponsiblePerson\", \"\"],\r\n          [\"PreviousTargetDate\", null],\r\n          [\"RevisionCount\", action.RevisionCount - 1],\r\n        ];\r\n\r\n        if (action.PreviousActionDescription) {\r\n          valuePair.push([\r\n            \"ActionDescription\",\r\n            action.PreviousActionDescription,\r\n          ]);\r\n        }\r\n\r\n        if (action.PreviousActionResponsiblePerson) {\r\n          valuePair.push([\r\n            \"ActionResponsiblePerson\",\r\n            action.PreviousActionResponsiblePerson.get_lookupId(),\r\n          ]);\r\n        }\r\n\r\n        if (action.PreviousTargetDate) {\r\n          valuePair.push([\r\n            \"TargetDate\",\r\n            new Date(action.PreviousTargetDate).toISOString(),\r\n          ]);\r\n        }\r\n\r\n        app.listRefs.Actions.updateListItem(action.ID, valuePair, function () {\r\n          //setActionApprovalState();\r\n          //action.ImplementationStatus = 'In progress';\r\n          app.listRefs.Actions.getListItems(\"\", vm.allActionsArray);\r\n\r\n          vm.controls.record.updateImplementationDate();\r\n          m_fnRefresh();\r\n        });\r\n      },\r\n      changesClick: function (action) {\r\n        app.listRefs.Actions.showModal(\r\n          \"ChangeForm.aspx\",\r\n          action.Title,\r\n          {\r\n            id: action.ID,\r\n          },\r\n          function () {}\r\n        );\r\n      },\r\n      historyClick: function (action) {\r\n        app.listRefs.Actions.showVersions(\r\n          action.ID,\r\n          action.Title,\r\n          function () {}\r\n        );\r\n      },\r\n      findLastActionTargetDate: function () {\r\n        let actionItems = vm.allActionsArray().filter(function (action) {\r\n          return action.Title == vm.selectedRecord.Title();\r\n        });\r\n\r\n        let maxDate = new Date(0);\r\n\r\n        actionItems.forEach(function (action) {\r\n          // Check if this action should be included in our new target date, or is awaiting approval.\r\n          console.log(\"Action Item Date: \" + action.TargetDate);\r\n          const tempDate = action.TargetDate;\r\n          if (tempDate.getTime() > maxDate.getTime()) {\r\n            console.log(\r\n              \"Updating Target Implementation Date: \" + action.TargetDate\r\n            );\r\n            maxDate = tempDate;\r\n          }\r\n        });\r\n        return maxDate;\r\n      },\r\n      extendTargetDate: function (actionArr, days) {\r\n        actionArr.forEach(function (action) {\r\n          if (action.ImplementationStatus != ACTIONSTATE.INPROGRESS) {\r\n            return;\r\n          }\r\n          var newNextDate = Common.Utilities.incrementDateDays(\r\n            action.TargetDate,\r\n            days\r\n          );\r\n          var valuePair = [[\"TargetDate\", newNextDate]];\r\n          app.listRefs.Actions.updateListItem(\r\n            action.ID,\r\n            valuePair,\r\n            function () {}\r\n          );\r\n        });\r\n      },\r\n    },\r\n    EffectivenessDocs: {\r\n      ShowEffectivenessDocs: ko.pureComputed(function () {\r\n        return (\r\n          [\r\n            \"Pending Effectiveness Submission\",\r\n            \"Pending Effectiveness Submission: Rejected\",\r\n            \"Pending QSO Effectiveness Approval\",\r\n            \"Pending QTM-B Effectiveness Approval\",\r\n            \"Pending QTM Effectiveness Approval\",\r\n            \"Accepted\",\r\n            \"Closed: Accepted\",\r\n            \"Closed: Rejected\",\r\n            \"Closed: Closed by Submitter\",\r\n          ].indexOf(self.selectedRecord.ProcessStage()) > -1\r\n        );\r\n      }),\r\n      isEditable: function () {\r\n        return [\r\n          \"EffectivenessSubmission\",\r\n          \"EffectivenessSubmissionRejected\",\r\n        ].includes(self.selectedRecord.ProcessStageKey());\r\n      },\r\n      officeRisk: {\r\n        isEditing: ko.observable(false),\r\n        editClick: function () {\r\n          self.section.EffectivenessDocs.officeRisk.isEditing(true);\r\n          self.section.EffectivenessDocs.officeRisk.description(\r\n            self.selectedRecord.OfficeImpactDesc()\r\n          );\r\n          self.section.EffectivenessDocs.officeRisk.bool(\r\n            self.selectedRecord.OfficeImpactBool()\r\n          );\r\n        },\r\n        saveClick: function () {\r\n          self.section.EffectivenessDocs.officeRisk.isEditing(false);\r\n          var vp = [\r\n            [\r\n              \"OfficeImpactDesc\",\r\n              self.section.EffectivenessDocs.officeRisk.description(),\r\n            ],\r\n            [\r\n              \"OfficeImpactBool\",\r\n              self.section.EffectivenessDocs.officeRisk.bool(),\r\n            ],\r\n          ];\r\n          app.listRefs.Plans.updateListItem(\r\n            self.selectedRecord.ID(),\r\n            vp,\r\n            m_fnRefresh\r\n          );\r\n        },\r\n        cancelClick: function () {\r\n          self.section.EffectivenessDocs.officeRisk.isEditing(false);\r\n        },\r\n        description: ko.observable(),\r\n        bool: ko.observable(),\r\n      },\r\n      proof: {\r\n        isEditing: ko.observable(false),\r\n        editClick: function () {\r\n          self.section.EffectivenessDocs.proof.isEditing(true);\r\n          self.section.EffectivenessDocs.proof.description(\r\n            self.selectedRecord.EffectivenessDescription()\r\n          );\r\n        },\r\n        cancelClick: function () {\r\n          self.section.EffectivenessDocs.proof.isEditing(false);\r\n        },\r\n        saveClick: function () {\r\n          self.section.EffectivenessDocs.proof.isEditing(false);\r\n          var vp = [\r\n            [\r\n              \"EffectivenessDescription\",\r\n              self.section.EffectivenessDocs.proof.description(),\r\n            ],\r\n          ];\r\n          app.listRefs.Plans.updateListItem(\r\n            self.selectedRecord.ID(),\r\n            vp,\r\n            m_fnRefresh\r\n          );\r\n        },\r\n        description: ko.observable(),\r\n        documents: {\r\n          allowUploadEffectivenessDoc: ko.pureComputed(function () {\r\n            return (\r\n              self.selectedRecord.ProcessStageKey() ==\r\n                \"ImplementingActionPlan\" &&\r\n              vm.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)\r\n            );\r\n          }),\r\n          new: function () {\r\n            const planNum = self.selectedRecord.Title();\r\n\r\n            const supportingDocument = new SupportingDocument();\r\n            supportingDocument.Record.Value(planNum);\r\n            supportingDocument.DocType.Value(\r\n              SUPPORTINGDOCUMENTTYPES.EFFECTIVENESS\r\n            );\r\n\r\n            const folderPath = planNum;\r\n\r\n            const form = FormManager.UploadForm({\r\n              entity: supportingDocument,\r\n              folderPath,\r\n              view: SupportingDocument.Views.Edit,\r\n            });\r\n\r\n            const options = {\r\n              title: \"Upload New Proof of Effectiveness Document\",\r\n              form,\r\n              dialogReturnValueCallback: m_fnRefresh,\r\n            };\r\n\r\n            ModalDialog.showModalDialog(options);\r\n          },\r\n          view: async function (doc) {\r\n            const supportingDocument =\r\n              await appContext.SupportingDocuments.FindById(doc.ID);\r\n\r\n            const form = FormManager.DispForm({ entity: supportingDocument });\r\n\r\n            const options = {\r\n              title: \"View Document\",\r\n              form,\r\n            };\r\n\r\n            ModalDialog.showModalDialog(options);\r\n          },\r\n          edit: async function (doc) {\r\n            const supportingDocument =\r\n              await appContext.SupportingDocuments.FindById(doc.ID);\r\n\r\n            const form = FormManager.EditForm({\r\n              entity: supportingDocument,\r\n              view: SupportingDocument.Views.Edit,\r\n            });\r\n\r\n            const options = {\r\n              title: \"Edit Document\",\r\n              form,\r\n              dialogReturnValueCallback: m_fnRefresh,\r\n            };\r\n\r\n            ModalDialog.showModalDialog(options);\r\n          },\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  self.selectedPlan = ko.observable();\r\n\r\n  // This is just initializing an object with corresponding observables\r\n  // based off the list def\r\n  self.selectedRecord =\r\n    Common.Utilities.observableObjectFromListDef(CIItemListDef);\r\n\r\n  // Determine what stage we are based off the human readable ProcessStage\r\n  self.selectedRecord.ProcessStageKey = ko.pureComputed(function () {\r\n    if (!self.selectedRecord.ProcessStage()) {\r\n      return \"\";\r\n    }\r\n    var stageKey = Object.keys(stageDescriptions).find(function (key) {\r\n      return stageDescriptions[key].stage == self.selectedRecord.ProcessStage();\r\n    });\r\n    return stageKey;\r\n  });\r\n\r\n  self.selectedRecord.ProcessStageObj = ko.pureComputed(function () {\r\n    var key = self.selectedRecord.ProcessStageKey();\r\n    if (!key) return null;\r\n    return stageDescriptions[key];\r\n  });\r\n\r\n  self.selectedRecord.curUserHasRole = function (role) {\r\n    // determine if the current user has the requested role\r\n    var userId = self.currentUserObj.id();\r\n    switch (vm.AdminType()) {\r\n      case ROLES.ADMINTYPE.QTM:\r\n        // QTM should have all roles\r\n        return true;\r\n      case ROLES.ADMINTYPE.QTMB:\r\n        if (role != ROLES.ADMINTYPE.QTM) {\r\n          // QTM B has all roles for bangkok\r\n          return self.selectedRecord.CGFSLocation() == \"Bangkok\";\r\n        }\r\n      case ROLES.ADMINTYPE.USER:\r\n        /*check if this person is fits any of the following:\r\n        problem resolver\r\n        submitter\r\n        action responsible person\r\n        */\r\n        switch (role) {\r\n          case ROLES.IMPLEMENTOR:\r\n            // this person is either the submitter (if self initiated)\r\n            // or Coordinator.\r\n            // Can the current user push the request forward\r\n            if (self.selectedRecord.curUserHasRole(ROLES.COORDINATOR)) {\r\n              return true;\r\n            }\r\n            if (\r\n              self.selectedRecord.curUserHasRole(ROLES.SUBMITTER) &&\r\n              self.selectedRecord.SelfInitiated() == \"Yes\"\r\n            ) {\r\n              return true;\r\n            }\r\n            return false;\r\n          case ROLES.SUBMITTER:\r\n            return self.selectedRecord.Author.containsPeopleById(userId)\r\n              ? true\r\n              : false;\r\n          case ROLES.COORDINATOR:\r\n            return self.selectedRecord.ProblemResolverName.containsPeopleById(\r\n              userId\r\n            )\r\n              ? true\r\n              : false;\r\n          case ROLES.ACTIONRESPONSIBLEPERSON:\r\n            // Check if we're either the implementor, or assigned on an action.\r\n            if (self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n              return true;\r\n            }\r\n            return (\r\n              self.ActionListItems().filter(function (actionItem) {\r\n                return (\r\n                  userId === actionItem.ActionResponsiblePerson.get_lookupId()\r\n                );\r\n              }).length > 0\r\n            );\r\n          default:\r\n            return false;\r\n        }\r\n        break;\r\n      case ROLES.ADMINTYPE.QO:\r\n        // First, check if we've been assigned directly to this record\r\n        // Note: let's go ahead and return true for QSO if the user is QAO\r\n        if (![ROLES.QSO, ROLES.QAO, ROLES.IMPLEMENTOR].includes(role)) {\r\n          return false;\r\n        }\r\n\r\n        if (vm.selectedRecord.QAO.containsPeopleById(userId)) {\r\n          return true;\r\n        }\r\n        if (\r\n          role === ROLES.QSO &&\r\n          vm.selectedRecord.QSO.containsPeopleById(userId)\r\n        ) {\r\n          return true;\r\n        }\r\n        // Next, run through our business office ownership to see if we\r\n        // are that office & locations QSO/QAO\r\n        var isRoleFlag = false;\r\n        self.currentUserObj.businessOfficeOwnership().some(function (office) {\r\n          if (\r\n            office.id === self.selectedRecord.BusinessOffice().get_lookupId()\r\n          ) {\r\n            if (office.type === role || office.type === ROLES.QAO) {\r\n              isRoleFlag = true;\r\n              return true;\r\n            }\r\n          }\r\n        });\r\n\r\n        return isRoleFlag;\r\n\r\n      default:\r\n        return false;\r\n    }\r\n  };\r\n\r\n  self.CAPID = ko.observable();\r\n\r\n  // self.CAPApprovalStatus = ko.observable();\r\n\r\n  // self.DiscoveryDataAnalysis = ko.observable();\r\n  // self.OFIDescription = ko.observable();\r\n\r\n  // self.QSOApprovalStatus = ko.observable();\r\n  // self.QMSBApprovalStatus = ko.observable();\r\n  // self.QTMApprovalStatus = ko.observable();\r\n\r\n  // self.OfficeImpactBool = ko.observable(\"0\");\r\n  // self.OfficeImpactDesc = ko.observable(\"\");\r\n\r\n  // self.EffectivenessDescription = ko.observable();\r\n\r\n  self.GetNumActionsApproval = ko.computed(function () {\r\n    return self.ActionListItems().filter(function (action) {\r\n      return action.ImplementationStatus == \"Requires Approval\";\r\n    }).length;\r\n  });\r\n\r\n  self.contactQTM = ko.computed(function () {\r\n    const qtmEmail = \"CGFSQMSCARCAP@state.gov\";\r\n\r\n    const link =\r\n      \"mailto:\" +\r\n      qtmEmail +\r\n      \"?subject=CAR/CAP Record Remark\" +\r\n      \"&body=Greetings,%0d%0a%0d%0aI have a remark regarding the following CAR/CAP: \" +\r\n      self.selectedTitle() +\r\n      \"%0d%0a%0d%0a\" +\r\n      \"My remark is as follows:%0d%0a\";\r\n\r\n    return link;\r\n  });\r\n\r\n  self.printUrl = ko.computed(function () {\r\n    if (!self.selectedTitle()) {\r\n      return \"javascript: void(0)\";\r\n    }\r\n    return (\r\n      _spPageContextInfo.siteServerRelativeUrl +\r\n      \"/SitePages/print.aspx?capid=\" +\r\n      self.selectedTitle()\r\n    );\r\n  });\r\n\r\n  self.clickPrintPlan = () => {\r\n    printPlan(self.selectedRecord.ID());\r\n  };\r\n\r\n  // Return the percentage complete for the record for our progress bar.\r\n  self.ProcessPercentage = ko.computed(function () {\r\n    return (\r\n      self.selectedRecord.ProcessStageObj() &&\r\n      self.selectedRecord.ProcessStageObj().progress\r\n    );\r\n  });\r\n\r\n  self.downloadDocument = function (doc) {\r\n    return null;\r\n  };\r\n\r\n  self.NumActions = ko.computed(function () {\r\n    return self.ActionListItems().length ? self.ActionListItems().length : 0;\r\n  });\r\n  self.NumOpenActions = ko.computed(function () {\r\n    return self.NumActions() > 0\r\n      ? self.ActionListItems().filter(checkComplete).length\r\n      : 0;\r\n  });\r\n  self.NumClosedActions = ko.computed(function () {\r\n    return self.NumActions() - self.NumOpenActions();\r\n  });\r\n\r\n  self.ActionPercentage = ko.computed(function () {\r\n    const perc = 1 - self.NumOpenActions() / self.ActionListItems().length || 0;\r\n    return perc * 100 + \"%\";\r\n  });\r\n\r\n  self.ActionProgressBarClass = ko.computed(function () {\r\n    return self.ActionPercentage() == \"100%\" ? \"bg-success\" : \"bg-info\";\r\n  });\r\n\r\n  //console.log(\"Open length: \" + self.NumOpenActions() + \" Total Length: \" + self.NumActions());\r\n\r\n  /************************************************************/\r\n  /*                  CAR Specific Stuff                      */\r\n  /************************************************************/\r\n\r\n  self.RootCauseWhy = ko.observableArray([]);\r\n\r\n  self.IsCAR = ko.computed(function () {\r\n    return self.selectedRecord.RecordType() == \"CAR\";\r\n  });\r\n\r\n  //self.EnableSubmitProblem = ko.computed(function () {\r\n  //    return ((self.RecordType() == 'CAP'))\r\n  //})\r\n\r\n  // These are our pipeline object specific controls\r\n  self.controls = {\r\n    pipeline: {\r\n      showStage1: ko.pureComputed(function () {\r\n        var record = self.selectedRecord;\r\n        return (\r\n          record.ProcessStageObj().stageNum === 1 &&\r\n          record.curUserHasRole(record.ProcessStageObj().actionTaker)\r\n        );\r\n      }),\r\n      showStage2: ko.pureComputed(function () {\r\n        var record = self.selectedRecord;\r\n        return (\r\n          record.ProcessStageObj().stageNum === 2 &&\r\n          record.curUserHasRole(record.ProcessStageObj().actionTaker)\r\n        );\r\n      }),\r\n      showStage3: ko.pureComputed(function () {\r\n        var record = self.selectedRecord;\r\n        return (\r\n          record.ProcessStageObj().stageNum === 3 &&\r\n          record.curUserHasRole(record.ProcessStageObj().actionTaker)\r\n        );\r\n      }),\r\n      showStage4: ko.pureComputed(function () {\r\n        var record = self.selectedRecord;\r\n        return (\r\n          record.ProcessStageObj().stageNum === 4 &&\r\n          record.curUserHasRole(record.ProcessStageObj().actionTaker)\r\n        );\r\n      }),\r\n    },\r\n  };\r\n  const sortByCreatedDesc = function (item1, item2) {\r\n    return item1.Created < item2.Created ? 1 : -1;\r\n  };\r\n  const sortByTitle = function (item1, item2) {\r\n    if (!item1.Title) {\r\n      return -1;\r\n    }\r\n    if (!item2.Title) {\r\n      return 1;\r\n    }\r\n    var index1 = parseInt(item1.Title.split(\"-\")[1]);\r\n    var index2 = parseInt(item2.Title.split(\"-\")[1]);\r\n    return index1 < index2 ? 1 : -1;\r\n  };\r\n\r\n  const getNextItemCntByType = function (type) {\r\n    // Pass CAP or CAR to filter and find the next incrementer\r\n\r\n    const records = vm.allRecordsArray().filter(function (record) {\r\n      return (\r\n        record.RecordType == type &&\r\n        record.Created.getFullYear() == new Date().getFullYear() &&\r\n        record.Title\r\n      );\r\n    });\r\n    // .forEach(function (record) {\r\n    //   let recordNo = parseInt(record.Title.split(\"-\")[1]);\r\n    //   if (recordNo >= recordNoMax) {\r\n    //     recordNoMax = recordNo + 1;\r\n    //   }\r\n    // });\r\n\r\n    return records.length + 1;\r\n  };\r\n\r\n  function GetNewID(type, count) {\r\n    var id =\r\n      type + new Date().format(\"yy\") + \"-\" + count.toString().padStart(3, \"0\");\r\n    return id;\r\n  }\r\n\r\n  const getNextTitleByType = function (type) {\r\n    const itemCount = getNextItemCntByType(type);\r\n    switch (type) {\r\n      case \"CAR\":\r\n        return GetNewID(\"C\", itemCount);\r\n      case \"CAP\":\r\n        return GetNewID(\"P\", itemCount);\r\n      default:\r\n    }\r\n  };\r\n\r\n  // These are our record status/management controls\r\n  self.controls.record = {\r\n    new: function () {\r\n      var cntCap = getNextItemCntByType(\"CAP\");\r\n      var cntCar = getNextItemCntByType(\"CAR\");\r\n      var args = {\r\n        cnt: { cap: cntCap, car: cntCar },\r\n      };\r\n      app.listRefs.Plans.showModal(\r\n        \"NewForm.aspx\",\r\n        \"Create a New CAP or CAR\",\r\n        args,\r\n        (result, value) => {\r\n          if (result === SP.UI.DialogResult.OK) {\r\n            const refreshTask = addTask(tasks.refreshPlans);\r\n            const userId = vm.currentUserObj.id();\r\n            app.listRefs.Plans.getListItems(\"\", function (items) {\r\n              vm.allRecordsArray(items);\r\n\r\n              // Update Title\r\n              const newPlan = items.findLast(\r\n                (item) => item.Author.get_lookupId() == userId\r\n              );\r\n              const newTitle = getNextTitleByType(newPlan.RecordType);\r\n              if (newTitle != newPlan.Title) {\r\n                newPlan.Title = newTitle;\r\n                app.listRefs.Plans.updateListItem(\r\n                  newPlan.ID,\r\n                  [[\"Title\", newTitle]],\r\n                  () => {}\r\n                );\r\n              }\r\n              vm.selectedTitle(newPlan.Title);\r\n              vm.tabs.selectById(vm.tabOpts.detail);\r\n              finishTask(refreshTask);\r\n              // m_fnForward();\r\n            });\r\n          }\r\n        }\r\n      );\r\n    },\r\n    isEditable: ko.pureComputed(function () {\r\n      if (!vm.selectedRecord.Active()) {\r\n        return false;\r\n      }\r\n      if (self.selectedRecord.curUserHasRole(ROLES.ADMINTYPE.QTM)) {\r\n        return true;\r\n      }\r\n      if (\r\n        self.selectedRecord.SelfInitiated() == \"No\" &&\r\n        self.selectedRecord.curUserHasRole(ROLES.SUBMITTER)\r\n      ) {\r\n        if (self.selectedRecord.CGFSLocation() == LOCATION.BANGKOK) {\r\n          return [\"Editing\", \"Pending QTM-B Problem Approval\"].includes(\r\n            self.selectedRecord.ProcessStage()\r\n          );\r\n        }\r\n        return [\r\n          \"Editing\",\r\n          \"Pending QTM-B Problem Approval\",\r\n          \"Pending QTM Problem Approval\",\r\n        ].includes(self.selectedRecord.ProcessStage());\r\n      }\r\n      // if (self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n      //   return [\r\n      //     \"Editing\",\r\n      //     \"Developing Action Plan\",\r\n      //     \"Pending QSO Plan Approval\",\r\n      //   ].includes(self.selectedRecord.ProcessStage());\r\n      // }\r\n      return false;\r\n    }),\r\n    edit: async function () {\r\n      const id = self.selectedRecord.ID();\r\n      const entity = await appContext.Plans.FindById(id);\r\n\r\n      // Two separate views, since we don't want the \"Flattened Name\" fields on the forms.\r\n      let formView, submitView;\r\n      if (self.selectedRecord.curUserHasRole(ROLES.ADMINTYPE.QTM)) {\r\n        formView = Plan.Views.QTMEditForm;\r\n        submitView = Plan.Views.QTMEditSubmit;\r\n      } else {\r\n        formView = Plan.Views.SubmitterEditForm;\r\n        submitView = Plan.Views.SubmitterEditSubmit;\r\n      }\r\n\r\n      const form = FormManager.EditForm({\r\n        entity: entity,\r\n        view: formView,\r\n        onSubmit: () => editPlan(entity, submitView),\r\n      });\r\n\r\n      const options = {\r\n        title: `Editing ${entity.Title}`,\r\n        form,\r\n        dialogReturnValueCallback: OnCallbackFormRefresh,\r\n      };\r\n\r\n      ModalDialog.showModalDialog(options);\r\n    },\r\n    view: async function () {\r\n      const id = self.selectedRecord.ID();\r\n      const plan = await appContext.Plans.FindById(id);\r\n\r\n      const planViewForm = FormManager.DispForm({\r\n        entity: plan,\r\n        view: Plan.Views.View,\r\n      });\r\n      const options = {\r\n        title: \"View Plan \" + plan.Title,\r\n        form: planViewForm,\r\n      };\r\n\r\n      ModalDialog.showModalDialog(options);\r\n    },\r\n    isCloseable: ko.pureComputed(function () {\r\n      if (!vm.selectedRecord.Active()) {\r\n        return false;\r\n      }\r\n      if (self.selectedRecord.curUserHasRole(ROLES.ADMINTYPE.QTM)) {\r\n        return true;\r\n      }\r\n      if (\r\n        self.selectedRecord.SelfInitiated() == \"No\" &&\r\n        self.selectedRecord.curUserHasRole(ROLES.SUBMITTER)\r\n      ) {\r\n        if (self.selectedRecord.CGFSLocation() == LOCATION.BANGKOK) {\r\n          return [\"Editing\", \"Pending QTM-B Problem Approval\"].includes(\r\n            self.selectedRecord.ProcessStage()\r\n          );\r\n        }\r\n        return [\"Editing\", \"Pending QTM Problem Approval\"].includes(\r\n          self.selectedRecord.ProcessStage()\r\n        );\r\n      }\r\n      if (self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n        return [\r\n          \"Editing\",\r\n          \"Developing Action Plan\",\r\n          \"Pending QSO Plan Approval\",\r\n        ].includes(self.selectedRecord.ProcessStage());\r\n      }\r\n      return false;\r\n    }),\r\n    displayCloseDialog: async function () {\r\n      // $(\"#close-modal\").modal(\"show\");\r\n      const planId = self.selectedPlan()?.ID;\r\n      const plan = await appContext.Plans.FindById(planId);\r\n      const form = new CancelPlanForm({ entity: plan });\r\n\r\n      const options = {\r\n        title: \"Are you sure you want to close this plan?\",\r\n        form,\r\n        dialogReturnValueCallback: OnCallbackFormRefresh,\r\n      };\r\n\r\n      ModalDialog.showModalDialog(options);\r\n    },\r\n    isOpenable: ko.pureComputed(function () {\r\n      if (vm.selectedRecord.Active()) {\r\n        return false;\r\n      }\r\n      if (self.selectedRecord.curUserHasRole(ROLES.ADMINTYPE.QTM)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }),\r\n    open: function () {\r\n      if (confirm(\"Are you sure you want to Re-Open this record?\")) {\r\n        const openTask = addTask(tasks.opening);\r\n        const valuePair = [\r\n          [\"ProcessStage\", vm.selectedRecord.PreviousStage()],\r\n          [\"Active\", \"1\"],\r\n          [\"CloseDate\", null],\r\n          [\"CancelReason\", null],\r\n        ];\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuePair,\r\n          function () {\r\n            finishTask(openTask);\r\n            //   toggleLockPlan(self.selectedRecord.Title(), false, function () {\r\n            //     alert(\"Plan has been unlocked.\");\r\n            //     m_fnRefresh();\r\n            //   });\r\n            m_fnRefresh();\r\n          }\r\n        );\r\n      }\r\n    },\r\n    extension: {\r\n      showExtensionRequestSection: function () {\r\n        if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n          return false;\r\n        }\r\n\r\n        if (self.selectedRecord.ProcessStageKey() != \"ImplementingActionPlan\") {\r\n          return false;\r\n        }\r\n        return true;\r\n      },\r\n      requestExtension: function () {\r\n        var valuePair = [[\"ExtensionRequested\", true]];\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuePair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n      cancelRequest: function () {\r\n        var valuePair = [[\"ExtensionRequested\", false]];\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuePair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n      extensionApprover: ko.pureComputed(function () {\r\n        var extCnt = parseInt(self.selectedRecord.ExtensionCount());\r\n        if (isNaN(extCnt)) {\r\n          extCnt = 0;\r\n        }\r\n        if (extCnt == 0) {\r\n          return \"QSO\";\r\n        }\r\n        if (extCnt == 1) {\r\n          return \"QAO\";\r\n        }\r\n        if (extCnt >= 2) {\r\n          return \"QTM\";\r\n        }\r\n      }),\r\n      showApproval: ko.pureComputed(function () {\r\n        if (!self.selectedRecord.ExtensionRequested()) {\r\n          return false;\r\n        }\r\n        if (!self.selectedRecord.Active()) {\r\n          return false;\r\n        }\r\n        var extCnt = parseInt(self.selectedRecord.ExtensionCount());\r\n        extCnt = isNaN(extCnt) ? 0 : extCnt;\r\n        if (extCnt == 0) {\r\n          return self.selectedRecord.curUserHasRole(ROLES.QSO);\r\n        }\r\n        if (extCnt == 1) {\r\n          return self.selectedRecord.curUserHasRole(ROLES.QAO);\r\n        }\r\n        if (extCnt >= 2) {\r\n          return self.selectedRecord.curUserHasRole(ROLES.ADMINTYPE.QTM);\r\n        }\r\n        return false;\r\n      }),\r\n      approveRequest: function () {\r\n        var extCnt = parseInt(self.selectedRecord.ExtensionCount());\r\n        if (isNaN(extCnt)) {\r\n          extCnt = 0;\r\n        }\r\n        self.selectedRecord.ExtensionCount(++extCnt);\r\n        // Get our next target date based off our current implementation date\r\n        var newNextDate = self.controls.record.extension.totalExtensionDate(\r\n          vm.section.Actions.findLastActionTargetDate()\r\n        );\r\n        var valuePair = [\r\n          [\"ExtensionRequested\", false],\r\n          [\"ExtensionCount\", extCnt],\r\n          [\"NextTargetDate\", newNextDate.toISOString()],\r\n          [\"ImplementationTargetDate\", newNextDate.toISOString()],\r\n        ];\r\n        self.section.Actions.extendTargetDate(\r\n          vm.ActionListItems(),\r\n          EXTENSIONDAYS\r\n        );\r\n        app.listRefs.Plans.updateListItem(\r\n          self.selectedRecord.ID(),\r\n          valuePair,\r\n          m_fnRefresh\r\n        );\r\n      },\r\n      totalExtensionDate: function (startDate) {\r\n        var extCnt = parseInt(self.selectedRecord.ExtensionCount());\r\n        if (isNaN(extCnt)) {\r\n          extCnt = 0;\r\n        }\r\n        var newNextDate = new Date(\r\n          startDate.getFullYear(),\r\n          startDate.getMonth(),\r\n          startDate.getDate() + EXTENSIONDAYS * extCnt\r\n        );\r\n        return newNextDate;\r\n      },\r\n    },\r\n    showCalculateNextTargetDate: ko.pureComputed(function () {\r\n      if (!vm.selectedRecord.Active()) {\r\n        return false;\r\n      }\r\n      if (self.selectedRecord.curUserHasRole(ROLES.ADMINTYPE.QTM)) {\r\n        return true;\r\n      }\r\n      return false;\r\n    }),\r\n    calculateNextTargetDate: function () {\r\n      if (!vm.selectedRecord.Active()) {\r\n        alert(\"Record is not active!\");\r\n        return;\r\n      }\r\n      let nextTargetDate = new Date();\r\n      let startDate = new Date();\r\n      switch (vm.selectedRecord.ProcessStageObj().stageNum) {\r\n        case 1:\r\n          startDate = vm.selectedRecord.Created.date();\r\n          nextTargetDate = new Date(\r\n            startDate.getFullYear(),\r\n            startDate.getMonth(),\r\n            startDate.getDate() + 30\r\n          );\r\n\r\n          break;\r\n        case 2:\r\n          if (self.selectedRecord.SelfInitiated() == \"No\") {\r\n            startDate = vm.selectedRecord.QTMProblemAdjudicationDate.date();\r\n          } else {\r\n            startDate = vm.selectedRecord.Created.date();\r\n          }\r\n          nextTargetDate = new Date(\r\n            startDate.getFullYear(),\r\n            startDate.getMonth(),\r\n            startDate.getDate() + 30\r\n          );\r\n          break;\r\n        case 3:\r\n          nextTargetDate = vm.selectedRecord.ImplementationTargetDate.date();\r\n          break;\r\n        case 4:\r\n          nextTargetDate =\r\n            vm.selectedRecord.EffectivenessVerificationTargetD.date();\r\n          console.log(\"4\");\r\n          break;\r\n        default:\r\n          alert(\"Something went wrong\");\r\n      }\r\n\r\n      console.log(nextTargetDate.toISOString());\r\n      let valuePair = [[\"NextTargetDate\", nextTargetDate.toISOString()]];\r\n      app.listRefs.Plans.updateListItem(\r\n        vm.selectedRecord.ID(),\r\n        valuePair,\r\n        m_fnRefresh\r\n      );\r\n    },\r\n    updateImplementationDate: function () {\r\n      if (\r\n        vm.selectedRecord.ProcessStageKey() != \"DevelopingActionPlan\" &&\r\n        vm.AdminType() != ROLES.ADMINTYPE.QTM\r\n      ) {\r\n        // If we aren't creating items for the first time, our target date\r\n        // shouldn't be updated here.\r\n        return;\r\n      }\r\n      let maxDate = vm.section.Actions.findLastActionTargetDate();\r\n\r\n      maxDate = vm.controls.record.extension.totalExtensionDate(maxDate);\r\n      const valuePair = [[\"ImplementationTargetDate\", maxDate.toISOString()]];\r\n      console.log(valuePair);\r\n      var planId = vm.selectedRecord.ID();\r\n      app.listRefs.Plans.updateListItem(planId, valuePair, m_fnRefresh);\r\n    },\r\n  };\r\n\r\n  self.controls.showSectionByStageKey = function (stage) {\r\n    return ko.pureComputed(function () {\r\n      // Take a stage and compare the current records values to\r\n      // those in stageDescriptions\r\n      if (self.selectedRecord.ProcessStageKey() != stage) {\r\n        return false;\r\n      }\r\n\r\n      if (\r\n        !self.selectedRecord.curUserHasRole(\r\n          stageDescriptions[stage].actionTaker\r\n        )\r\n      ) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  self.controls.showSectionByStageNum = function (stageNum) {\r\n    return ko.pureComputed(function () {\r\n      if (self.selectedRecord.ProcessStageObj().stageNum < stageNum) {\r\n        return false;\r\n      }\r\n      return true;\r\n    });\r\n  };\r\n\r\n  self.controls.rejectStage = function () {\r\n    // const myModal = new bootstrap.Modal(\r\n    //   document.getElementById(\"rejectionInformation\")\r\n    // );\r\n    // myModal.show();\r\n\r\n    const plan = ko.unwrap(self.selectedPlan);\r\n\r\n    const rejection = new Rejection();\r\n\r\n    rejection.Title.Value(plan.Title.Value());\r\n    rejection.Active.Value(true);\r\n    rejection.Rejector.Value(currentUser.Title);\r\n\r\n    const currentStage = plan.ProcessStage.Value();\r\n    rejection.Stage.Value(currentStage);\r\n\r\n    const rejectionId =\r\n      plan.Title.Value() +\r\n      \"-R\" +\r\n      String(self.Rejections().length).padStart(2, \"0\");\r\n\r\n    rejection.RejectionId.Value(rejectionId);\r\n\r\n    const form = FormManager.NewForm({\r\n      entity: rejection,\r\n      view: Rejection.Views.New,\r\n    });\r\n\r\n    const options = {\r\n      title: \"New Rejection\",\r\n      form,\r\n      dialogReturnValueCallback: (result) =>\r\n        self.controls.rejectStageSubmit(result, plan, rejection),\r\n    };\r\n\r\n    ModalDialog.showModalDialog(options);\r\n  };\r\n\r\n  self.controls.rejectStageSubmit = async function (result, plan, rejection) {\r\n    if (result !== SP.UI.DialogResult.OK) {\r\n      return;\r\n    }\r\n    // When the user submits the modal with the reason, create a\r\n    // new rejection, then execute the stages reject function\r\n    let next = null;\r\n\r\n    switch (self.selectedRecord.ProcessStageKey()) {\r\n      case \"ProblemApprovalQSO\":\r\n        next = m_fnRejectProblemQSO;\r\n        break;\r\n      case \"ProblemApprovalQAO\":\r\n        next = m_fnRejectProblemQAO;\r\n        break;\r\n      case \"ProblemApprovalQTM\":\r\n        next = m_fnRejectProblemQTM;\r\n        break;\r\n      case \"ProblemApprovalQTMB\":\r\n        next = m_fnRejectProblemQTMB;\r\n        break;\r\n      case \"PlanApprovalQSO\":\r\n        next = m_fnRejectPlanQSO;\r\n        break;\r\n      case \"PlanApprovalQTMB\":\r\n        next = m_fnRejectPlanQTMB;\r\n        break;\r\n      case \"PlanApprovalQTM\":\r\n        next = m_fnRejectPlanQTM;\r\n        break;\r\n      case \"ImplementationApproval\":\r\n        next = m_fnRejectImplement;\r\n        break;\r\n      case \"EffectivenessApprovalQSO\":\r\n        next = m_fnRejectEffectivenessQSO;\r\n        break;\r\n      case \"EffectivenessApprovalQTM\":\r\n        next = m_fnRejectEffectivenessQTM;\r\n        break;\r\n      case \"EffectivenessApprovalQTMB\":\r\n        next = m_fnRejectEffectivenessQTMB;\r\n        break;\r\n    }\r\n    if (!next) return;\r\n\r\n    const rejectionTask = addTask(tasks.reject(plan.Title.Value()));\r\n    await new Promise(next);\r\n\r\n    await onStageRejectedCallback(plan, rejection);\r\n\r\n    finishTask(rejectionTask);\r\n\r\n    // app.listRefs.Rejections.createListItem(rejectVp, next);\r\n\r\n    // $(\"#rejectionInformation\").modal(\"hide\");\r\n  };\r\n  self.rejectReason = ko.observable();\r\n  self.effectivenessRejectReason = ko.observable();\r\n\r\n  self.controls.stage1 = {\r\n    problemApproveQTM: m_fnApproveProblemQTM,\r\n    problemApproveQTMB: m_fnApproveProblemQTMB,\r\n    problemApproveQSO: m_fnApproveProblemQSO,\r\n    problemApproveQAO: m_fnApproveProblemQAO,\r\n  };\r\n\r\n  self.controls.stage2 = {\r\n    enableSubmitActionPlan: ko.pureComputed(function () {\r\n      if (!self.controls.showSectionByStageKey(\"DevelopingActionPlan\")()) {\r\n        return false;\r\n      }\r\n      if (self.validateStage.stage2.Actions()) {\r\n        return false;\r\n      }\r\n      if (self.validateStage.stage2.RootCause()) {\r\n        return false;\r\n      }\r\n      if (self.validateStage.stage2.RootCauseWhy()) {\r\n        return false;\r\n      }\r\n      if (self.validateStage.stage2.Nonconformity()) {\r\n        return false;\r\n      }\r\n      if (self.validateStage.stage2.ContainmentAction()) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }),\r\n    showSubmitActionPlan: ko.pureComputed(function () {\r\n      return self.selectedRecord.ProcessStageKey() == \"DevelopingActionPlan\";\r\n    }),\r\n    submitActionPlan: function () {\r\n      var valuePair = [\r\n        [\"ProcessStage\", stageDescriptions.PlanApprovalQSO.stage],\r\n        [\"SubmittedDate\", new Date().toISOString()],\r\n      ];\r\n\r\n      app.listRefs.Plans.updateListItem(\r\n        vm.selectedRecord.ID(),\r\n        valuePair,\r\n        onStageApprovedCallback\r\n      );\r\n    },\r\n    planApproveQSO: function () {\r\n      m_fnApprovePlanQSO(self.selectedRecord.ID());\r\n    },\r\n    planRejectQSO: function () {\r\n      m_fnRejectPlanQSO(self.selectedRecord.ID());\r\n    },\r\n    planApproveQTMB: function () {\r\n      m_fnApprovePlanQTMB(self.selectedRecord.ID());\r\n    },\r\n    planRejectQTMB: function () {\r\n      m_fnRejectPlanQTMB(self.selectedRecord.ID());\r\n    },\r\n    planApproveQTM: function () {\r\n      m_fnApprovePlanQTM(self.selectedRecord.ID());\r\n    },\r\n    planRejectQTM: function () {\r\n      m_fnRejectPlanQTM(self.selectedRecord.ID());\r\n    },\r\n  };\r\n\r\n  self.controls.stage3 = {\r\n    targetVerificationDate: new DateField({\r\n      displayName: \"Effectiveness Verification Target Date\",\r\n    }),\r\n    enableImplementingActionPlan: ko.pureComputed(function () {\r\n      // if (!self.controls.stage3.showImplementingActionPlan()) {\r\n      //   return false;\r\n      // }\r\n      if (self.validateStage.stage3.CompleteActions()) {\r\n        return false;\r\n      }\r\n      if (self.validateStage.stage3.VerificationTargetDate()) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }),\r\n    submitImplementActionPlan: function () {\r\n      var valuePair = [\r\n        [\"ProcessStage\", stageDescriptions.ImplementationApproval.stage],\r\n        [\r\n          \"EffectivenessVerificationTargetD\",\r\n          self.controls.stage3.targetVerificationDate.get(),\r\n        ],\r\n        [\"SubmittedImplementDate\", new Date().toISOString()],\r\n      ];\r\n\r\n      app.listRefs.Plans.updateListItem(\r\n        vm.selectedRecord.ID(),\r\n        valuePair,\r\n        onStageApprovedCallback\r\n      );\r\n    },\r\n    implementationApproveQSO: m_fnApproveImplement,\r\n  };\r\n\r\n  self.controls.stage4 = {\r\n    descOrDocWarningClass: function () {\r\n      return self.validateStage.stage4.DescOrDoc()\r\n        ? \"alert-warning\"\r\n        : \"alert-info\";\r\n    },\r\n    enableOfficeImpactBool: function () {\r\n      return (\r\n        vm.selectedRecord.ProcessStageKey() == \"EffectivenessSubmission\" ||\r\n        vm.selectedRecord.ProcessStageKey() == \"EffectivenessSubmissionRejected\"\r\n      );\r\n    },\r\n    enableEffectivenessSubmit: function () {\r\n      if (self.validateStage.stage4.OfficeImpact()) {\r\n        return false;\r\n      }\r\n      // If both effectiveness docs and description fail unable to submit\r\n      if (\r\n        self.validateStage.stage4.EffectivenessDocs() &&\r\n        self.validateStage.stage4.EffectivenessDescription()\r\n      ) {\r\n        return false;\r\n      }\r\n      return true;\r\n    },\r\n    showEffectivenessSubmit: ko.pureComputed(function () {\r\n      if (\r\n        self.selectedRecord.ProcessStageKey() != \"EffectivenessSubmission\" &&\r\n        self.selectedRecord.ProcessStageKey() !=\r\n          \"EffectivenessSubmissionRejected\"\r\n      ) {\r\n        return false;\r\n      }\r\n      if (!self.selectedRecord.curUserHasRole(ROLES.IMPLEMENTOR)) {\r\n        return false;\r\n      }\r\n      return true;\r\n    }),\r\n    submitEffectiveness: function () {\r\n      var valuePair = [\r\n        [\"ProcessStage\", stageDescriptions.EffectivenessApprovalQSO.stage],\r\n        [\"SubmittedEffectivenessDate\", new Date().toISOString()],\r\n      ];\r\n      app.listRefs.Plans.updateListItem(\r\n        vm.selectedRecord.ID(),\r\n        valuePair,\r\n        onStageApprovedCallback\r\n      );\r\n    },\r\n    effectivenessApproveQSO: m_fnApproveEffectivenessQSO,\r\n    effectivenessApproveQTM: m_fnApproveEffectivenessQTM,\r\n    effectivenessApproveQTMB: m_fnApproveEffectivenessQTMB,\r\n  };\r\n\r\n  // Validate, all stages should return false if passed\r\n  self.validateStage = {\r\n    stage1: {\r\n      ProblemResolver: ko.pureComputed(function () {\r\n        return (\r\n          self.selectedRecord.ProblemResolverName.ensuredPeople().length === 0\r\n        );\r\n      }),\r\n    },\r\n    stage2: {\r\n      Actions: ko.computed(function () {\r\n        return !self.ActionListItems().length;\r\n      }),\r\n      RootCause: ko.computed(function () {\r\n        return (\r\n          !self.selectedRecord.RootCauseDetermination() &&\r\n          self.selectedRecord.RecordType() == \"CAR\"\r\n        );\r\n      }),\r\n      RootCauseWhy: ko.computed(function () {\r\n        //if (self.RootCauseWhy() != )\r\n        if (self.selectedRecord.RecordType() == \"CAP\") {\r\n          return false;\r\n        } else if (!self.RootCauseWhy().length) {\r\n          return true;\r\n        } else {\r\n          return self.RootCauseWhy().length < 1;\r\n        }\r\n      }),\r\n      Nonconformity: ko.computed(function () {\r\n        return (\r\n          !self.selectedRecord.SimilarNoncomformityDesc() &&\r\n          self.selectedRecord.RecordType() == \"CAR\"\r\n        );\r\n      }),\r\n      ContainmentAction: ko.computed(function () {\r\n        return (\r\n          !self.selectedRecord.ContainmentAction() &&\r\n          self.selectedRecord.RecordType() == \"CAR\"\r\n        );\r\n      }),\r\n      AddProblemResolver: ko.computed(function () {\r\n        return (\r\n          self.selectedRecord.RecordType() == \"CAR\" &&\r\n          !self.selectedRecord.ProblemResolverName.ensuredPeople().length &&\r\n          [\r\n            \"ProblemApprovalQSO\",\r\n            \"ProblemApprovalQAO\",\r\n            \"PlanApprovalQSO\",\r\n          ].indexOf(self.selectedRecord.ProcessStageKey()) >= 0\r\n        );\r\n      }),\r\n    },\r\n    stage3: {\r\n      CompleteActions: ko.pureComputed(function () {\r\n        return self.NumOpenActions() > 0;\r\n      }),\r\n      VerificationTargetDate: ko.pureComputed(function () {\r\n        return !self.controls.stage3.targetVerificationDate.Value();\r\n      }),\r\n      AddSupportDoc: ko.pureComputed(function () {\r\n        return !self.SupportDocuments().length;\r\n      }),\r\n    },\r\n    stage4: {\r\n      EffectivenessDocs: ko.pureComputed(function () {\r\n        return self.EffectivenessDocuments().length == 0;\r\n      }),\r\n      EffectivenessDescription: ko.pureComputed(function () {\r\n        return !self.selectedRecord.EffectivenessDescription();\r\n      }),\r\n      DescOrDoc: ko.pureComputed(function () {\r\n        // See if either the description or document req is satisfied\r\n        return (\r\n          self.validateStage.stage4.EffectivenessDocs() &&\r\n          self.validateStage.stage4.EffectivenessDescription()\r\n        );\r\n      }),\r\n      OfficeImpact: ko.pureComputed(function () {\r\n        return !self.selectedRecord.OfficeImpactDesc();\r\n      }),\r\n    },\r\n  };\r\n\r\n  /******************************** Rejection Alert Logic ***************************/\r\n\r\n  self.Rejections = ko.observableArray();\r\n\r\n  /******************************** Action Tables Logic ***************************/\r\n\r\n  /******************************** CAP/CAR Tables Logic ***************************/\r\n  self.highlightOverdue = function (record) {\r\n    const targetDate =\r\n      record.NextTargetDate !== \"undefined\" && record.NextTargetDate\r\n        ? new Date(record.NextTargetDate)\r\n        : null;\r\n\r\n    let today = new Date(new Date().toDateString());\r\n    //today.setDate(today.getDate() - 1)\r\n    let twoWeeks = new Date(\r\n      today.getFullYear(),\r\n      today.getMonth(),\r\n      today.getDate() + 14\r\n    );\r\n\r\n    if (!targetDate || record.Active == \"0\") {\r\n      return \"white\";\r\n    } else if (targetDate < today) {\r\n      return \"#d72626\";\r\n    } else if (targetDate < twoWeeks) {\r\n      return \"#f3e44b\";\r\n    }\r\n  };\r\n\r\n  self.formatNextTargetDate = function (record) {\r\n    if (record == undefined) {\r\n      return \"N/A\";\r\n    }\r\n    if (record.Active == \"0\") {\r\n      return \"N/A\";\r\n    }\r\n    if (typeof record.NextTargetDate !== \"undefined\" && record.NextTargetDate) {\r\n      return new Date(record.NextTargetDate).format(\"yyyy-MM-dd\").toString();\r\n    }\r\n\r\n    return \"N/A\";\r\n  };\r\n\r\n  /******************************** Document Tables Logic ***************************/\r\n  self.formatDocDownloadLink = function (link) {\r\n    return \"../_layouts/download.aspx?SourceUrl=\" + link;\r\n  };\r\n\r\n  /******************************** Lock Editing Logic ***************************/\r\n\r\n  self.onNewPlanCreated = function (result, args) {\r\n    if (result !== SP.UI.DialogResult.OK) {\r\n      return;\r\n    }\r\n    const refreshTask = addTask(tasks.refreshPlans);\r\n    const userId = vm.currentUserObj.id();\r\n    app.listRefs.Plans.getListItems(\"\", function (items) {\r\n      vm.allRecordsArray(items);\r\n\r\n      // Update Title\r\n      const newPlan = items.findLast(\r\n        (item) => item.Author.get_lookupId() == userId\r\n      );\r\n      const newTitle = getNextTitleByType(newPlan.RecordType);\r\n      if (newTitle != newPlan.Title) {\r\n        newPlan.Title = newTitle;\r\n        app.listRefs.Plans.updateListItem(\r\n          newPlan.ID,\r\n          [[\"Title\", newTitle]],\r\n          async () => {\r\n            // Send Notification\r\n            const notificationTask = addTask(tasks.notification());\r\n            const plan = await appContext.Plans.FindById(newPlan.ID);\r\n            vm.selectedPlan(plan);\r\n            await stageApprovedNotification(plan);\r\n            finishTask(notificationTask);\r\n          }\r\n        );\r\n      }\r\n      vm.selectedTitle(newPlan.Title);\r\n      vm.tabs.selectTab(vm.tabOpts.detail);\r\n\r\n      finishTask(refreshTask);\r\n      // m_fnForward();\r\n    });\r\n  };\r\n}\r\n\r\nclass App {\r\n  constructor() {\r\n    const app = new CAPViewModel();\r\n    Object.assign(this, app);\r\n  }\r\n\r\n  appLoadTime = ko.observable();\r\n\r\n  clickNewPlan() {\r\n    const plan = new Plan();\r\n\r\n    // const planEditForm = FormManager.NewForm(plan, Plan.Views.New);\r\n\r\n    const newPlanForm = new NewPlanForm({});\r\n\r\n    const options = {\r\n      title: \"Create a new CAR or CAP\",\r\n      form: newPlanForm,\r\n      dialogReturnValueCallback: this.onNewPlanCreated,\r\n    };\r\n\r\n    ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  async clickSendStageNotification() {\r\n    const plan = ko.unwrap(vm.selectedPlan);\r\n    await stageApprovedNotification(plan);\r\n  }\r\n\r\n  async clickEditPlan() {\r\n    const plan = await appContext.Plans.FindById();\r\n  }\r\n\r\n  /******************************** Application Logic ***************************/\r\n  async init() {\r\n    stores: {\r\n      const businessOfficesPromise = appContext.BusinessOffices.ToList().then(\r\n        (offices) => businessOfficeStore(offices.sort(sortByTitle))\r\n      );\r\n\r\n      const recordSourcesPromise = appContext.RecordSources.ToList().then(\r\n        (records) => sourcesStore(records.sort(sortByTitle))\r\n      );\r\n\r\n      await Promise.all([businessOfficesPromise, recordSourcesPromise]);\r\n    }\r\n  }\r\n\r\n  static async Create() {\r\n    const app = new App();\r\n    await app.init();\r\n    return app;\r\n  }\r\n}\r\n\r\nwindow.vm = {};\r\n\r\nif (document.readyState === \"ready\" || document.readyState === \"complete\") {\r\n  initApp();\r\n} else {\r\n  document.onreadystatechange = () => {\r\n    if (document.readyState === \"complete\" || document.readyState === \"ready\") {\r\n      ExecuteOrDelayUntilScriptLoaded(function () {\r\n        SP.SOD.executeFunc(\"sp.js\", \"SP.ClientContext\", initApp);\r\n      }, \"sp.js\");\r\n    }\r\n  };\r\n}\r\n"],
  "mappings": "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",
  "names": ["template", "People", "ValidationError", "ValidationError", "editTemplate", "viewTemplate", "editTemplate", "viewTemplate", "editTemplate", "editTemplate", "editTemplate", "viewTemplate", "editTemplate", "data", "editTemplate", "editTemplate", "viewTemplate", "editTemplate", "appContext", "reject", "entity", "sal", "reject", "sal", "oRoleDefinitions", "reject", "oRoleDefinition", "siteGroups", "sal", "oRoleDefinition", "data", "oGroup", "reject", "reject", "sal", "group", "data", "currCtx", "web", "self", "id", "bindings", "oListItem", "folderArr", "idx", "folderUrl", "success", "args", "reject", "error", "People", "i", "People", "error", "module", "html", "template", "html", "ROLES", "ROLES", "location", "error", "set", "id", "reject", "html", "html", "componentName", "html", "componentName", "template", "html", "html", "template", "People", "html", "loc", "ValidationError", "location", "html", "location", "html", "location", "html", "location", "html", "location", "html", "location", "html", "location", "ROLES", "html", "ROLES", "ROLES", "componentName", "template", "html", "componentName", "location", "template", "html", "componentName", "template", "html", "html", "template", "id", "ROLES", "plan", "ROLES", "i", "ROLES", "self", "record", "sortByTitle", "id", "app"]
}
