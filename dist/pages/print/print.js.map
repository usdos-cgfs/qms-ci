{
  "version": 3,
  "sources": ["../../../src/pages/print/print.js"],
  "sourcesContent": ["var vm = {};\r\n\r\nvar Report = Report || {};\r\nvar Common = Common || {};\r\nvar sal = sal || {};\r\n\r\nReport.Init = async function () {\r\n  initSal();\r\n  Common.Init();\r\n  Report.Report = await Report.NewReport();\r\n};\r\n\r\nReport.NewReport = async function () {\r\n  console.log(\"new report\");\r\n\r\n  var app = this;\r\n\r\n  function initStaticListRefs() {\r\n    app.listRefs = {};\r\n    app.listRefs.Plans = new sal.NewSPList(CIItemListDef);\r\n    app.listRefs.Actions = new sal.NewSPList(ActionListDef);\r\n    app.listRefs.Whys = new sal.NewSPList(WhyListDef);\r\n    app.listRefs.Rejections = new sal.NewSPList(RejectionListDef);\r\n    app.listRefs.BusinessOffices = new sal.NewSPList(BusinessOfficeListDef);\r\n    app.listRefs.SupportDocs = new sal.NewSPList(DocumentListDef);\r\n    app.listRefs.TempQOs = new sal.NewSPList(TempQOListDef);\r\n  }\r\n\r\n  initStaticListRefs();\r\n\r\n  function ViewModel() {\r\n    var self = this;\r\n    self.recordExists = ko.observable(true);\r\n\r\n    self.selectedTitle = ko.observable();\r\n    self.selectedRecord =\r\n      Common.Utilities.observableObjectFromListDef(CIItemListDef);\r\n\r\n    self.actions = ko.observableArray();\r\n    self.whys = ko.observableArray();\r\n    self.rejections = ko.observableArray();\r\n    self.selectedDocuments = ko.observableArray();\r\n    self.supportDocuments = ko.pureComputed(function () {\r\n      return self.selectedDocuments().filter(function (doc) {\r\n        return doc.DocType == \"Support\";\r\n      });\r\n    });\r\n    self.effectivenessDocuments = ko.pureComputed(function () {\r\n      return self.selectedDocuments().filter(function (doc) {\r\n        return doc.DocType == \"Effectiveness\";\r\n      });\r\n    });\r\n    //self.rejections = ko.observableArray();\r\n  }\r\n  vm = new ViewModel();\r\n\r\n  async function loadRecord(recordTitle) {\r\n    var camlQ =\r\n      \"<View><Query><Where><Eq>\" +\r\n      \"<FieldRef Name='Title'/><Value Type='Text'>\" +\r\n      recordTitle +\r\n      \"</Value>\" +\r\n      \"</Eq></Where></Query></View>\";\r\n\r\n    var results = await app.listRefs.Plans.getListItemsAsync(camlQ);\r\n    if (results.length) {\r\n      var selectedRecordObj = results[0];\r\n      Common.Utilities.setValuePairs(\r\n        CIItemListDef,\r\n        vm.selectedRecord,\r\n        selectedRecordObj\r\n      );\r\n    } else {\r\n      alert(\"Record not found!\");\r\n      vm.recordExists(false);\r\n      return;\r\n    }\r\n\r\n    app.listRefs.Actions.getListItems(camlQ, vm.actions);\r\n    app.listRefs.Rejections.getListItems(camlQ, vm.rejections);\r\n\r\n    var docsCamlQ =\r\n      \"<View Scope='RecursiveAll'><Query><Where><Eq><FieldRef Name='Record'/><Value Type='Text'>\" +\r\n      recordTitle +\r\n      \"</Value></Eq></Where><OrderBy><FieldRef Name='Title' Ascending='FALSE'/></OrderBy></Query></View>\";\r\n\r\n    app.listRefs.SupportDocs.getListItems(docsCamlQ, vm.selectedDocuments);\r\n\r\n    if (vm.selectedRecord.RecordType() == \"CAR\") {\r\n      var camlQ =\r\n        \"<View><Query><Where><Contains><FieldRef Name='Title'/><Value Type='Text'>\" +\r\n        recordTitle +\r\n        \"</Value></Contains></Where><OrderBy><FieldRef Name='Number' Ascending='TRUE'/></OrderBy></Query></View>\";\r\n\r\n      app.listRefs.Whys.getListItems(camlQ, vm.whys);\r\n    }\r\n  }\r\n\r\n  function initialize() {\r\n    var capid = Common.Utilities.getUrlParam(\"capid\");\r\n    vm.selectedTitle(capid);\r\n  }\r\n  initialize();\r\n  await loadRecord(vm.selectedTitle());\r\n\r\n  ko.applyBindings(vm);\r\n};\r\n\r\n$(document).ready(function () {\r\n  SP.SOD.executeFunc(\r\n    \"sp.js\",\r\n    \"SP.ClientContext\",\r\n    ExecuteOrDelayUntilScriptLoaded(Report.Init, \"SP.JS\")\r\n  );\r\n});\r\n"],
  "mappings": ";AAAA,IAAI,KAAK,CAAC;AAEV,IAAI,SAAS,UAAU,CAAC;AACxB,IAAI,SAAS,UAAU,CAAC;AACxB,IAAI,MAAM,OAAO,CAAC;AAElB,OAAO,OAAO,iBAAkB;AAC9B,UAAQ;AACR,SAAO,KAAK;AACZ,SAAO,SAAS,MAAM,OAAO,UAAU;AACzC;AAEA,OAAO,YAAY,iBAAkB;AACnC,UAAQ,IAAI,YAAY;AAExB,MAAI,MAAM;AAEV,WAAS,qBAAqB;AAC5B,QAAI,WAAW,CAAC;AAChB,QAAI,SAAS,QAAQ,IAAI,IAAI,UAAU,aAAa;AACpD,QAAI,SAAS,UAAU,IAAI,IAAI,UAAU,aAAa;AACtD,QAAI,SAAS,OAAO,IAAI,IAAI,UAAU,UAAU;AAChD,QAAI,SAAS,aAAa,IAAI,IAAI,UAAU,gBAAgB;AAC5D,QAAI,SAAS,kBAAkB,IAAI,IAAI,UAAU,qBAAqB;AACtE,QAAI,SAAS,cAAc,IAAI,IAAI,UAAU,eAAe;AAC5D,QAAI,SAAS,UAAU,IAAI,IAAI,UAAU,aAAa;AAAA,EACxD;AAEA,qBAAmB;AAEnB,WAAS,YAAY;AACnB,QAAI,OAAO;AACX,SAAK,eAAe,GAAG,WAAW,IAAI;AAEtC,SAAK,gBAAgB,GAAG,WAAW;AACnC,SAAK,iBACH,OAAO,UAAU,4BAA4B,aAAa;AAE5D,SAAK,UAAU,GAAG,gBAAgB;AAClC,SAAK,OAAO,GAAG,gBAAgB;AAC/B,SAAK,aAAa,GAAG,gBAAgB;AACrC,SAAK,oBAAoB,GAAG,gBAAgB;AAC5C,SAAK,mBAAmB,GAAG,aAAa,WAAY;AAClD,aAAO,KAAK,kBAAkB,EAAE,OAAO,SAAU,KAAK;AACpD,eAAO,IAAI,WAAW;AAAA,MACxB,CAAC;AAAA,IACH,CAAC;AACD,SAAK,yBAAyB,GAAG,aAAa,WAAY;AACxD,aAAO,KAAK,kBAAkB,EAAE,OAAO,SAAU,KAAK;AACpD,eAAO,IAAI,WAAW;AAAA,MACxB,CAAC;AAAA,IACH,CAAC;AAAA,EAEH;AACA,OAAK,IAAI,UAAU;AAEnB,iBAAe,WAAW,aAAa;AACrC,QAAI,QACF,wEAEA,cACA;AAGF,QAAI,UAAU,MAAM,IAAI,SAAS,MAAM,kBAAkB,KAAK;AAC9D,QAAI,QAAQ,QAAQ;AAClB,UAAI,oBAAoB,QAAQ,CAAC;AACjC,aAAO,UAAU;AAAA,QACf;AAAA,QACA,GAAG;AAAA,QACH;AAAA,MACF;AAAA,IACF,OAAO;AACL,YAAM,mBAAmB;AACzB,SAAG,aAAa,KAAK;AACrB;AAAA,IACF;AAEA,QAAI,SAAS,QAAQ,aAAa,OAAO,GAAG,OAAO;AACnD,QAAI,SAAS,WAAW,aAAa,OAAO,GAAG,UAAU;AAEzD,QAAI,YACF,8FACA,cACA;AAEF,QAAI,SAAS,YAAY,aAAa,WAAW,GAAG,iBAAiB;AAErE,QAAI,GAAG,eAAe,WAAW,KAAK,OAAO;AAC3C,UAAI,QACF,8EACA,cACA;AAEF,UAAI,SAAS,KAAK,aAAa,OAAO,GAAG,IAAI;AAAA,IAC/C;AAAA,EACF;AAEA,WAAS,aAAa;AACpB,QAAI,QAAQ,OAAO,UAAU,YAAY,OAAO;AAChD,OAAG,cAAc,KAAK;AAAA,EACxB;AACA,aAAW;AACX,QAAM,WAAW,GAAG,cAAc,CAAC;AAEnC,KAAG,cAAc,EAAE;AACrB;AAEA,EAAE,QAAQ,EAAE,MAAM,WAAY;AAC5B,KAAG,IAAI;AAAA,IACL;AAAA,IACA;AAAA,IACA,gCAAgC,OAAO,MAAM,OAAO;AAAA,EACtD;AACF,CAAC;",
  "names": []
}
