{
  "version": 3,
  "sources": ["../../../src/constants.js", "../../../src/sal/primitives/validation_error.js", "../../../src/sal/fields/BaseField.js", "../../../src/sal/components/fields/BaseFieldModule.js", "../../../src/sal/components/fields/BlobModule.js", "../../../src/sal/components/fields/CheckboxModule.js", "../../../src/sal/components/fields/DateModule.js", "../../../src/sal/components/fields/LookupModule.js", "../../../src/sal/components/fields/PeopleModule.js", "../../../src/sal/components/fields/SearchSelectModule.js", "../../../src/sal/components/fields/SelectModule.js", "../../../src/sal/components/fields/TextAreaModule.js", "../../../src/sal/components/fields/TextModule.js", "../../../src/sal/fields/CheckboxField.js", "../../../src/sal/fields/DateField.js", "../../../src/sal/fields/LookupField.js", "../../../src/sal/infrastructure/entity_utilities.js", "../../../src/sal/entities/People.js", "../../../src/sal/primitives/entity.js", "../../../src/sal/primitives/constrained_entity.js", "../../../src/sal/entities/SitePage.js", "../../../src/env.js", "../../../src/sal/infrastructure/knockout_extensions.js", "../../../src/sal/infrastructure/register_components.js", "../../../src/sal/infrastructure/sal.js", "../../../src/sal/infrastructure/authorization.js", "../../../src/sal/fields/PeopleField.js", "../../../src/sal/fields/SelectField.js", "../../../src/sal/fields/TextAreaField.js", "../../../src/sal/fields/TextField.js", "../../../src/entities/action.js", "../../../src/infrastructure/store.js", "../../../src/entities/plan.js", "../../../src/entities/business-office.js", "../../../src/entities/notification.js", "../../../src/entities/record-source.js", "../../../src/entities/rejection.js", "../../../src/entities/root-cause-why.js", "../../../src/entities/support-doc.js", "../../../src/sal/shared/result.js", "../../../src/sal/orm.js", "../../../src/infrastructure/app-db-context.js", "../../../src/pages/migrations/migrations.js"],
  "sourcesContent": ["export const html = String.raw;\r\n\r\nexport const ROLES = {\r\n  ADMINTYPE: {\r\n    USER: \"\",\r\n    QO: \"qo\",\r\n    QTM: \"qtm\",\r\n    QTMB: \"qtm-b\",\r\n  },\r\n  SUBMITTER: \"submitter\",\r\n  COORDINATOR: \"coordinator\",\r\n  IMPLEMENTOR: \"implementor\", // This person is able push the record forward\r\n  ACTIONRESPONSIBLEPERSON: \"actionresponsibleperson\",\r\n  QSO: \"qso\",\r\n  QAO: \"qao\",\r\n};\r\n\r\nexport const PLANTYPE = {\r\n  CAP: \"CAP\",\r\n  CAR: \"CAR\",\r\n};\r\n\r\nexport const SUPPORTINGDOCUMENTTYPES = {\r\n  SUPPORT: \"Support\",\r\n  EFFECTIVENESS: \"Effectiveness\",\r\n};\r\n\r\nexport const LOCATION = {\r\n  ALL: \"All\",\r\n  CHARLESTON: \"Charleston\",\r\n  BANGKOK: \"Bangkok\",\r\n  WASHINGTON: \"Washington\",\r\n  PARIS: \"Paris\",\r\n  SOFIA: \"Sofia\",\r\n  MANILA: \"Manila\",\r\n};\r\n\r\nexport const ACTIONSTATES = {\r\n  PLANAPPROVAL: \"Pending Plan Approval\",\r\n  INPROGRESS: \"In progress\",\r\n  COMPLETED: \"Completed\",\r\n  COMPLETEDAPPROVAL: \"Completed: Requires Approval\",\r\n  QSOAPPROVAL: \"Requires Approval QSO\",\r\n  QAOAPPROVAL: \"Requires Approval QAO\",\r\n  QTMAPPROVAL: \"Requires Approval QTM\",\r\n};\r\n\r\nexport const EFFECTIVENESSREASONS = {\r\n  NOTEFFECTIVE: \"Not Effective\",\r\n  LACKOFEVIDENCE: \"Lack of Evidence\",\r\n};\r\n\r\nexport const SITEROLEGROUPS = {\r\n  USER: {\r\n    GROUPNAME: \"Continuous Improvement Visitors\",\r\n    DISPLAYNAME: \"USER\",\r\n    ROLE: \"\",\r\n  },\r\n  QOS: { GROUPNAME: \"QOs\", DISPLAYNAME: \"QSO/QAO\", ROLE: \"qo\" },\r\n  QOSTEMP: { GROUPNAME: \"QOsTemp\", DISPLAYNAME: \"QSOs/QAOs\", ROLE: \"qo\" },\r\n  QTM: { GROUPNAME: \"QTM\", DISPLAYNAME: \"QTM\", ROLE: \"qtm\" },\r\n  QTMB: { GROUPNAME: \"QTM B\", DISPLAYNAME: \"QTM B\", ROLE: \"qtm-b\" },\r\n};\r\n\r\nexport const stageDescriptions = {\r\n  Editing: {\r\n    stage: \"Editing\",\r\n    description: \"CAR has been rejected by Quality Owner, to be closed by QTM.\",\r\n    stageNum: 1,\r\n    progress: \"5%\",\r\n  },\r\n  ProblemApprovalQTMB: {\r\n    actionTaker: ROLES.ADMINTYPE.QTMB,\r\n    stage: \"Pending QTM-B Problem Approval\",\r\n    description: \"CAR originated in CGFS-B, problem must be approved by QTM-B.\",\r\n    stageNum: 1,\r\n    progress: \"5%\",\r\n    next: function () {\r\n      return \"ProblemApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      return \"Editing\";\r\n    },\r\n  },\r\n  ProblemApprovalQTM: {\r\n    actionTaker: ROLES.ADMINTYPE.QTM,\r\n    stage: \"Pending QTM Problem Approval\",\r\n    description: \"CAR problem must be approved by QTM.\",\r\n    stageNum: 1,\r\n    progress: \"10%\",\r\n    next: function () {\r\n      return \"ProblemApprovalQSO\";\r\n    },\r\n    onReject: function () {\r\n      return \"Editing\";\r\n    },\r\n  },\r\n  ProblemApprovalQSO: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Problem Approval\",\r\n    description: \"CAR problem must be approved by QSO\",\r\n    stageNum: 1,\r\n    progress: \"15%\",\r\n    next: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n    onReject: function () {\r\n      return \"ProblemApprovalQAO\";\r\n    },\r\n  },\r\n  ProblemApprovalQAO: {\r\n    actionTaker: ROLES.QAO,\r\n    stage: \"Pending QAO Problem Approval\",\r\n    description: \"CAR rejected by QSO, problem must be approved by QAO\",\r\n    stageNum: 1,\r\n    progress: \"20%\",\r\n    next: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n    onReject: function () {\r\n      return \"Editing\";\r\n    },\r\n  },\r\n  DevelopingActionPlan: {\r\n    actionTaker: ROLES.IMPLEMENTOR,\r\n    stage: \"Developing Action Plan\",\r\n    description:\r\n      \"Initiator or CAR/CAP Coordinator must create an action plan. Add at least one action to continue.\",\r\n    stageNum: 2,\r\n    progress: \"25%\",\r\n    next: function () {\r\n      return \"PlanApprovalQSO\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  PlanApprovalQSO: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Plan Approval\",\r\n    description: \"Quality Owner must approve the action plan.\",\r\n    stageNum: 2,\r\n    progress: \"33%\",\r\n    next: function () {\r\n      if (vm.selectedRecord.CGFSLocation() == LOCATIONS.BANGKOK) {\r\n        return \"PlanApprovalQTMB\";\r\n      }\r\n      return \"PlanApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  PlanApprovalQSOAction: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Plan Approval: Action\",\r\n    description:\r\n      \"An action has been edited, the quality owner must approve it.\",\r\n    stageNum: 2,\r\n    progress: \"33%\",\r\n    next: function () {\r\n      if (vm.selectedRecord.CGFSLocation() == LOCATIONS.BANGKOK) {\r\n        return \"PlanApprovalQTMB\";\r\n      }\r\n      return \"PlanApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  PlanApprovalQTMB: {\r\n    actionTaker: ROLES.ADMINTYPE.QTMB,\r\n    stage: \"Pending QTM-B Plan Approval\",\r\n    description: \"QTM-B must approve the action plan.\",\r\n    stageNum: 2,\r\n    progress: \"40%\",\r\n    next: function () {\r\n      return \"PlanApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  PlanApprovalQTM: {\r\n    actionTaker: ROLES.ADMINTYPE.QTM,\r\n    stage: \"Pending QTM Plan Approval\",\r\n    description: \"QTM must approve the action plan.\",\r\n    stageNum: 2,\r\n    progress: \"40%\",\r\n    next: function () {\r\n      return \"ImplementingActionPlan\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  ImplementingActionPlan: {\r\n    actionTaker: ROLES.IMPLEMENTOR,\r\n    stage: \"Implementing Action Plan\",\r\n    description:\r\n      \"Responsible party must complete action items.  When all actions are completed, CAR/CAP Coordinator proposes Target Verification Date to move to Stage 4.\",\r\n    stageNum: 3,\r\n    progress: \"50%\",\r\n    next: function () {\r\n      return \"ImplementationApproval\";\r\n    },\r\n    onReject: function () {\r\n      return \"DevelopingActionPlan\";\r\n    },\r\n  },\r\n  ImplementationApproval: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Implementation Approval\",\r\n    description:\r\n      \"Quality Owner must sign off on completion of action plan and effectiveness verification target date.\",\r\n    stageNum: 3,\r\n    progress: \"63%\",\r\n    next: function () {\r\n      return \"EffectivenessSubmission\";\r\n    },\r\n    onReject: function () {\r\n      return \"ImplementingActionPlan\";\r\n    },\r\n  },\r\n  EffectivenessSubmission: {\r\n    actionTaker: ROLES.IMPLEMENTOR,\r\n    stage: \"Pending Effectiveness Submission\",\r\n    description:\r\n      \"The user must provide proof of effectiveness and submit this record.\",\r\n    stageNum: 4,\r\n    progress: \"75%\",\r\n    next: function () {\r\n      return \"EffectivenessApprovalQSO\";\r\n    },\r\n    onReject: function () {\r\n      return \"ImplementingActionPlan\";\r\n    },\r\n  },\r\n  EffectivenessSubmissionRejected: {\r\n    actionTaker: ROLES.IMPLEMENTOR,\r\n    stage: \"Pending Effectiveness Submission: Rejected\",\r\n    description:\r\n      \"The user must provide additional proof of effectiveness and re-submit this record.\",\r\n    stageNum: 4,\r\n    progress: \"75%\",\r\n  },\r\n  EffectivenessApprovalQSO: {\r\n    actionTaker: ROLES.QSO,\r\n    stage: \"Pending QSO Effectiveness Approval\",\r\n    description: \"The Quality Owner must approve the proof of effectiveness.\",\r\n    stageNum: 4,\r\n    progress: \"80%\",\r\n    next: function () {\r\n      if (vm.selectedRecord.CGFSLocation() == LOCATIONS.BANGKOK) {\r\n        return \"EffectivenessApprovalQTMB\";\r\n      }\r\n      return \"EffectivenessApprovalQTM\";\r\n    },\r\n    onReject: function () {\r\n      var rejectReason = $(\"#selectEffectivenessRejectReason\").val();\r\n\r\n      switch (rejectReason) {\r\n        case \"Lack of Evidence\":\r\n          return \"EffectivenessSubmissionRejected\";\r\n        case \"Not Effective\":\r\n          return \"DevelopingActionPlan\";\r\n      }\r\n    },\r\n  },\r\n  EffectivenessApprovalQTMB: {\r\n    actionTaker: ROLES.ADMINTYPE.QTMB,\r\n    stage: \"Pending QTM-B Effectiveness Approval\",\r\n    description:\r\n      \"This record originated in Bangkok, and effectiveness must be approved at QTM-B.\",\r\n    stageNum: 4,\r\n    progress: \"85%\",\r\n  },\r\n  EffectivenessApprovalQTM: {\r\n    actionTaker: ROLES.ADMINTYPE.QTM,\r\n    stage: \"Pending QTM Effectiveness Approval\",\r\n    description: \"The QTM must approve the proof of effectiveness.\",\r\n    stageNum: 4,\r\n    progress: \"90%\",\r\n  },\r\n  ClosedAccepted: {\r\n    stage: \"Closed: Accepted\",\r\n    description:\r\n      \"This action plan has been completed and the verification accepted.\",\r\n    stageNum: 5,\r\n    progress: \"100%\",\r\n  },\r\n  ClosedRejected: {\r\n    stage: \"Closed: Rejected\",\r\n    description: \"This action plan has been rejected by the QTM.\",\r\n    stageNum: 5,\r\n    progress: \"100%\",\r\n  },\r\n  ClosedRecalled: {\r\n    stage: \"Closed: Closed by Submitter\",\r\n    description: \"This action plan has been closed by the submitter.\",\r\n    stageNum: 5,\r\n    progress: \"100%\",\r\n  },\r\n};\r\n", "export class ValidationError {\r\n  constructor(source, type, description) {\r\n    this.source = source;\r\n    this.type = type;\r\n    this.description = description;\r\n  }\r\n}\r\n", "import { ValidationError } from \"../primitives/validation_error.js\";\r\n\r\nexport class BaseField {\r\n  constructor({\r\n    displayName,\r\n    systemName,\r\n    instructions = null,\r\n    isRequired = false,\r\n    defaultValue,\r\n    width,\r\n    classList = [],\r\n    isVisible = true,\r\n    isEditable = true,\r\n  }) {\r\n    this.displayName = displayName;\r\n    this.systemName = systemName;\r\n    this.instructions = instructions;\r\n    this.isRequired = isRequired;\r\n\r\n    this.Visible = ko.pureComputed(() => {\r\n      return ko.unwrap(isVisible);\r\n    });\r\n\r\n    this.Enable = ko.pureComputed(() => {\r\n      return ko.unwrap(isEditable);\r\n    });\r\n\r\n    this.width = width ? \"col-md-\" + width : \"col-md-6\";\r\n    this.classList = classList;\r\n\r\n    if (defaultValue) this.Value(defaultValue);\r\n\r\n    this.addFieldRequirement(isRequiredValidationRequirement(this));\r\n  }\r\n\r\n  Value = ko.observable();\r\n\r\n  get = () => this.Value();\r\n  set = (val) => this.Value(val);\r\n  clear = () => {\r\n    if (ko.isObservableArray(this.Value)) this.Value([]);\r\n    else this.Value(null);\r\n  };\r\n\r\n  toString = ko.pureComputed(() => this.Value());\r\n\r\n  toJSON = () => this.Value();\r\n  fromJSON = (val) => this.Value(val);\r\n\r\n  validate = (showErrors = true) => {\r\n    this.ShowErrors(showErrors);\r\n    return this.Errors();\r\n  };\r\n\r\n  _fieldValidationRequirements = ko.observableArray();\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.Visible()) return [];\r\n    const errors = this._fieldValidationRequirements()\r\n      .filter((req) => req.requirement())\r\n      .map((req) => req.error);\r\n\r\n    return errors;\r\n  });\r\n\r\n  addFieldRequirement = (requirement) =>\r\n    this._fieldValidationRequirements.push(requirement);\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n}\r\n\r\nfunction isRequiredValidationRequirement(field) {\r\n  return {\r\n    requirement: ko.pureComputed(() => {\r\n      // Return true if field fails validation\r\n      const isRequired = ko.unwrap(field.isRequired);\r\n      if (!isRequired) return false;\r\n\r\n      const value = ko.unwrap(field.Value);\r\n      if (value?.constructor == Array) return !value.length;\r\n      return value === null || value === undefined;\r\n    }),\r\n    error: new ValidationError(\r\n      \"text-field\",\r\n      \"required-field\",\r\n      `${ko.utils.unwrapObservable(field.displayName)} is required!`\r\n    ),\r\n  };\r\n}\r\n", "// Hint: use the es6-string-html VS Code module to make template literals easier to read\r\nexport const html = String.raw;\r\n\r\nexport function registerFieldComponents(constructor) {\r\n  ko.components.register(constructor.edit, {\r\n    template: constructor.editTemplate,\r\n    viewModel: constructor,\r\n  });\r\n\r\n  ko.components.register(constructor.view, {\r\n    template: constructor.viewTemplate,\r\n    viewModel: constructor,\r\n  });\r\n}\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <div data-bind=\"text: toString()\"></div>\r\n`;\r\n\r\nconst editTemplate = html`<div>Uh oh!</div>`;\r\n\r\nexport class BaseFieldModule {\r\n  constructor(params) {\r\n    Object.assign(this, params);\r\n  }\r\n\r\n  _id;\r\n  getUniqueId = () => {\r\n    if (!this._id) {\r\n      this._id = \"field-\" + Math.floor(Math.random() * 10000);\r\n    }\r\n    return this._id;\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return [];\r\n    if (!this.isRequired) return [];\r\n    return this.Value()\r\n      ? []\r\n      : [\r\n          new ValidationError(\r\n            \"text-field\",\r\n            \"required-field\",\r\n            this.displayName + ` is required!`\r\n          ),\r\n        ];\r\n  });\r\n\r\n  ShowErrors = ko.observable(false);\r\n\r\n  ValidationClass = ko.pureComputed(() => {\r\n    if (!this.ShowErrors()) return;\r\n    return this.Errors().length ? \"is-invalid\" : \"is-valid\";\r\n  });\r\n\r\n  static viewTemplate = viewTemplate;\r\n\r\n  static editTemplate = editTemplate;\r\n}\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"component: {name: Value()?.components.edit, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n        <th>Actions</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString\"></td>\r\n        <!-- /ko -->\r\n        <td>\r\n          <i\r\n            title=\"remove item\"\r\n            class=\"fa-solid fa-trash pointer\"\r\n            data-bind=\"click: $parent.remove.bind(row)\"\r\n          ></i>\r\n        </td>\r\n      </tr>\r\n      <!-- /ko -->\r\n      <tr>\r\n        <!-- ko foreach: NewItem()?.FormFields -->\r\n        <td>\r\n          <div\r\n            data-bind=\"component: {name: components.edit, params: $data}\"\r\n          ></div>\r\n        </td>\r\n        <!-- /ko -->\r\n        <td class=\"align-bottom\">\r\n          <button\r\n            title=\"add and new\"\r\n            type=\"button\"\r\n            data-bind=\"click: submit\"\r\n            class=\"btn btn-success\"\r\n          >\r\n            Add +\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <h5>\r\n    <span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </h5>\r\n  <!-- ko ifnot: entityType -->\r\n  <div class=\"alert alert-danger\">Missing entity type</div>\r\n  <!-- /ko -->\r\n  <!-- ko if: entityType -->\r\n  <!-- ko ifnot: multiple -->\r\n  <!-- ko if: Value -->\r\n  <div\r\n    data-bind=\"component: {name: Value().components.view, params: {Entity: Value()}}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <table class=\"table\">\r\n    <thead>\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: Cols -->\r\n        <th data-bind=\"text: displayName\"></th>\r\n        <!-- /ko -->\r\n      </tr>\r\n    </thead>\r\n    <tbody data-bind=\"\">\r\n      <!-- ko foreach: {data: Value, as: 'row'} -->\r\n      <tr data-bind=\"\">\r\n        <!-- ko foreach: {data: row.FormFields, as: 'col'} -->\r\n        <td data-bind=\"text: col.toString()\"></td>\r\n        <!-- /ko -->\r\n      </tr>\r\n      <!-- /ko -->\r\n    </tbody>\r\n  </table>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class BlobModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"blob-view\";\r\n  static edit = \"blob-edit\";\r\n  static new = \"blob-edit\";\r\n}\r\n\r\nregisterFieldComponents(BlobModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value, enable: Enable\"\r\n      />\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"form-check form-switch\">\r\n    <label class=\"form-check-label\"\r\n      ><span class=\"fw-semibold\" data-bind=\"text: displayName\"></span>\r\n      <input\r\n        class=\"form-check-input\"\r\n        type=\"checkbox\"\r\n        role=\"switch\"\r\n        data-bind=\"checked: Value\"\r\n        disabled\r\n      />\r\n    </label>\r\n  </div>\r\n`;\r\n\r\nexport class CheckboxModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"checkbox-view\";\r\n  static edit = \"checkbox-edit\";\r\n  static new = \"checkbox-edit\";\r\n}\r\n\r\nregisterFieldComponents(CheckboxModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"value: inputBinding, \r\n        class: ValidationClass, \r\n        attr: {'type': type},\r\n        enable: Enable\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class DateModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"date-view\";\r\n  static edit = \"date-edit\";\r\n  static new = \"date-edit\";\r\n}\r\n\r\nregisterFieldComponents(DateModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: isSearch -->\r\n    <div data-bind=\"text: toString()\"></div>\r\n    <input class=\"form-control\" data-bind=\"\" />\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isSearch -->\r\n    <!-- ko if: Options().length -->\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n        selectedOptions: Value,\r\n        optionsText: optionsText,\r\n        class: ValidationClass\r\n        enable: Enable\"\r\n    ></select>\r\n    <div class=\"fw-light flex justify-between\">\r\n      <p class=\"fst-italic\">Hold ctrl to select multiple</p>\r\n      <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n        CLEAR\r\n      </button>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        value: Value,\r\n        optionsText: optionsText,\r\n        class: ValidationClass\r\n        enable: Enable\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class LookupModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.onSearchInput = field.onSearchInput;\r\n    this.multiple = field.multiple ?? false;\r\n  }\r\n\r\n  // selectedOptions = ko.pureComputed({\r\n  //   read: () => {\r\n  //     if (this.multiple) return this.Value();\r\n  //     return ko.unwrap(this.Value) ? [ko.unwrap(this.Value)] : [];\r\n  //   },\r\n  //   write: (val) => {\r\n  //     if (this.multiple) {\r\n  //       this.Value(val);\r\n  //       return;\r\n  //     }\r\n\r\n  //     if (val.length) {\r\n  //       this.Value(val[0]);\r\n  //       return;\r\n  //     }\r\n  //     this.Value(null);\r\n  //   },\r\n  // });\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"lookup-view\";\r\n  static edit = \"lookup-edit\";\r\n  static new = \"lookup-edit\";\r\n}\r\n\r\nregisterFieldComponents(LookupModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold w-100\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko ifnot: spGroupId -->\r\n    <div\r\n      class=\"form-control py-0\"\r\n      data-bind=\"attr: {id: getUniqueId()}, \r\n      people: Value, \r\n      pickerOptions: pickerOptions,\r\n      class: ValidationClass\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowUserSelect -->\r\n    <select\r\n      class=\"form-select\"\r\n      name=\"\"\r\n      id=\"\"\r\n      data-bind=\"options: userOpts, \r\n        optionsCaption: 'Select...', \r\n        optionsText: 'Title',\r\n        value: ValueFunc,\r\n        class: ValidationClass\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: toString -->\r\n  <!-- ko ifnot: multiple -->\r\n  <div\r\n    data-bind=\"text: toString, \r\n      attr: {title: Value()?.LoginName}\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: multiple -->\r\n  <ul data-bind=\"foreach: Value\">\r\n    <li data-bind=\"attr: {title: LoginName}, text: Title\"></li>\r\n  </ul>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: toString -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class PeopleModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  ValueFunc = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return;\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      return userOpts.find((opt) => opt.ID == this.Value().ID);\r\n    },\r\n    write: (opt) => {\r\n      const userOpts = ko.unwrap(this.userOpts);\r\n      if (!userOpts) return;\r\n      this.Value(opt);\r\n    },\r\n  });\r\n\r\n  ShowUserSelect = ko.pureComputed(() => {\r\n    // We don't care to unwrap this, since we want to know if it's set or an observable.\r\n    const groupName = this.spGroupName;\r\n    if (!groupName) return false;\r\n    const options = ko.unwrap(this.userOpts);\r\n    return options.length;\r\n  });\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"people-view\";\r\n  static edit = \"people-edit\";\r\n  static new = \"people-edit\";\r\n}\r\n\r\nregisterFieldComponents(PeopleModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n  </label>\r\n  <search-select\r\n    class=\"form-select\"\r\n    data-bind=\"searchSelect: { \r\n      options: Options, \r\n      selectedOptions: Value,\r\n      optionsText: optionsText,\r\n      onSearchInput: onSearchInput\r\n    }\"\r\n  >\r\n  </search-select>\r\n  <div class=\"fw-light flex justify-between\">\r\n    <p class=\"fst-italic\"></p>\r\n    <button type=\"button\" class=\"btn btn-link h-1\" data-bind=\"click: clear\">\r\n      CLEAR\r\n    </button>\r\n  </div>\r\n  <!-- ko if: instructions -->\r\n  <div\r\n    class=\"fw-lighter fst-italic text-secondary\"\r\n    data-bind=\"html: instructions\"\r\n  ></div>\r\n  <!-- /ko -->\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SearchSelectModule extends BaseFieldModule {\r\n  constructor(field) {\r\n    super(field);\r\n    this.Options = field.Options;\r\n    this.Value = field.Value;\r\n    this.optionsText =\r\n      field.optionsText ??\r\n      ((val) => {\r\n        return val;\r\n      });\r\n    this.multiple = field.multiple;\r\n    this.OptionsCaption = field.OptionsCaption ?? \"Select...\";\r\n    this.onSearchInput = field.onSearchInput;\r\n  }\r\n\r\n  GetSelectedOptions = ko.pureComputed(() => {\r\n    if (this.multiple) return this.Value();\r\n\r\n    return this.Value() ? [this.Value()] : [];\r\n  });\r\n\r\n  InputGroupFocused = ko.observable();\r\n  setFocus = () => this.InputGroupFocused(true);\r\n\r\n  FilterText = ko.observable();\r\n  FilteredOptions = ko.pureComputed(() =>\r\n    this.Options().filter((option) => {\r\n      if (this.GetSelectedOptions().indexOf(option) >= 0) return false;\r\n      if (this.FilterText())\r\n        return this.optionsText(option)\r\n          .toLowerCase()\r\n          .includes(this.FilterText().toLowerCase());\r\n      return true;\r\n    })\r\n  );\r\n\r\n  addSelection = (option, e) => {\r\n    console.log(\"selected\", option);\r\n    if (e.target.nextElementSibling) {\r\n      //e.stopPropagation();\r\n      e.target.nextElementSibling.focus();\r\n    }\r\n    if (this.multiple) {\r\n      this.Value.push(option);\r\n    } else {\r\n      this.Value(option);\r\n    }\r\n  };\r\n\r\n  removeSelection = (option) =>\r\n    this.multiple ? this.Value.remove(option) : this.Value(null);\r\n\r\n  setInputGroupFocus = () => {\r\n    this.InputGroupFocused(true);\r\n    clearTimeout(this.focusOutTimeout);\r\n  };\r\n\r\n  removeInputGroupFocus = (data, e) => {\r\n    this.focusOutTimeout = window.setTimeout(() => {\r\n      this.InputGroupFocused(false);\r\n    }, 0);\r\n  };\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"search-select-view\";\r\n  static edit = \"search-select-edit\";\r\n  static new = \"search-select-new\";\r\n}\r\n\r\nregisterFieldComponents(SearchSelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <!-- ko if: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      multiple=\"true\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        selectedOptions: Value,\r\n        class: ValidationClass,\r\n        enable: Enable\"\r\n    ></select>\r\n    <div class=\"fst-italic fw-light\">Hold ctrl to select multiple.</div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: multiple -->\r\n    <select\r\n      class=\"form-select\"\r\n      data-bind=\"options: Options, \r\n        optionsCaption: 'Select...', \r\n        optionsText: optionsText,\r\n        value: Value,\r\n        class: ValidationClass,\r\n        enable: Enable\"\r\n    ></select>\r\n    <!-- /ko -->\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class SelectModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"select-view\";\r\n  static edit = \"select-edit\";\r\n  static new = \"select-edit\";\r\n}\r\n\r\nregisterFieldComponents(SelectModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <div class=\"component field\">\r\n    <!-- ko if: isRichText -->\r\n    <label class=\"fw-semibold\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span\r\n      >:</label\r\n    >\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n    <div\r\n      class=\"richtext-field\"\r\n      data-bind=\"childrenComplete: childrenHaveLoaded\"\r\n    >\r\n      <!-- Create the editor container -->\r\n      <div\r\n        class=\"form-control\"\r\n        data-bind=\"attr: {'id': getUniqueId()}, class: ValidationClass\"\r\n        style=\"height: 150px\"\r\n      >\r\n        <div data-bind=\"html: Value\"></div>\r\n      </div>\r\n    </div>\r\n    <!-- /ko -->\r\n    <!-- ko ifnot: isRichText -->\r\n    <label class=\"fw-semibold w-full\"\r\n      ><span data-bind=\"text: displayName\"></span\r\n      ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n      <!-- ko if: instructions -->\r\n      <div\r\n        class=\"fw-lighter fst-italic text-secondary\"\r\n        data-bind=\"html: instructions\"\r\n      ></div>\r\n      <!-- /ko -->\r\n      <textarea\r\n        name=\"\"\r\n        id=\"\"\r\n        cols=\"30\"\r\n        rows=\"10\"\r\n        class=\"form-control\"\r\n        data-bind=\"textInput: Value, \r\n        class: ValidationClass, \r\n        attr: attr\r\n        enable: Enable\"\r\n      ></textarea>\r\n    </label>\r\n    <!-- /ko -->\r\n    <!-- ko if: ShowErrors -->\r\n    <!-- ko foreach: Errors -->\r\n    <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n    <!-- /ko -->\r\n    <!-- /ko -->\r\n  </div>\r\n`;\r\n\r\nconst viewTemplate = html`\r\n  <div class=\"fw-semibold\" data-bind=\"text: displayName\"></div>\r\n  <!-- ko if: Value -->\r\n  <!-- ko if: isRichText -->\r\n  <div data-bind=\"html: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: isRichText -->\r\n  <div data-bind=\"text: Value\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n  <!-- ko ifnot: Value -->\r\n  <div class=\"fst-italic\">Not provided.</div>\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextAreaModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  childrenHaveLoaded = (nodes) => {\r\n    this.initializeEditor();\r\n  };\r\n\r\n  getToolbarId = () => \"toolbar-\" + this.getUniqueId();\r\n\r\n  initializeEditor() {\r\n    const toolbarOptions = [\r\n      [\"bold\", \"italic\", \"underline\", \"strike\"], // toggled buttons\r\n      [\"link\"],\r\n      [\"blockquote\", \"code-block\"],\r\n\r\n      [{ header: 1 }, { header: 2 }], // custom button values\r\n      [{ list: \"ordered\" }, { list: \"bullet\" }],\r\n      [{ script: \"sub\" }, { script: \"super\" }], // superscript/subscript\r\n      [{ indent: \"-1\" }, { indent: \"+1\" }], // outdent/indent\r\n      [{ direction: \"rtl\" }], // text direction\r\n\r\n      [{ size: [\"small\", false, \"large\", \"huge\"] }], // custom dropdown\r\n      [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n\r\n      [{ color: [] }, { background: [] }], // dropdown with defaults from theme\r\n      [{ font: [] }],\r\n      [{ align: [] }],\r\n\r\n      [\"clean\"], // remove formatting button\r\n    ];\r\n\r\n    // debugger;\r\n    var editor = new Quill(\"#\" + this.getUniqueId(), {\r\n      modules: { toolbar: toolbarOptions },\r\n      theme: \"snow\",\r\n    });\r\n\r\n    const Value = this.Value;\r\n\r\n    Value.subscribe((val) => {\r\n      if (val == \"\") {\r\n        editor.setText(\"\");\r\n        return;\r\n      }\r\n      if (editor.root.innerHTML == val) return;\r\n\r\n      editor.root.innerHTML == val;\r\n      // editor.setText(val);\r\n    });\r\n\r\n    editor.on(\"text-change\", function (delta, oldDelta, source) {\r\n      Value(editor.root.textContent ? editor.root.innerHTML : \"\");\r\n    });\r\n  }\r\n\r\n  static viewTemplate = viewTemplate;\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-area-view\";\r\n  static edit = \"text-area-edit\";\r\n  static new = \"text-area-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextAreaModule);\r\n", "import {\r\n  html,\r\n  BaseFieldModule,\r\n  registerFieldComponents,\r\n} from \"./BaseFieldModule.js\";\r\n\r\nconst editTemplate = html`\r\n  <label class=\"fw-semibold\"\r\n    ><span data-bind=\"text: displayName\"></span\r\n    ><span data-bind=\"if: isRequired\" class=\"fw-bold text-danger\">*</span>:\r\n    <input\r\n      class=\"form-control\"\r\n      data-bind=\"textInput: Value, \r\n        class: ValidationClass, \r\n        attr: attr, \r\n        enable: Enable\"\r\n    />\r\n    <!-- ko if: instructions -->\r\n    <div\r\n      class=\"fw-lighter fst-italic text-secondary\"\r\n      data-bind=\"html: instructions\"\r\n    ></div>\r\n    <!-- /ko -->\r\n  </label>\r\n  <!-- ko if: ShowErrors -->\r\n  <!-- ko foreach: Errors -->\r\n  <div class=\"fw-semibold text-danger\" data-bind=\"text: description\"></div>\r\n  <!-- /ko -->\r\n  <!-- /ko -->\r\n`;\r\n\r\nexport class TextModule extends BaseFieldModule {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static editTemplate = editTemplate;\r\n\r\n  static view = \"text-view\";\r\n  static edit = \"text-edit\";\r\n  static new = \"text-edit\";\r\n}\r\n\r\nregisterFieldComponents(TextModule);\r\n", "import { BaseField } from \"./index.js\";\r\nimport { CheckboxModule } from \"../components/fields/index.js\";\r\n\r\nexport class CheckboxField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  components = CheckboxModule;\r\n}\r\n", "import { DateModule } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport const dateFieldTypes = {\r\n  date: \"date\",\r\n  datetime: \"datetime-local\",\r\n};\r\n\r\n/**\r\n * This field needs to convert between locale and UTC Dates stored on the server;\r\n */\r\n\r\nexport class DateField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.type = params.type ?? dateFieldTypes.date;\r\n  }\r\n\r\n  toString = ko.pureComputed(() => {\r\n    // if this is datetime vs date we expect different things\r\n    switch (this.type) {\r\n      case dateFieldTypes.date:\r\n        return this.toLocaleDateString();\r\n      case dateFieldTypes.datetime:\r\n        return this.toLocaleString();\r\n      default:\r\n        return \"\";\r\n    }\r\n  });\r\n\r\n  toSortableDateString = () => this.Value()?.format(\"yyyy-MM-dd\");\r\n  toLocaleDateString = () => this.Value()?.toLocaleDateString();\r\n  toLocaleString = () => this.Value()?.toLocaleString();\r\n\r\n  toInputDateString = () => {\r\n    const d = this.Value();\r\n    return [\r\n      d.getUTCFullYear().toString().padStart(4, \"0\"),\r\n      (d.getUTCMonth() + 1).toString().padStart(2, \"0\"),\r\n      d.getUTCDate().toString().padStart(2, \"0\"),\r\n    ].join(\"-\");\r\n  };\r\n  toInputDateTimeString = () => this.Value().format(\"yyyy-MM-ddThh:mm\");\r\n\r\n  get = ko.pureComputed(() => {\r\n    if (!this.Value() || isNaN(this.Value().valueOf())) {\r\n      return null;\r\n    }\r\n\r\n    return this.Value().toISOString();\r\n  });\r\n\r\n  set = (newDate) => {\r\n    if (!newDate) return null;\r\n    if (newDate.constructor.getName() != \"Date\") {\r\n      // console.warn(\"Attempting to set date\", newDate);\r\n      newDate = new Date(newDate);\r\n    }\r\n    if (newDate.getTimezoneOffset()) {\r\n    }\r\n    this.Value(newDate);\r\n  };\r\n\r\n  inputBinding = ko.pureComputed({\r\n    read: () => {\r\n      if (!this.Value()) return null;\r\n      switch (this.type) {\r\n        case dateFieldTypes.date:\r\n          return this.toInputDateString();\r\n        case dateFieldTypes.datetime:\r\n          return this.toInputDateTimeString();\r\n        default:\r\n          return null;\r\n      }\r\n    },\r\n    write: (val) => {\r\n      if (!val) return;\r\n      //writes in format\r\n      if (this.type == dateFieldTypes.datetime) {\r\n        this.Value(new Date(val));\r\n        return;\r\n      }\r\n\r\n      // make sure we're using midnight local time\r\n      this.Value(new Date(val + \"T00:00\"));\r\n    },\r\n  });\r\n\r\n  components = DateModule;\r\n}\r\n", "// import { appContext } from \"../../infrastructure/app-db-context.js\";\r\nimport {\r\n  LookupModule,\r\n  SearchSelectModule,\r\n  SelectModule,\r\n} from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class LookupField extends BaseField {\r\n  constructor({\r\n    displayName,\r\n    type: entityType,\r\n    isRequired = false,\r\n    Visible,\r\n    appContext,\r\n    options = ko.observableArray(),\r\n    optionsFilter = null,\r\n    optionsText = null,\r\n    multiple = false,\r\n    lookupCol = null,\r\n    instructions,\r\n  }) {\r\n    super({ Visible, displayName, isRequired, instructions });\r\n    // Support passing in options\r\n    // if options are not passed, assume this is a search input\r\n    if (!options) {\r\n      this.isSearch = true;\r\n    } else {\r\n      this.isSearch = false;\r\n      this.allOpts = options;\r\n    }\r\n    this.isSearch = !options;\r\n    this.multiple = multiple;\r\n    this.Value = multiple ? ko.observableArray() : ko.observable();\r\n\r\n    this._appContext = appContext;\r\n    this.entityType = entityType;\r\n    // this.entitySet = entitySet;\r\n    this.lookupCol = lookupCol ?? \"Title\";\r\n    this.optionsText = optionsText ?? ((item) => item[this.lookupCol]);\r\n    if (optionsFilter) this.optionsFilter = optionsFilter;\r\n\r\n    this.components = multiple ? SearchSelectModule : LookupModule;\r\n  }\r\n\r\n  _entitySet;\r\n  get entitySet() {\r\n    if (!this._entitySet) {\r\n      this._entitySet = this._appContext().Set(this.entityType);\r\n    }\r\n    return this._entitySet;\r\n  }\r\n\r\n  isSearch = false;\r\n\r\n  allOpts;\r\n  optionsFilter = (val) => val;\r\n\r\n  Options = ko.pureComputed(() => {\r\n    const optsFilter = ko.unwrap(this.optionsFilter);\r\n    const allOpts = ko.unwrap(this.allOpts);\r\n    return allOpts.filter(optsFilter);\r\n  });\r\n\r\n  IsLoading = ko.observable(false);\r\n  HasLoaded = ko.observable(false);\r\n\r\n  // TODO: Started this, should really go in the entity base class if we're doing active record\r\n  // create = async () => {\r\n  //   const newItems = this.multiple ? this.Value() : [this.Value()]\r\n  //   newItems.map(item => this.entitySet.AddEntity(newItems))\r\n  // }\r\n\r\n  refresh = async () => {\r\n    if (!!!this.Value()) {\r\n      return;\r\n    }\r\n    this.IsLoading(true);\r\n    if (!this.multiple) {\r\n      await this.entitySet.LoadEntity(this.Value());\r\n      this.IsLoading(false);\r\n      this.HasLoaded(true);\r\n      return;\r\n    }\r\n\r\n    await Promise.all(\r\n      this.Value().map(\r\n        async (entity) => await this.entitySet.LoadEntity(entity)\r\n      )\r\n    );\r\n    this.IsLoading(false);\r\n    this.HasLoaded(true);\r\n  };\r\n\r\n  ensure = async () => {\r\n    if (this.HasLoaded()) return;\r\n    if (this.IsLoading()) {\r\n      return new Promise((resolve, reject) => {\r\n        const isLoadingSubscription = this.IsLoading.subscribe((isLoading) => {\r\n          if (!isLoading) {\r\n            isLoadingSubscription.dispose();\r\n            resolve();\r\n          }\r\n        });\r\n      });\r\n    }\r\n    await this.refresh();\r\n  };\r\n\r\n  toString = ko.pureComputed(() => {\r\n    if (!!!this.Value()) {\r\n      return \"\";\r\n    }\r\n    if (this.multiple) {\r\n      return this.Value()\r\n        .map((val) => getEntityPropertyAsString(val, this.lookupCol))\r\n        .join(\", \");\r\n    }\r\n    return getEntityPropertyAsString(this.Value(), this.lookupCol);\r\n  });\r\n\r\n  get = () => {\r\n    if (!this.Value()) return;\r\n    if (this.multiple) {\r\n      return this.Value().map((entity) => {\r\n        return {\r\n          ID: entity.ID,\r\n          LookupValue: entity.LookupValue,\r\n          Title: entity.Title,\r\n        };\r\n      });\r\n    }\r\n    const entity = this.Value();\r\n    return {\r\n      ID: entity.ID,\r\n      LookupValue: entity.LookupValue,\r\n      Title: entity.Title,\r\n    };\r\n  };\r\n\r\n  set = (val) => {\r\n    if (!val) {\r\n      this.Value(val);\r\n      return;\r\n    }\r\n    if (this.multiple) {\r\n      const valArr = Array.isArray(val) ? val : val.results ?? val.split(\"#;\");\r\n\r\n      this.Value(valArr.map((value) => this.findOrCreateNewEntity(value)));\r\n      return;\r\n    }\r\n\r\n    this.Value(this.findOrCreateNewEntity(val));\r\n    if (val && !this.toString()) {\r\n      // this.ensure();\r\n    }\r\n  };\r\n\r\n  findOrCreateNewEntity = (val) => {\r\n    if (this.entityType.FindInStore) {\r\n      const foundEntity = this.entityType.FindInStore(val);\r\n      if (foundEntity) return foundEntity;\r\n      console.warn(\r\n        `Could not find entity in store: ${this.entityType.name}`,\r\n        val\r\n      );\r\n    }\r\n\r\n    const optionEntity = this.allOpts().find((entity) => entity.ID == val.ID);\r\n    if (optionEntity) return optionEntity;\r\n\r\n    if (this.entityType.Create) {\r\n      return this.entityType.Create(val);\r\n    }\r\n\r\n    const newEntity = new this.entityType();\r\n    newEntity.ID = val.ID;\r\n    // Kick off the load process in the background\r\n    this.entitySet.LoadEntity(newEntity);\r\n\r\n    return newEntity;\r\n  };\r\n}\r\n\r\n// Should fully constrain all entities, this is ridiculous\r\nfunction getEntityPropertyAsString(entity, column) {\r\n  if (entity.FieldMap && entity.FieldMap[column]) {\r\n    const field = entity.FieldMap[column];\r\n    if (typeof field == \"function\") {\r\n      return field();\r\n    }\r\n\r\n    if (field.toString && typeof field.toString == \"function\") {\r\n      return field.toString();\r\n    }\r\n\r\n    if (field.get && typeof field.get == \"function\") {\r\n      return field.get();\r\n    }\r\n\r\n    if (field.obs) {\r\n      return field.obs();\r\n    }\r\n\r\n    return field;\r\n  }\r\n  return entity[column] ?? \"\";\r\n}\r\n", "export const sortByTitle = (a, b) => {\r\n  if (a.Title > b.Title) {\r\n    return 1;\r\n  }\r\n  if (a.Title < b.Title) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const sortByField = (field) => (a, b) => {\r\n  if (a[field] > b[field]) {\r\n    return 1;\r\n  }\r\n  if (a[field] < b[field]) {\r\n    return -1;\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport const createNewRequestTitle = () => {\r\n  const ts = new Date();\r\n  return ts.format(\"yyMMdd\") + \"-\" + (ts.getTime() % 100000);\r\n};\r\n", "export class People {\r\n  constructor({\r\n    ID,\r\n    Title,\r\n    LoginName = null,\r\n    Email = null,\r\n    IsGroup = null,\r\n    IsEnsured = false,\r\n  }) {\r\n    this.ID = ID;\r\n    this.Title = Title;\r\n    this.LookupValue = Title;\r\n    this.LoginName = LoginName != \"\" ? LoginName : null;\r\n    this.Email = Email;\r\n    this.IsGroup = IsGroup;\r\n    // Has the user data been fetched? Used for binding handlers.\r\n    this.IsEnsured = IsEnsured;\r\n  }\r\n\r\n  ID = null;\r\n  Title = null;\r\n  LoginName = null;\r\n  LookupValue = null;\r\n  Email = null;\r\n\r\n  getKey = () => this.LoginName ?? this.Title;\r\n\r\n  static Create = function (props) {\r\n    if (!props || (!props.ID && !(props.Title || props.LookupValue)))\r\n      return null;\r\n    return new People({\r\n      ...props,\r\n      Title: props.Title ?? props.LookupValue,\r\n    });\r\n  };\r\n}\r\n", "export class Entity {\r\n  constructor(params) {\r\n    if (params?.ID) this.ID = params.ID;\r\n    if (params?.Title) this.Title = params.Title;\r\n  }\r\n\r\n  ObservableID = ko.observable();\r\n  ObservableTitle = ko.observable();\r\n\r\n  get id() {\r\n    return this.ObservableID();\r\n  }\r\n\r\n  set id(val) {\r\n    this.ObservableID(val);\r\n  }\r\n\r\n  get Title() {\r\n    return this.ObservableTitle();\r\n  }\r\n\r\n  set Title(val) {\r\n    this.ObservableTitle(val);\r\n  }\r\n}\r\n", "import { Entity } from \"./index.js\";\r\nimport { BaseField } from \"../fields/index.js\";\r\n\r\n/**\r\n * Constrained Entity's are validated based on their declared fields.\r\n * We are expecting user input, so need to validate each input field.\r\n */\r\n\r\nexport class ConstrainedEntity extends Entity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  toJSON = () => {\r\n    const out = {};\r\n    Object.keys(this.FieldMap).map(\r\n      (key) => (out[key] = this.FieldMap[key]?.get())\r\n    );\r\n    return out;\r\n  };\r\n\r\n  fromJSON(inputObj) {\r\n    if (window.DEBUG)\r\n      console.log(\"Setting constrained entity from JSON\", inputObj);\r\n    Object.keys(inputObj).map((key) => this.FieldMap[key]?.set(inputObj[key]));\r\n  }\r\n\r\n  get FieldMap() {\r\n    const fieldMap = {};\r\n    Object.entries(this)\r\n      .filter(([key, val]) => val instanceof BaseField)\r\n      .map(([key, val]) => {\r\n        key = val.systemName ?? key;\r\n        fieldMap[key] = val;\r\n      });\r\n    return fieldMap;\r\n  }\r\n\r\n  FormFields = () => Object.values(this.FieldMap);\r\n\r\n  // Validate the entire entity\r\n  validate = (showErrors = true) => {\r\n    Object.values(this.FieldMap).map(\r\n      (field) => field?.validate && field.validate(showErrors)\r\n    );\r\n    return this.Errors();\r\n  };\r\n\r\n  Errors = ko.pureComputed(() => {\r\n    return Object.values(this.FieldMap)\r\n      .filter((field) => field?.Errors && field.Errors())\r\n      .flatMap((field) => field.Errors());\r\n  });\r\n\r\n  IsValid = ko.pureComputed(() => !this.Errors().length);\r\n\r\n  /**\r\n   * Expose methods to generate default new, edit, and view forms\r\n   * for a constrained entity. Uses the constrained\r\n   * entity components.\r\n   *\r\n   * This could be broken into a separate service, but since it's\r\n   * tightly coupled leave it here?\r\n   */\r\n  // static components = {\r\n  //   new: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"edit\",\r\n  //     }),\r\n  //   edit: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"edit\",\r\n  //     }),\r\n  //   view: (entity, view = null) =>\r\n  //     new ConstrainedEntityComponent({\r\n  //       entityView: new ConstrainedEntityView({ entity, view }),\r\n  //       displayMode: \"view\",\r\n  //     }),\r\n  // };\r\n}\r\n", "import { Entity } from \"../primitives/index.js\";\r\n\r\nexport class SitePage extends Entity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Created\", \"Author\", \"Modified\", \"Editor\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"SitePages\",\r\n    title: \"Site Pages\",\r\n  };\r\n}\r\n", "export const assetsPath = \"/sites/CGFS/Style Library/apps/car-cap/src\";\r\n", "import { People } from \"../entities/index.js\";\r\nimport { ensureUserByKeyAsync } from \"./index.js\";\r\nimport { assetsPath } from \"../../env.js\";\r\n\r\nko.subscribable.fn.subscribeChanged = function (callback) {\r\n  var oldValue;\r\n  this.subscribe(\r\n    function (_oldValue) {\r\n      oldValue = _oldValue;\r\n    },\r\n    this,\r\n    \"beforeChange\"\r\n  );\r\n\r\n  this.subscribe(function (newValue) {\r\n    callback(newValue, oldValue);\r\n  });\r\n};\r\n\r\nko.observableArray.fn.subscribeAdded = function (callback) {\r\n  this.subscribe(\r\n    function (arrayChanges) {\r\n      const addedValues = arrayChanges\r\n        .filter((value) => value.status == \"added\")\r\n        .map((value) => value.value);\r\n      callback(addedValues);\r\n    },\r\n    this,\r\n    \"arrayChange\"\r\n  );\r\n};\r\n\r\nko.bindingHandlers.searchSelect = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    const { options, selectedOptions, optionsText, onSearchInput } =\r\n      valueAccessor();\r\n\r\n    function populateOpts() {\r\n      const optionItems = ko.unwrap(options);\r\n\r\n      const optionElements = optionItems.map((option) => {\r\n        const optionElement = document.createElement(\"option\");\r\n        ko.selectExtensions.writeValue(optionElement, ko.unwrap(option));\r\n        // optionElement.value = option;\r\n        optionElement.innerText = optionsText(option);\r\n\r\n        if (\r\n          ko\r\n            .unwrap(selectedOptions)\r\n            ?.find((selectedOption) => selectedOption.ID == option.ID)\r\n        ) {\r\n          optionElement.setAttribute(\"selected\", \"\");\r\n        }\r\n        return optionElement;\r\n      });\r\n\r\n      element.append(...optionElements);\r\n    }\r\n\r\n    populateOpts();\r\n\r\n    if (ko.isObservable(options)) {\r\n      options.subscribe(() => populateOpts(), this);\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", (e) => {\r\n      selectedOptions(\r\n        element.selectedOptions.map((opt) => ko.selectExtensions.readValue(opt))\r\n      );\r\n    });\r\n\r\n    if (onSearchInput) {\r\n      ko.utils.registerEventHandler(element, \"input\", (e) => {\r\n        onSearchInput(e.originalEvent.target.searchInputElement.value);\r\n      });\r\n    }\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const { selectedOptions } = valueAccessor();\r\n    const selectedUnwrapped = ko.unwrap(selectedOptions);\r\n\r\n    for (var i = 0; i < element.options.length; i++) {\r\n      const o = element.options[i];\r\n      o.toggleAttribute(\r\n        \"selected\",\r\n        selectedUnwrapped.includes(ko.selectExtensions.readValue(o))\r\n      );\r\n    }\r\n\r\n    // element.selectedOptions = ko.unwrap(selectedOptions);\r\n  },\r\n};\r\n\r\nko.bindingHandlers.people = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {\r\n    var schema = {};\r\n    schema[\"PrincipalAccountType\"] = \"User\";\r\n    schema[\"SearchPrincipalSource\"] = 15;\r\n    schema[\"ShowUserPresence\"] = true;\r\n    schema[\"ResolvePrincipalSource\"] = 15;\r\n    schema[\"AllowEmailAddresses\"] = true;\r\n    schema[\"AllowMultipleValues\"] = false;\r\n    schema[\"MaximumEntitySuggestions\"] = 50;\r\n    //schema[\"Width\"] = \"280px\";\r\n    schema[\"OnUserResolvedClientScript\"] = async function (elemId, userKeys) {\r\n      //  get reference of People Picker Control\r\n      var pickerControl = SPClientPeoplePicker.SPClientPeoplePickerDict[elemId];\r\n      var observable = valueAccessor();\r\n      var userJSObject = pickerControl.GetControlValueAsJSObject()[0];\r\n      if (!userJSObject) {\r\n        observable(null);\r\n        return;\r\n      }\r\n\r\n      if (userJSObject.IsResolved) {\r\n        if (userJSObject.Key == observable()?.LoginName) return;\r\n        var user = await ensureUserByKeyAsync(userJSObject.Key);\r\n        var person = new People(user);\r\n        observable(person);\r\n      }\r\n    };\r\n\r\n    // TODO: Minor - accept schema settings as options\r\n    //var mergedOptions = Object.assign(schema, obs.schemaOpts);\r\n\r\n    //  Initialize the Control, MS enforces to pass the Element ID hence we need to provide\r\n    //  ID to our element, no other options\r\n    SPClientPeoplePicker_InitStandaloneControlWrapper(element.id, null, schema);\r\n    // const helpDiv = document.createElement(\"div\");\r\n    // helpDiv.innerHTML = \"Search surname first e.g. Smith, John\";\r\n    // helpDiv.classList.add(\"fst-italic\", \"fw-lighter\");\r\n    // element.appendChild(helpDiv);\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var pickerControl =\r\n      SPClientPeoplePicker.SPClientPeoplePickerDict[element.id + \"_TopSpan\"];\r\n    var userValue = ko.utils.unwrapObservable(valueAccessor());\r\n\r\n    if (!userValue) {\r\n      // Clear the form\r\n      pickerControl?.DeleteProcessedUser();\r\n      return;\r\n    }\r\n\r\n    if (\r\n      userValue &&\r\n      !pickerControl\r\n        .GetAllUserInfo()\r\n        .find((pickerUser) => pickerUser.DisplayText == userValue.LookupValue)\r\n    ) {\r\n      pickerControl.AddUserKeys(\r\n        userValue.LoginName ?? userValue.LookupValue ?? userValue.Title\r\n      );\r\n    }\r\n  },\r\n};\r\n\r\nko.bindingHandlers.dateField = {\r\n  init: function (element, valueAccessor, allBindingsAccessor) {},\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {},\r\n};\r\n\r\nko.bindingHandlers.downloadLink = {\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    var path = valueAccessor();\r\n    var replaced = path.replace(/:([A-Za-z_]+)/g, function (_, token) {\r\n      return ko.unwrap(viewModel[token]);\r\n    });\r\n    element.href = replaced;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.files = {\r\n  init: function (element, valueAccessor) {\r\n    function addFiles(fileList) {\r\n      var value = valueAccessor();\r\n      if (!fileList.length) {\r\n        value.removeAll();\r\n        return;\r\n      }\r\n\r\n      const existingFiles = ko.unwrap(value);\r\n      const newFileList = [];\r\n      for (let file of fileList) {\r\n        if (!existingFiles.find((exFile) => exFile.name == file.name))\r\n          newFileList.push(file);\r\n      }\r\n      ko.utils.arrayPushAll(value, newFileList);\r\n      return;\r\n    }\r\n\r\n    ko.utils.registerEventHandler(element, \"change\", function () {\r\n      addFiles(element.files);\r\n    });\r\n\r\n    const label = element.closest(\"label\");\r\n    if (!label) return;\r\n\r\n    ko.utils.registerEventHandler(label, \"dragover\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragenter\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.add(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"dragleave\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      label.classList.remove(\"dragging\");\r\n    });\r\n\r\n    ko.utils.registerEventHandler(label, \"drop\", function (event) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n      let dt = event.originalEvent.dataTransfer;\r\n      let files = dt.files;\r\n      addFiles(files);\r\n    });\r\n  },\r\n  update: function (\r\n    element,\r\n    valueAccessor,\r\n    allBindings,\r\n    viewModel,\r\n    bindingContext\r\n  ) {\r\n    const value = valueAccessor();\r\n    if (!value().length && element.files.length) {\r\n      // clear all files\r\n      element.value = null;\r\n      return;\r\n    }\r\n\r\n    return;\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggleClick = {\r\n  init: function (element, valueAccessor, allBindings) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      var classToToggle = allBindings.get(\"toggleClass\");\r\n      var classContainer = allBindings.get(\"classContainer\");\r\n      var containerType = allBindings.get(\"containerType\");\r\n\r\n      if (containerType && containerType == \"sibling\") {\r\n        $(element)\r\n          .nextUntil(classContainer)\r\n          .each(function () {\r\n            $(this).toggleClass(classToToggle);\r\n          });\r\n      } else if (containerType && containerType == \"doc\") {\r\n        var curIcon = $(element).attr(\"src\");\r\n        if (curIcon == \"/_layouts/images/minus.gif\")\r\n          $(element).attr(\"src\", \"/_layouts/images/plus.gif\");\r\n        else $(element).attr(\"src\", \"/_layouts/images/minus.gif\");\r\n\r\n        if ($(element).parent() && $(element).parent().parent()) {\r\n          $(element)\r\n            .parent()\r\n            .parent()\r\n            .nextUntil(classContainer)\r\n            .each(function () {\r\n              $(this).toggleClass(classToToggle);\r\n            });\r\n        }\r\n      } else if (containerType && containerType == \"any\") {\r\n        if ($(\".\" + classToToggle).is(\":visible\"))\r\n          $(\".\" + classToToggle).hide();\r\n        else $(\".\" + classToToggle).show();\r\n      } else $(element).find(classContainer).toggleClass(classToToggle);\r\n    });\r\n  },\r\n};\r\n\r\nko.bindingHandlers.toggles = {\r\n  init: function (element, valueAccessor) {\r\n    var value = valueAccessor();\r\n\r\n    ko.utils.registerEventHandler(element, \"click\", function () {\r\n      value(!value());\r\n    });\r\n  },\r\n};\r\n\r\nconst fromPathTemplateLoader = {\r\n  loadTemplate: function (name, templateConfig, callback) {\r\n    if (templateConfig.fromPath) {\r\n      // TODO: Minor - fix error catching and fallback flow\r\n      fetch(assetsPath + templateConfig.fromPath)\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\r\n              `Error Fetching HTML Template - ${response.statusText}`\r\n            );\r\n          }\r\n          return response.text();\r\n        })\r\n        .catch((error) => {\r\n          if (!templateConfig.fallback) return;\r\n          console.warn(\r\n            \"Primary template not found, attempting fallback\",\r\n            templateConfig\r\n          );\r\n          fetch(assetsPath + templateConfig.fallback)\r\n            .then((response) => {\r\n              if (!response.ok) {\r\n                throw new Error(\r\n                  `Error Fetching fallback HTML Template - ${response.statusText}`\r\n                );\r\n              }\r\n              return response.text();\r\n            })\r\n            .then((text) =>\r\n              ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            );\r\n        })\r\n        .then((text) =>\r\n          text\r\n            ? ko.components.defaultLoader.loadTemplate(name, text, callback)\r\n            : null\r\n        );\r\n    } else {\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathTemplateLoader);\r\n\r\nconst fromPathViewModelLoader = {\r\n  loadViewModel: function (name, viewModelConfig, callback) {\r\n    if (viewModelConfig.viaLoader) {\r\n      // console.log(\"loading module\", name);\r\n      const module = import(assetsPath + viewModelConfig.viaLoader).then(\r\n        (module) => {\r\n          // console.log(\"imported module\", name);\r\n          const viewModelConstructor = module.default;\r\n          // We need a createViewModel function, not a plain constructor.\r\n          // We can use the default loader to convert to the\r\n          // required format.\r\n          ko.components.defaultLoader.loadViewModel(\r\n            name,\r\n            viewModelConstructor,\r\n            callback\r\n          );\r\n        }\r\n      );\r\n    } else {\r\n      // Unrecognized config format. Let another loader handle it.\r\n      callback(null);\r\n    }\r\n  },\r\n};\r\n\r\nko.components.loaders.unshift(fromPathViewModelLoader);\r\n", "export const html = String.raw;\r\n\r\nexport function registerComponent({\r\n  name,\r\n  folder,\r\n  module = null,\r\n  moduleFilename = null,\r\n  template: templateFilename,\r\n}) {\r\n  if (ko.components.isRegistered(name)) {\r\n    return;\r\n  }\r\n  if (moduleFilename || module) {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n      viewModel: module ?? {\r\n        viaLoader: `/components/${folder}/${moduleFilename}.js`,\r\n      },\r\n    });\r\n  } else {\r\n    ko.components.register(name, {\r\n      template: {\r\n        fromPath: `/components/${folder}/${templateFilename}.html`,\r\n      },\r\n    });\r\n  }\r\n}\r\n\r\nexport function directRegisterComponent(name, { template, viewModel = null }) {\r\n  ko.components.register(name, {\r\n    template,\r\n    viewModel,\r\n  });\r\n}\r\n\r\nexport function registerFieldComponent({\r\n  name,\r\n  components,\r\n  viewModel = null,\r\n  folder = null,\r\n}) {\r\n  // register both our view and edit\r\n  folder = folder ?? name;\r\n\r\n  Object.keys(components).map((view) => {\r\n    const componentName = components[view];\r\n    if (ko.components.isRegistered(componentName)) {\r\n      return;\r\n    }\r\n\r\n    // See if we already have this element in the dom\r\n    const elementName = `field-` + componentName;\r\n    const fieldViewElement = document.getElementById(elementName);\r\n\r\n    if (!viewModel) {\r\n      debugger;\r\n    }\r\n    ko.components.register(componentName, {\r\n      template: fieldViewElement\r\n        ? {\r\n            element: fieldViewElement,\r\n          }\r\n        : {\r\n            fromPath: `/sal/components/fields/${folder}/${name}${view}.html`,\r\n          },\r\n      viewModel: viewModel ?? {\r\n        viaLoader: `/sal/components/fields/${folder}/${name}Module.js`,\r\n      },\r\n    });\r\n  });\r\n}\r\n", "/*\r\n    SharePoint Acces Layer - sal.js\r\n\r\n    Abstract any functions that rely on reading or setting SP items to here.\r\n\r\n    Create a new \"Connection\" object type that will store information for \r\n    interfacing with a specific list.\r\n\r\n    Author: Peter Backlund \r\n    Contact: backlundpf <@> state.gov\r\n    Created: 2019-02-12\r\n*/\r\n\r\n/*\r\n  TODO:\r\n  - migrate to rest api\r\n  - remove new from \"new SP.ClientContext.get_current()\"\r\n  - standardize currctx\r\n  - remove unused functions\r\n  - Combine functions \r\n*/\r\n\r\nwindow.console = window.console || { log: function () {} };\r\n\r\n// window.sal = window.sal ?? {};\r\n// var sal = window.sal;\r\nconst sal = {};\r\n\r\nconst serverRelativeUrl =\r\n  _spPageContextInfo.webServerRelativeUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webServerRelativeUrl;\r\n\r\nsal.globalConfig = sal.globalConfig || {\r\n  siteGroups: [],\r\n  siteUrl: serverRelativeUrl,\r\n  listServices: serverRelativeUrl + \"/_vti_bin/ListData.svc/\",\r\n  defaultGroups: {},\r\n};\r\nsal.site = sal.site || {};\r\n\r\nwindow.DEBUG = true;\r\n\r\nexport function executeQuery(currCtx) {\r\n  return new Promise((resolve, reject) =>\r\n    currCtx.executeQueryAsync(resolve, (sender, args) => {\r\n      reject({ sender, args });\r\n    })\r\n  );\r\n}\r\n\r\nfunction principalToPeople(oPrincipal, isGroup = null) {\r\n  const people = {\r\n    ID: oPrincipal.get_id(),\r\n    Title: oPrincipal.get_title(),\r\n    LoginName: oPrincipal.get_loginName(),\r\n    IsEnsured: true,\r\n    IsGroup:\r\n      isGroup != null\r\n        ? isGroup\r\n        : oPrincipal.constructor.getName() == \"SP.Group\",\r\n    oPrincipal,\r\n  };\r\n  if (oPrincipal.get_email) people.Email = oPrincipal.get_email();\r\n\r\n  return people;\r\n}\r\n\r\n// Used in authorization\r\nexport function getDefaultGroups() {\r\n  const defaultGroups = sal.globalConfig.defaultGroups;\r\n  const result = {};\r\n  Object.keys(defaultGroups).forEach((key) => {\r\n    result[key] = principalToPeople(defaultGroups[key], true);\r\n  });\r\n  return result;\r\n}\r\n\r\nconst siteGroups = {};\r\n\r\nexport async function getGroupUsers(groupName) {\r\n  if (siteGroups[groupName]?.Users?.constructor == Array) {\r\n    return siteGroups[groupName].Users;\r\n  }\r\n  const url = `/web/sitegroups/GetByName('${groupName}')?$expand=Users`;\r\n\r\n  const groupResult = await fetchSharePointData(url);\r\n\r\n  const group = groupResult.d;\r\n  group.Users = group.Users?.results;\r\n\r\n  siteGroups[groupName] = group;\r\n  return group.Users;\r\n}\r\n\r\n// Used in router\r\nexport const webRoot =\r\n  _spPageContextInfo.webAbsoluteUrl == \"/\"\r\n    ? \"\"\r\n    : _spPageContextInfo.webAbsoluteUrl;\r\n\r\nexport async function InitSal() {\r\n  if (sal.utilities) return;\r\n  console.log(\"Init Sal\");\r\n  var currCtx = SP.ClientContext.get_current();\r\n  var web = currCtx.get_web();\r\n  //sal.site = sal.siteConnection;\r\n\r\n  // Get default groups\r\n  sal.globalConfig.defaultGroups = {\r\n    owners: web.get_associatedOwnerGroup(),\r\n    members: web.get_associatedMemberGroup(),\r\n    visitors: web.get_associatedVisitorGroup(),\r\n  };\r\n  currCtx.load(sal.globalConfig.defaultGroups.owners);\r\n  currCtx.load(sal.globalConfig.defaultGroups.members);\r\n  currCtx.load(sal.globalConfig.defaultGroups.visitors);\r\n\r\n  // Get Current User information\r\n  var user = web.get_currentUser(); //must load this to access info.\r\n  currCtx.load(user);\r\n\r\n  // Get the site groups\r\n  var siteGroupCollection = web.get_siteGroups();\r\n  currCtx.load(siteGroupCollection);\r\n\r\n  // Get the roles upfront so we can validate they're present on the site.\r\n  sal.globalConfig.roles = [];\r\n  var oRoleDefinitions = currCtx.get_web().get_roleDefinitions();\r\n  currCtx.load(oRoleDefinitions);\r\n\r\n  return new Promise((resolve, reject) => {\r\n    currCtx.executeQueryAsync(\r\n      function () {\r\n        sal.globalConfig.currentUser = user;\r\n\r\n        var listItemEnumerator = siteGroupCollection.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          sal.globalConfig.siteGroups.push(principalToPeople(oListItem));\r\n        }\r\n\r\n        // Role Definitions\r\n        var oEnumerator = oRoleDefinitions.getEnumerator();\r\n        while (oEnumerator.moveNext()) {\r\n          var oRoleDefinition = oEnumerator.get_current();\r\n          sal.globalConfig.roles.push(oRoleDefinition.get_name());\r\n        }\r\n\r\n        sal.config = new sal.NewAppConfig();\r\n        sal.utilities = new sal.NewUtilities();\r\n        resolve();\r\n      },\r\n      function (sender, args) {\r\n        alert(\"Error initializing SAL\");\r\n        reject();\r\n      }\r\n    );\r\n  });\r\n  // console.log()\r\n}\r\n\r\nsal.NewAppConfig = function () {\r\n  // TODO: We should take in configuration from our current application, roles/groups etc.\r\n  var siteRoles = {};\r\n  siteRoles.roles = {\r\n    FullControl: \"Full Control\",\r\n    Design: \"Design\",\r\n    Edit: \"Edit\",\r\n    Contribute: \"Contribute\",\r\n    RestrictedContribute: \"Restricted Contribute\",\r\n    InitialCreate: \"Initial Create\",\r\n    Read: \"Read\",\r\n    RestrictedRead: \"Restricted Read\",\r\n    LimitedAccess: \"Limited Access\",\r\n  };\r\n  siteRoles.fulfillsRole = function (inputRole, targetRole) {\r\n    // the site roles are already in authoritative order\r\n    const roles = Object.values(siteRoles.roles);\r\n    if (!roles.includes(inputRole) || !roles.includes(targetRole)) return false;\r\n\r\n    return roles.indexOf(inputRole) <= roles.indexOf(targetRole);\r\n  };\r\n\r\n  siteRoles.validate = function () {\r\n    Object.keys(siteRoles.roles).forEach(function (role) {\r\n      var roleName = siteRoles.roles[role];\r\n      if (!sal.globalConfig.roles.includes(roleName)) {\r\n        console.error(roleName + \" is not in the global roles list\");\r\n      } else {\r\n        console.log(roleName);\r\n      }\r\n    });\r\n  };\r\n\r\n  var siteGroups = {\r\n    groups: {\r\n      Owners: \"workorder Owners\",\r\n      Members: \"workorder Members\",\r\n      Visitors: \"workorder Visitors\",\r\n      RestrictedReaders: \"Restricted Readers\",\r\n    },\r\n  };\r\n\r\n  var publicMembers = {\r\n    siteRoles,\r\n    siteGroups,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\n// Used in Authorization\r\nexport async function getUserPropsAsync(userId = _spPageContextInfo.userId) {\r\n  // We need to make two api calls, one to user info list, and one to web\r\n  // const userInfoUrl = `/Web/lists/getbytitle('User%20Information%20List')/Items(${userId})`;\r\n  const userPropsUrl = `/sp.userprofiles.peoplemanager/getmyproperties`;\r\n  // const userGroupUrl = `/Web/GetUserById(${userId})/Groups`;\r\n\r\n  // Get more user info:\r\n  const userInfoUrl = `/Web/GetUserById(${userId})/?$expand=Groups`;\r\n\r\n  const userInfo = (await fetchSharePointData(userInfoUrl)).d;\r\n\r\n  // TODO: See if we can just select the properties we need\r\n  // const userPropsUrl = `/sp.userprofiles.peoplemanager/getpropertiesfor(@v)?@v='${encodeURIComponent(\r\n  //   userInfo.LoginName\r\n  // )}'`;\r\n\r\n  const userProps = (await fetchSharePointData(userPropsUrl))?.d\r\n    .UserProfileProperties.results;\r\n\r\n  function findPropValue(props, key) {\r\n    return props.find((prop) => prop.Key == key)?.Value;\r\n  }\r\n\r\n  return {\r\n    ID: userId,\r\n    Title: userInfo.Title,\r\n    LoginName: userInfo.LoginName,\r\n    WorkPhone: findPropValue(userProps, \"WorkPhone\"),\r\n    EMail: findPropValue(userProps, \"WorkEmail\"), // TODO: Do we still need this spelling?\r\n    IsEnsured: true,\r\n    IsGroup: false,\r\n    Groups: userInfo.Groups?.results?.map((group) => {\r\n      return {\r\n        ...group,\r\n        ID: group.Id,\r\n        IsGroup: true,\r\n        IsEnsured: true,\r\n      };\r\n    }),\r\n  };\r\n}\r\n\r\n// TODO: DEPRECATED remove after verification\r\nasync function getUserPropsAsyncDeprecated() {\r\n  // TODO: We aren't getting the phone number, need to query userprofile service\r\n  return new Promise((resolve, reject) => {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oUser = web.get_currentUser();\r\n    var oGroups = oUser.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      const user = {\r\n        ID: oUser.get_id(),\r\n        Title: oUser.get_title(),\r\n        LoginName: oUser.get_loginName(),\r\n        IsEnsured: true,\r\n        IsGroup: false,\r\n        Groups: [],\r\n      };\r\n\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        user.Groups.push(principalToPeople(oGroup));\r\n      }\r\n      resolve(user);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    currCtx.load(oUser);\r\n    currCtx.load(oGroups);\r\n    const data = { oUser, oGroups, resolve, reject };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  });\r\n}\r\n\r\nsal.NewUtilities = function () {\r\n  // TODO: Split this up into UserManager, GroupManager, etc\r\n  function createSiteGroup(groupName, permissions, callback) {\r\n    /* groupName: the name of the new SP Group\r\n     *  permissions: an array of permissions to assign to the group\r\n     * groupOwner: the name of the owner group\r\n     */\r\n    callback = callback === undefined ? null : callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var groupCreationInfo = new SP.GroupCreationInformation();\r\n    groupCreationInfo.set_title(groupName);\r\n    this.oGroup = oWebsite.get_siteGroups().add(groupCreationInfo);\r\n    oGroup.set_owner(oWebsite.get_associatedOwnerGroup());\r\n\r\n    oGroup.update();\r\n    var collRoleDefinitionBinding =\r\n      SP.RoleDefinitionBindingCollection.newObject(clientContext);\r\n\r\n    this.oRoleDefinitions = [];\r\n\r\n    permissions.forEach(function (perm) {\r\n      var oRoleDefinition = oWebsite.get_roleDefinitions().getByName(perm);\r\n      this.oRoleDefinitions.push(oRoleDefinition);\r\n      collRoleDefinitionBinding.add(oRoleDefinition);\r\n    });\r\n\r\n    var collRollAssignment = oWebsite.get_roleAssignments();\r\n    collRollAssignment.add(oGroup, collRoleDefinitionBinding);\r\n\r\n    function onCreateGroupSucceeded() {\r\n      var roleInfo =\r\n        oGroup.get_title() +\r\n        \" created and assigned to \" +\r\n        oRoleDefinitions.forEach(function (rd) {\r\n          rd + \", \";\r\n        });\r\n      if (callback) {\r\n        callback(oGroup.get_id());\r\n      }\r\n      console.log(roleInfo);\r\n    }\r\n\r\n    function onCreateGroupFailed(sender, args) {\r\n      alert(\r\n        groupnName +\r\n          \" - Create group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    clientContext.load(oGroup, \"Title\");\r\n\r\n    var data = {\r\n      groupName: groupName,\r\n      oGroup: oGroup,\r\n      oRoleDefinition: oRoleDefinition,\r\n      callback: callback,\r\n    };\r\n\r\n    clientContext.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateGroupSucceeded),\r\n      Function.createDelegate(data, onCreateGroupFailed)\r\n    );\r\n  }\r\n\r\n  function getUserGroups(user, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var everyone = web.ensureUser(user);\r\n    var oGroups = everyone.get_groups();\r\n\r\n    function onQueryGroupsSucceeded() {\r\n      var groups = new Array();\r\n      var groupsInfo = new String();\r\n      var groupsEnumerator = oGroups.getEnumerator();\r\n      while (groupsEnumerator.moveNext()) {\r\n        var oGroup = groupsEnumerator.get_current();\r\n        var group = principalToPeople(oGroup);\r\n\r\n        groupsInfo +=\r\n          \"\\n\" +\r\n          \"Group ID: \" +\r\n          oGroup.get_id() +\r\n          \", \" +\r\n          \"Title : \" +\r\n          oGroup.get_title();\r\n        groups.push(group);\r\n      }\r\n      console.log(groupsInfo.toString());\r\n      callback(groups);\r\n    }\r\n\r\n    function onQueryGroupsFailed(sender, args) {\r\n      console.error(\r\n        \" Everyone - Query Everyone group failed. \" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    currCtx.load(everyone);\r\n    currCtx.load(oGroups);\r\n    data = { everyone: everyone, oGroups: oGroups, callback: callback };\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryGroupsSucceeded),\r\n      Function.createDelegate(data, onQueryGroupsFailed)\r\n    );\r\n  }\r\n\r\n  function getUsersWithGroup(oGroup, callback) {\r\n    var context = new SP.ClientContext.get_current();\r\n\r\n    var oUsers = oGroup.get_users();\r\n\r\n    function onGetUserSuccess() {\r\n      var userObjs = [];\r\n      var userEnumerator = oUsers.getEnumerator();\r\n      while (userEnumerator.moveNext()) {\r\n        var oUser = userEnumerator.get_current();\r\n        var userObj = principalToPeople(oUser);\r\n        userObjs.push(userObj);\r\n      }\r\n      callback(userObjs);\r\n    }\r\n\r\n    function onGetUserFailed(sender, args) {}\r\n\r\n    var data = { oUsers: oUsers, callback: callback };\r\n    context.load(oUsers);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onGetUserSuccess),\r\n      Function.createDelegate(data, onGetUserFailed)\r\n    );\r\n  }\r\n\r\n  function copyFiles(sourceLib, destLib, callback, onError) {\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourceLib);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        console.log(\"Got the source folder right here!\");\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destLib + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.log(\"Sorry, something messed up: \" + args.get_message());\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  var publicMembers = {\r\n    copyFiles: copyFiles,\r\n    copyFilesAsync,\r\n    createSiteGroup: createSiteGroup,\r\n    getUserGroups: getUserGroups,\r\n    getUsersWithGroup: getUsersWithGroup,\r\n  };\r\n\r\n  return publicMembers;\r\n};\r\n\r\nexport async function copyFileAsync(sourceFilePath, destFilePath) {\r\n  const uri = `/web/getfilebyserverrelativeurl('${sourceFilePath}')/copyto('${destFilePath}')`;\r\n\r\n  const result = await fetchSharePointData(uri, \"POST\");\r\n\r\n  return result;\r\n}\r\n\r\n// Used in Authorization\r\nasync function getCurrentUserPropertiesAsync() {\r\n  var headers = {\r\n    \"Content-Type\": \"application/json;odata=verbose\",\r\n    \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n  };\r\n  try {\r\n    var response = await fetch(\r\n      _spPageContextInfo.webAbsoluteUrl +\r\n        \"/_api/SP.UserProfiles.PeopleManager/GetMyProperties\",\r\n      {\r\n        method: \"GET\",\r\n        headers,\r\n      }\r\n    );\r\n    if (!response.ok) {\r\n      throw new Error(response.status);\r\n    }\r\n\r\n    const data = await response.json();\r\n    sal.globalConfig.currentUserProfile = data.d;\r\n    const requestorPhone = data.d.UserProfileProperties.results.find(function (\r\n      prop\r\n    ) {\r\n      return prop.Key == \"WorkPhone\";\r\n    }).Value;\r\n  } catch (error) {\r\n    console.error(\"Unable to fetch User Properties:\", error);\r\n  }\r\n}\r\n\r\n// Used in Knockout people custom binding\r\nexport async function ensurePerson(person) {\r\n  const uri = `/web/getuserbyid(${person.ID})`;\r\n  // const alternateUri = `/web/siteusers(@v)?@v='i%3A0%23.f%7Cmembership%7C${person.LoginName}`;\r\n\r\n  const user = await fetchSharePointData(uri);\r\n  if (!user) return;\r\n\r\n  Object.assign(person, user.d);\r\n  return person;\r\n}\r\n\r\nexport async function ensureUserByKeyAsync(userName) {\r\n  return new Promise((resolve, reject) => {\r\n    var group = sal.globalConfig.siteGroups.find(function (group) {\r\n      return group.LoginName == userName;\r\n    });\r\n\r\n    if (group) {\r\n      resolve(group);\r\n      return;\r\n    }\r\n\r\n    var context = new SP.ClientContext.get_current();\r\n    var oUser = context.get_web().ensureUser(userName);\r\n\r\n    function onEnsureUserSucceeded(sender, args) {\r\n      const user = principalToPeople(oUser);\r\n      resolve(user);\r\n    }\r\n\r\n    function onEnsureUserFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to ensure user :\" +\r\n          args.get_message() +\r\n          \"\\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n      reject(args);\r\n    }\r\n    const data = { oUser, resolve, reject };\r\n\r\n    context.load(oUser);\r\n    context.executeQueryAsync(\r\n      Function.createDelegate(data, onEnsureUserSucceeded),\r\n      Function.createDelegate(data, onEnsureUserFailed)\r\n    );\r\n  });\r\n}\r\n\r\nfunction getSPSiteGroupByName(groupName) {\r\n  var userGroup = null;\r\n  if (this.globalConfig.siteGroups != null) {\r\n    userGroup = this.globalConfig.siteGroups.find(function (group) {\r\n      return group.Title == groupName;\r\n    });\r\n  }\r\n  return userGroup;\r\n}\r\n\r\nexport class ItemPermissions {\r\n  constructor({ hasUniqueRoleAssignments, roles }) {\r\n    this.hasUniqueRoleAssignments = hasUniqueRoleAssignments;\r\n    this.roles = roles;\r\n  }\r\n\r\n  hasUniqueRoleAssignments;\r\n  roles = [];\r\n\r\n  addPrincipalRole(principal, roleName) {\r\n    const newRoleDef = new RoleDef({ name: roleName });\r\n    const principalRole = this.getPrincipalRole(principal);\r\n\r\n    if (principalRole) {\r\n      principalRole.addRoleDef(newRoleDef);\r\n      return;\r\n    }\r\n\r\n    const newRole = new Role({ principal });\r\n    newRole.addRoleDef(newRoleDef);\r\n    this.roles.push(newRole);\r\n  }\r\n\r\n  getPrincipalRole(principal) {\r\n    return this.roles.find((role) => role.principal.ID == principal.ID);\r\n  }\r\n\r\n  principalHasPermissionKind(principal, permission) {\r\n    const role = this.getPrincipalRole(principal);\r\n    return role?.roleDefs.find((roleDef) =>\r\n      roleDef.basePermissions?.has(permission)\r\n    )\r\n      ? true\r\n      : false;\r\n  }\r\n\r\n  getValuePairs() {\r\n    // For backwards compatibility\r\n    return this.roles.flatMap((role) =>\r\n      role.roleDefs.map((roleDef) => [role.principal.Title, roleDef.name])\r\n    );\r\n  }\r\n\r\n  static fromRestResult(result) {\r\n    const roles = result.RoleAssignments.results.map(\r\n      Role.fromRestRoleAssignment\r\n    );\r\n\r\n    return new ItemPermissions({\r\n      hasUniqueRoleAssignments: result.HasUniqueRoleAssignments,\r\n      roles,\r\n    });\r\n  }\r\n}\r\n\r\nexport class Role {\r\n  constructor({ principal, roleDefs = [] }) {\r\n    this.principal = principal;\r\n    this.roleDefs = roleDefs;\r\n  }\r\n\r\n  principal; // People Entity\r\n  roleDefs = [];\r\n\r\n  addRoleDef(roleDef) {\r\n    this.roleDefs.push(roleDef);\r\n  }\r\n\r\n  static fromRestRoleAssignment(role) {\r\n    return new Role({\r\n      principal: { ...role.Member, ID: role.Member.Id },\r\n      roleDefs: role.RoleDefinitionBindings.results.map(\r\n        RoleDef.fromRestRoleDef\r\n      ),\r\n    });\r\n  }\r\n  static fromJsomRole(role) {\r\n    const newRole = new Role({\r\n      principal: principalToPeople(role.get_member()),\r\n    });\r\n\r\n    var roleDefs = role.get_roleDefinitionBindings();\r\n    if (roleDefs != null) {\r\n      var roleDefsEnumerator = roleDefs.getEnumerator();\r\n      while (roleDefsEnumerator.moveNext()) {\r\n        var roleDef = roleDefsEnumerator.get_current();\r\n        newRole.roleDefs.push(RoleDef.fromJsomRoleDef(roleDef));\r\n      }\r\n    }\r\n    return newRole;\r\n  }\r\n}\r\n\r\nexport class RoleDef {\r\n  constructor({ name, basePermissions = null }) {\r\n    this.name = name;\r\n    this.basePermissions = basePermissions;\r\n  }\r\n  name;\r\n  basePermissions;\r\n\r\n  static fromRestRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({\r\n      name: roleDef.Name,\r\n      basePermissions: roleDef.BasePermissions,\r\n    });\r\n    Object.assign(newRoleDef, roleDef);\r\n    return newRoleDef;\r\n  }\r\n\r\n  static fromJsomRoleDef(roleDef) {\r\n    const newRoleDef = new RoleDef({ name: roleDef.get_name() });\r\n    newRoleDef.basePermissions = roleDef.get_basePermissions();\r\n\r\n    return newRoleDef;\r\n  }\r\n}\r\n\r\nexport function SPList(listDef) {\r\n  /*\r\n      Expecting a list definition object in the following format:\r\n        var assignmentListDef = {\r\n        name: \"Assignment\",\r\n        title: \"Assignment\"\r\n      };\r\n    */\r\n\r\n  /*****************************************************************\r\n                                Globals       \r\n    ******************************************************************/\r\n\r\n  var self = this;\r\n\r\n  self.config = {\r\n    def: listDef,\r\n  };\r\n\r\n  /*****************************************************************\r\n                                Common Private Methods       \r\n    ******************************************************************/\r\n  async function init() {\r\n    if (!self.config.fieldSchema) {\r\n      const listEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')?$expand=Fields`;\r\n      const list = await fetchSharePointData(listEndpoint);\r\n      // const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      //const fields = await fetchData(apiEndpoint);\r\n      self.config.guid = list.d.Id;\r\n      self.config.fieldSchema = list.d.Fields.results;\r\n    }\r\n  }\r\n\r\n  init();\r\n\r\n  /*****************************************************************\r\n                                Common Public Methods       \r\n    ******************************************************************/\r\n\r\n  async function setListPermissionsAsync(itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // await executeQuery(currCtx).catch((sender, args) => {\r\n    //   console.warn(\"Unable to get list: \", sender);\r\n    //   return;\r\n    // });\r\n\r\n    return setResourcePermissionsAsync(oList, itemPermissions, reset);\r\n  }\r\n\r\n  function setListPermissions(valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n\r\n    var users = new Array();\r\n    var resolvedGroups = new Array();\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup) {\r\n        resolvedGroups.push([resolvedGroup, vp[1]]);\r\n      } else {\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindItemSucceeded() {\r\n      console.log(\"Successfully found item\");\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      if (reset) {\r\n        oList.resetRoleInheritance();\r\n        oList.breakRoleInheritance(false, false);\r\n        oList\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        oList.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        oList.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { oList: oList, callback: callback };\r\n\r\n      function onSetListPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        callback(oList);\r\n      }\r\n\r\n      function onSetListPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on List: \" +\r\n            this.oList.get_title() +\r\n            args.get_message() +\r\n            \"\\n\",\r\n          args.get_stackTrace()\r\n        );\r\n      }\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetListPermissionsSuccess),\r\n        Function.createDelegate(data, onSetListPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindItemFailed(sender, args) {\r\n      console.error(\r\n        \"Failed to find List: \" + this.oList.get_title + args.get_message(),\r\n        args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      oList: oList,\r\n      users: users,\r\n      resolvedGroups: resolvedGroups,\r\n      callback: callback,\r\n    };\r\n    //let data = { title: oListItem.get_item(\"Title\"), oListItem: oListItem };\r\n\r\n    currCtx.load(oList);\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindItemSucceeded),\r\n      Function.createDelegate(data, onFindItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                createListItem      \r\n    ******************************************************************/\r\n  function mapObjectToListItem(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    if (!Array.isArray(val)) {\r\n      return mapItemToListItem(val);\r\n    }\r\n    return val\r\n      .map((item) => {\r\n        return mapItemToListItem(item);\r\n      })\r\n      .join(\";#\");\r\n  }\r\n\r\n  function mapItemToListItem(item) {\r\n    if (item.ID) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return `${item.ID};#${item.LookupValue ?? \"\"}`;\r\n    }\r\n    if (item.LookupValue) {\r\n      //var lookupValue = new SP.FieldLookupValue();\r\n      //lookupValue.set_lookupId(item.id);\r\n      //return lookupValue;\r\n      return item.LookupValue;\r\n    }\r\n    if (item.constructor.getName() == \"Date\") {\r\n      return item.toISOString();\r\n    }\r\n    return item;\r\n  }\r\n\r\n  async function createListItemAsync(entity, folderPath = null) {\r\n    let serverRelFolderPath;\r\n\r\n    if (folderPath) {\r\n      serverRelFolderPath = getServerRelativeFolderPath(folderPath);\r\n      // await ensureFolder(serverRelFolderPath);\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      //self.updateConfig();\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const itemCreateInfo = new SP.ListItemCreationInformation();\r\n\r\n      if (folderPath) {\r\n        itemCreateInfo.set_folderUrl(serverRelFolderPath);\r\n      }\r\n\r\n      const oListItem = oList.addItem(itemCreateInfo);\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onCreateListItemSucceeded() {\r\n        resolve(oListItem.get_id());\r\n      }\r\n\r\n      function onCreateListItemFailed(sender, args) {\r\n        console.error(\"Create Item Failed - List: \" + self.config.def.name);\r\n        console.error(\"ValuePairs\", entity);\r\n        console.error(sender, args);\r\n        reject(sender);\r\n      }\r\n\r\n      const data = { entity, oListItem, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onCreateListItemSucceeded),\r\n        Function.createDelegate(data, onCreateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                                getListItems      \r\n    ******************************************************************/\r\n  function mapListItemToObject(val) {\r\n    if (!val) {\r\n      return val;\r\n    }\r\n    let out = {};\r\n    switch (val.constructor.getName()) {\r\n      case \"SP.FieldUserValue\":\r\n        out.LoginName = val.get_email();\r\n      case \"SP.FieldLookupValue\":\r\n        out.ID = val.get_lookupId();\r\n        out.LookupValue = val.get_lookupValue();\r\n        out.Title = val.get_lookupValue();\r\n        break;\r\n      default:\r\n        out = val;\r\n    }\r\n    return out;\r\n  }\r\n\r\n  function getListItems(caml, fields, callback) {\r\n    /*\r\n        Obtain all list items that match the querystring passed by caml.\r\n        */\r\n    var camlQuery = new SP.CamlQuery.createAllItemsQuery();\r\n\r\n    camlQuery.set_viewXml(caml);\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var collListItem = oList.getItems(camlQuery);\r\n\r\n    function onGetListItemsSucceeded() {\r\n      var self = this;\r\n      var listItemEnumerator = self.collListItem.getEnumerator();\r\n\r\n      const foundObjects = [];\r\n\r\n      while (listItemEnumerator.moveNext()) {\r\n        var oListItem = listItemEnumerator.get_current();\r\n        var listObj = {};\r\n        fields.forEach((field) => {\r\n          var colVal = oListItem.get_item(field);\r\n          //console.log(`SAL: Setting ${field} to`, colVal);\r\n          listObj[field] = Array.isArray(colVal)\r\n            ? colVal.map((val) => mapListItemToObject(val))\r\n            : mapListItemToObject(colVal);\r\n        });\r\n        //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n        // listObj.oListItem = oListItem;\r\n        foundObjects.push(listObj);\r\n      }\r\n      //this.setState({ focusedItems })\r\n      //console.log(\"calling callback get list\");\r\n      callback(foundObjects);\r\n    }\r\n\r\n    function onGetListItemsFailed(sender, args) {\r\n      console.log(\"unsuccessful read\", sender);\r\n\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n    var data = {\r\n      collListItem: collListItem,\r\n      callback: callback,\r\n      fields,\r\n      camlQuery,\r\n    };\r\n\r\n    currCtx.load(collListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemsSucceeded),\r\n      Function.createDelegate(data, onGetListItemsFailed)\r\n    );\r\n  }\r\n\r\n  function getListItemsAsync({ fields = null, caml = null }) {\r\n    if (!caml) {\r\n      var caml =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">0</Value>' +\r\n        \"</Eq></Where></Query></View>\";\r\n    }\r\n    return new Promise((resolve, reject) => {\r\n      getListItems(caml, fields, resolve);\r\n    });\r\n  }\r\n\r\n  function findByIdAsync(id, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        findById(id, fields, resolve);\r\n      } catch (e) {\r\n        reject(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  async function getById(id, fields) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})?$Select=${queryFields}&$expand=${expandFields}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    return result.d;\r\n  }\r\n\r\n  async function getListFields() {\r\n    if (!self.config.fieldSchema) {\r\n      const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/Fields`;\r\n      const fields = await fetchSharePointData(apiEndpoint);\r\n      self.config.fieldSchema = fields.d.results;\r\n    }\r\n    return self.config.fieldSchema;\r\n  }\r\n\r\n  async function getQueryFields(fields) {\r\n    const queryFields = [];\r\n    const expandFields = [];\r\n\r\n    const listFields = await getListFields();\r\n    fields.map((f) => {\r\n      // TODO: Figure out why FileRef is pretending to be a lookup\r\n      if (f == \"FileRef\") {\r\n        queryFields.push(f);\r\n        return;\r\n      }\r\n\r\n      if (f.includes(\"/\")) {\r\n        queryFields.push(f);\r\n        expandFields.push(f.split(\"/\")[0]);\r\n        return;\r\n      }\r\n      const fieldSchema = listFields.find((lf) => lf.StaticName == f);\r\n      if (!fieldSchema) {\r\n        alert(`Field '${f}' not found on list ${self.config.def.name}`);\r\n        return;\r\n      }\r\n\r\n      const idString = f + \"/ID\";\r\n      let titleString = f + \"/Title\";\r\n      switch (fieldSchema.TypeAsString) {\r\n        case \"LookupMulti\":\r\n        case \"Lookup\":\r\n          titleString = f + \"/\" + fieldSchema.LookupField;\r\n        case \"User\":\r\n          queryFields.push(idString);\r\n          queryFields.push(titleString);\r\n          expandFields.push(f);\r\n          // expandFields.push(titleString);\r\n          break;\r\n        case \"Choice\":\r\n        default:\r\n          queryFields.push(f);\r\n      }\r\n    });\r\n    return [queryFields, expandFields];\r\n  }\r\n\r\n  // { column, value, type = \"LookupValue\" }\r\n  async function findByColumnValueAsync(\r\n    columnFilters,\r\n    { orderByColumn = null, sortAsc },\r\n    { count = null, includePermissions = false, includeFolders = false },\r\n    fields\r\n  ) {\r\n    const [queryFields, expandFields] = await getQueryFields(fields);\r\n    if (includePermissions) {\r\n      queryFields.push(\"RoleAssignments\");\r\n      queryFields.push(\"HasUniqueRoleAssignments\");\r\n      expandFields.push(\"RoleAssignments\");\r\n    }\r\n    const orderBy = orderByColumn\r\n      ? `$orderby=${orderByColumn} ${sortAsc ? \"asc\" : \"desc\"}`\r\n      : \"\";\r\n    // TODO: fieldfilter should use 'lookupcolumnId' e.g. ServiceTypeId eq 1\r\n    const colFilterArr = columnFilters.map((colFilter) => {\r\n      if (typeof colFilter == \"string\") return colFilter;\r\n\r\n      const value = colFilter.value ? `'${colFilter.value}'` : colFilter.value;\r\n      return `(${colFilter.column} ${colFilter.op ?? \"eq\"} ${value})`; // '${colFilter.value}'\r\n    });\r\n    if (!includeFolders) colFilterArr.push(`FSObjType eq '0'`);\r\n\r\n    const filter = \"$filter=\" + colFilterArr.join(` and `);\r\n\r\n    //const fsObjTypeFilter = `FSObjType eq '0'`;\r\n    // const fieldFilter = `${column} eq '${value}'`;\r\n    // const filter2 = !includeFolders\r\n    //   ? `$filter=(${fieldFilter}) and (${fsObjTypeFilter})`\r\n    //   : `$filter=${fieldFilter}`;\r\n\r\n    const include = \"$select=\" + queryFields;\r\n    const expand = `$expand=` + expandFields;\r\n    const page = count ? `$top=${count}` : \"\";\r\n\r\n    const apiEndpoint =\r\n      `/web/lists/GetByTitle('${self.config.def.title}')/items?` +\r\n      `${include}&${expand}&${orderBy}&${filter}&${page}`;\r\n\r\n    const result = await fetchSharePointData(apiEndpoint);\r\n    const cursor = {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n\r\n    // if (window.DEBUG) console.log(cursor);\r\n    return cursor;\r\n  }\r\n\r\n  async function loadNextPage(cursor) {\r\n    const result = await fetchSharePointData(cursor._next);\r\n    return {\r\n      results: result?.d?.results,\r\n      _next: result?.d?.__next,\r\n    };\r\n  }\r\n\r\n  function findById(id, fields, callback) {\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n    var oListItem = oList.getItemById(id);\r\n\r\n    function onGetListItemSucceeded() {\r\n      const listObj = {};\r\n      fields.forEach((field) => {\r\n        var colVal = oListItem.get_item(field);\r\n        //console.log(`SAL: Setting ${field} to`, colVal);\r\n        listObj[field] = Array.isArray(colVal)\r\n          ? colVal.map((val) => mapListItemToObject(val))\r\n          : mapListItemToObject(colVal);\r\n      });\r\n      callback(listObj);\r\n    }\r\n\r\n    function onGetListItemFailed(sender, args) {\r\n      console.error(\"SAL: findById - List: \" + self.config.def.name);\r\n      console.error(\"Fields\", this);\r\n      console.error(sender, args);\r\n    }\r\n\r\n    var data = {\r\n      oListItem,\r\n      callback,\r\n      fields,\r\n    };\r\n    currCtx.load(oListItem);\r\n    // currCtx.load(oListItem, `Include(${fields.join(\", \")})`);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onGetListItemSucceeded),\r\n      Function.createDelegate(data, onGetListItemFailed)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                            updateListItem      \r\n    ******************************************************************/\r\n\r\n  function updateListItemAsync(entity) {\r\n    if (!entity?.ID) {\r\n      return false;\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(entity.ID);\r\n\r\n      const restrictedFields = [\r\n        \"ID\",\r\n        \"Author\",\r\n        \"Created\",\r\n        \"Editor\",\r\n        \"Modified\",\r\n      ];\r\n\r\n      Object.keys(entity)\r\n        .filter((key) => !restrictedFields.includes(key))\r\n        .forEach((key) => {\r\n          oListItem.set_item(key, mapObjectToListItem(entity[key]));\r\n        });\r\n\r\n      oListItem.update();\r\n\r\n      function onUpdateListItemsSucceeded() {\r\n        //alert('Item updated!');\r\n        console.log(\"Successfully updated \" + this.oListItem.get_item(\"Title\"));\r\n        resolve();\r\n      }\r\n\r\n      function onUpdateListItemFailed(sender, args) {\r\n        console.error(\"Update Failed - List: \" + self.config.def.name);\r\n        console.error(\"Item Id\", this.oListItem.get_id() ?? \"N/A\");\r\n        console.error(entity);\r\n        console.error(sender, args);\r\n        reject(args);\r\n      }\r\n\r\n      const data = { oListItem, entity, resolve, reject };\r\n\r\n      currCtx.load(oListItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onUpdateListItemsSucceeded),\r\n        Function.createDelegate(data, onUpdateListItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            deleteListItem      \r\n    ******************************************************************/\r\n  function deleteListItem(id, callback) {\r\n    //[[\"ColName\", \"Value\"], [\"Col2\", \"Value2\"]]\r\n    //self.callbackDeleteListItem = callback;\r\n\r\n    var currCtx = new SP.ClientContext.get_current();\r\n    var web = currCtx.get_web();\r\n    var oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    var data = { callback: callback };\r\n    const oListItem = oList.getItemById(id);\r\n    oListItem.deleteObject();\r\n\r\n    function onDeleteListItemsSucceeded(sender, args) {\r\n      //alert('Item updated!');\r\n      callback();\r\n    }\r\n\r\n    function onDeleteListItemsFailed(sender, args) {\r\n      console.error(\r\n        \"sal.SPList.deleteListItem: Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n \" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n \" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onDeleteListItemsSucceeded),\r\n      Function.createDelegate(data, onDeleteListItemsFailed)\r\n    );\r\n  }\r\n\r\n  async function deleteListItemAsync(id) {\r\n    const apiEndpoint = `/web/lists/GetByTitle('${self.config.def.title}')/items(${id})`;\r\n    return await fetchSharePointData(apiEndpoint, \"DELETE\", {\r\n      \"If-Match\": \"*\",\r\n    });\r\n    // return new Promise((resolve, reject) => deleteListItem(id, resolve));\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Permissions  \r\n    ******************************************************************/\r\n  /**\r\n   * Documentation - setItemPermissions\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {ItemPermissions} itemPermissions an instance of ItemPermissions\r\n   */\r\n  async function setItemPermissionsAsync(id, itemPermissions, reset) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n\r\n    const oListItem = await getoListItemByIdAsync(id);\r\n\r\n    return setResourcePermissionsAsync(oListItem, itemPermissions, reset);\r\n  }\r\n\r\n  async function setResourcePermissionsAsync(\r\n    oListItem,\r\n    itemPermissions,\r\n    reset\r\n  ) {\r\n    if (reset) {\r\n      oListItem.resetRoleInheritance();\r\n      oListItem.breakRoleInheritance(false, false);\r\n    }\r\n\r\n    // const result = await new Promise((resolve, reject) => {\r\n    //   currCtx.executeQueryAsync(\r\n    //     () => {\r\n    //       resolve();\r\n    //     },\r\n    //     (sender, args) => {\r\n    //       console.error(\r\n    //         \"Failed to break permissions on item: \" +\r\n    //           this.oListItem.get_lookupValue() +\r\n    //           args.get_message(),\r\n    //         args\r\n    //       );\r\n    //       reject();\r\n    //     }\r\n    //   );\r\n    // });\r\n\r\n    for (const role of itemPermissions.roles) {\r\n      const ensuredPrincipalResult = await ensureUserByKeyAsync(\r\n        role.principal.Title\r\n      );\r\n      if (!ensuredPrincipalResult) return;\r\n\r\n      const currCtx2 = new SP.ClientContext.get_current();\r\n      const web = currCtx2.get_web();\r\n\r\n      const oPrincipal = ensuredPrincipalResult.oPrincipal;\r\n\r\n      currCtx2.load(oPrincipal);\r\n\r\n      role.roleDefs.map((roleDef) => {\r\n        const roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx2);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(roleDef.name)\r\n        );\r\n        oListItem.get_roleAssignments().add(oPrincipal, roleDefBindingColl);\r\n      });\r\n\r\n      const data = {};\r\n      await executeQuery(currCtx2).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to set role permissions on item id ${id} for principal ${role.principal.Title} ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n\r\n    if (reset) {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n\r\n      oListItem\r\n        .get_roleAssignments()\r\n        .getByPrincipal(sal.globalConfig.currentUser)\r\n        .deleteObject();\r\n\r\n      await executeQuery(currCtx).catch(({ sender, args }) => {\r\n        console.error(\r\n          `Failed to remove role permissions on item id ${id} for Current User ` +\r\n            args.get_message(),\r\n          args\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  function getoListItemByIdAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const oListItem = oList.getItemById(id);\r\n      currCtx.executeQueryAsync(\r\n        () => {\r\n          resolve(oListItem);\r\n        },\r\n        (sender, args) => {\r\n          console.error(\r\n            \"Failed to find item: \" + id + args.get_message(),\r\n            args\r\n          );\r\n          reject();\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Documentation - getItemPermissionsAsync\r\n   * @param {number} id Item identifier, obtain using getListItems above\r\n   * @param {Function} callback The callback function to execute after\r\n   *  obtaining permissions\r\n   */\r\n  function getItemPermissionsAsync(id) {\r\n    return new Promise((resolve, reject) => {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var oList = web.get_lists().getByTitle(self.config.def.title);\r\n      var camlQuery = new SP.CamlQuery();\r\n      camlQuery.set_viewXml(\r\n        '<View><Query><Where><Eq><FieldRef Name=\"ID\"/><Value Type=\"Text\">' +\r\n          id +\r\n          \"</Value></Eq></Where></Query></View>\"\r\n      );\r\n\r\n      var oListItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(\r\n        oListItems,\r\n        \"Include(ID, HasUniqueRoleAssignments, RoleAssignments, RoleAssignments.Include(Member, RoleDefinitionBindings))\"\r\n      );\r\n\r\n      function onQuerySuccess() {\r\n        var listItemEnumerator = oListItems.getEnumerator();\r\n\r\n        while (listItemEnumerator.moveNext()) {\r\n          var oListItem = listItemEnumerator.get_current();\r\n          var itemPermissions = new ItemPermissions({\r\n            hasUniqueRoleAssignments: oListItem.get_hasUniqueRoleAssignments(),\r\n            roles: [],\r\n          });\r\n\r\n          var roleEnumerator = oListItem.get_roleAssignments().getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            var roleColl = roleEnumerator.get_current();\r\n            const role = Role.fromJsomRole(roleColl);\r\n            // var principal = roleColl.get_member();\r\n\r\n            // const roleDef = {\r\n            //   principal: principalToPeople(principal),\r\n            //   permissions: [],\r\n            // };\r\n\r\n            // const roleDefBindingCollEnumerator = roleColl\r\n            //   .get_roleDefinitionBindings()\r\n            //   .getEnumerator();\r\n            // while (roleDefBindingCollEnumerator.moveNext()) {\r\n            //   const role = roleDefBindingCollEnumerator.get_current();\r\n            //   roleDef.permissions.push(role.get_name());\r\n            // }\r\n            itemPermissions.roles.push(role);\r\n          }\r\n          resolve(itemPermissions);\r\n          break;\r\n        }\r\n      }\r\n\r\n      function onQueryFailed(sender, args) {\r\n        reject(args.get_message());\r\n      }\r\n\r\n      const data = {\r\n        oListItems,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onQuerySuccess),\r\n        Function.createDelegate(data, onQueryFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getListPermissions() {\r\n    const url =\r\n      `/web/lists/getByTitle('${self.config.def.name}')` +\r\n      `?$select=HasUniqueRoleAssignments,RoleAssignments` +\r\n      `&$expand=RoleAssignments/Member,RoleAssignments/RoleDefinitionBindings`;\r\n\r\n    const headers = {\r\n      \"Cache-Control\": \"no-cache\",\r\n    };\r\n    const result = await fetchSharePointData(url, \"GET\", headers);\r\n\r\n    if (!result) return;\r\n\r\n    return ItemPermissions.fromRestResult(result.d);\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Folders          \r\n    ******************************************************************/\r\n\r\n  function getServerRelativeFolderPath(relFolderPath) {\r\n    let builtPath = sal.globalConfig.siteUrl;\r\n\r\n    builtPath += self.config.def.isLib\r\n      ? \"/\" + self.config.def.name\r\n      : \"/Lists/\" + self.config.def.name;\r\n\r\n    if (relFolderPath) {\r\n      builtPath += \"/\" + relFolderPath;\r\n    }\r\n\r\n    return builtPath;\r\n  }\r\n\r\n  function upsertFolderPathAsync(folderPath) {\r\n    if (self.config.def.isLib) {\r\n      return new Promise((resolve, reject) =>\r\n        upsertLibFolderByPath(folderPath, resolve)\r\n      );\r\n    }\r\n    return new Promise((resolve, reject) =>\r\n      upsertListFolderByPath(folderPath, resolve)\r\n    );\r\n  }\r\n\r\n  async function setFolderReadonlyAsync(folderPath) {\r\n    try {\r\n      const currentPerms = await getFolderPermissionsAsync(folderPath);\r\n\r\n      const targetPerms = currentPerms.map((user) => {\r\n        return [user.LoginName, sal.config.siteRoles.roles.RestrictedRead];\r\n      });\r\n      await setFolderPermissionsAsync(folderPath, targetPerms, true);\r\n    } catch (e) {\r\n      console.warn(e);\r\n    }\r\n    return;\r\n  }\r\n\r\n  async function ensureFolderPermissionsAsync(relFolderPath, targetPerms) {\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const apiEndpoint =\r\n      sal.globalConfig.siteUrl +\r\n      `/_api/web/GetFolderByServerRelativeUrl('${serverRelFolderPath}')/` +\r\n      \"ListItemAllFields/RoleAssignments?$expand=Member,Member/Users,RoleDefinitionBindings\";\r\n\r\n    const response = await fetch(apiEndpoint, {\r\n      method: \"GET\",\r\n      headers: {\r\n        Accept: \"application/json; odata=verbose\",\r\n      },\r\n    });\r\n\r\n    if (!response.ok) {\r\n      if (response.status == 404) {\r\n        return;\r\n      }\r\n      console.error(response);\r\n    }\r\n    const result = await response.json();\r\n    const permissionResults = result?.d?.results;\r\n    if (!permissionResults) {\r\n      console.warn(\"No results found\", result);\r\n      return;\r\n    }\r\n\r\n    const missingPerms = targetPerms.filter((targetPermPair) => {\r\n      const targetLoginName = targetPermPair[0];\r\n      const targetPerm = targetPermPair[1];\r\n      // find an existing matching permissiont\r\n      const permExists = permissionResults.find((curPerm) => {\r\n        // If the target user isn't the member\r\n        if (curPerm.Member.LoginName != targetLoginName) {\r\n          // Or the member is a group that the target user isn't in\r\n          if (\r\n            !curPerm.Member.Users?.results.find(\r\n              (curUser) => curUser.LoginName == targetLoginName\r\n            )\r\n          ) {\r\n            return false;\r\n          }\r\n        }\r\n\r\n        // The target principal has permissions assigned, let see if they include the target permission\r\n        if (\r\n          curPerm.RoleDefinitionBindings.results?.find((curBinding) =>\r\n            sal.config.siteRoles.fulfillsRole(curBinding.Name, targetPerm)\r\n          )\r\n        ) {\r\n          return true;\r\n        }\r\n\r\n        // Finally, the target principal is assigned, but don't have the appropriate permissions\r\n        return false;\r\n      });\r\n\r\n      return !permExists;\r\n    });\r\n\r\n    console.log(\"Adding missing permissions\", missingPerms);\r\n    if (missingPerms.length)\r\n      await setFolderPermissionsAsync(relFolderPath, missingPerms, false);\r\n\r\n    return;\r\n  }\r\n  /*****************************************************************\r\n                            List Folders          \r\n    ******************************************************************/\r\n  function getFolderContentsAsync(relFolderPath, fields) {\r\n    return new Promise((resolve, reject) => {\r\n      // TODO: everything is the same as getListItems except for the caml query\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n      camlQuery.set_folderServerRelativeUrl(serverRelFolderPath);\r\n      const allItems = oList.getItems(camlQuery);\r\n\r\n      currCtx.load(allItems, `Include(${fields.join(\", \")})`);\r\n\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const foundObjects = [];\r\n          var listItemEnumerator = allItems.getEnumerator();\r\n          while (listItemEnumerator.moveNext()) {\r\n            var oListItem = listItemEnumerator.get_current();\r\n            var listObj = {};\r\n            fields.forEach((field) => {\r\n              var colVal = oListItem.get_item(field);\r\n              //console.log(`SAL: Setting ${field} to`, colVal);\r\n              listObj[field] = Array.isArray(colVal)\r\n                ? colVal.map((val) => mapListItemToObject(val))\r\n                : mapListItemToObject(colVal);\r\n            });\r\n            //listObj.fileUrl = oListItem.get_item(\"FileRef\");\r\n            listObj.oListItem = oListItem;\r\n            foundObjects.push(listObj);\r\n          }\r\n          resolve(foundObjects);\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load list folder contents:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderPermissionsAsync(relFolderPath) {\r\n    return new Promise(async (resolve, reject) => {\r\n      const oListItem = await getFolderItemByPath(relFolderPath);\r\n      if (!oListItem) {\r\n        reject(\"Folder item does not exist\");\r\n        return;\r\n      }\r\n      const roles = oListItem.get_roleAssignments();\r\n\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      currCtx.load(oListItem);\r\n      currCtx.load(roles);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          const currCtx = new SP.ClientContext.get_current();\r\n          console.log(oListItem);\r\n          const principals = [];\r\n          const bindings = [];\r\n          const roleEnumerator = roles.getEnumerator();\r\n          // enumerate the roles\r\n          while (roleEnumerator.moveNext()) {\r\n            const role = roleEnumerator.get_current();\r\n            const principal = role.get_member();\r\n            const bindings = role.get_roleDefinitionBindings();\r\n            // get the principal\r\n            currCtx.load(bindings);\r\n            currCtx.load(principal);\r\n            principals.push({ principal: principal, bindings: bindings });\r\n          }\r\n          currCtx.executeQueryAsync(\r\n            // success\r\n            function (sender, args) {\r\n              // alert the title\r\n              //alert(principal.get_title());\r\n\r\n              const logins = principals.map(function ({ principal, bindings }) {\r\n                const principalRoles = [];\r\n                const bindingEnumerator = bindings.getEnumerator();\r\n                while (bindingEnumerator.moveNext()) {\r\n                  const binding = bindingEnumerator.get_current();\r\n                  principalRoles.push(binding.get_name());\r\n                }\r\n                return {\r\n                  ID: principal.get_id(),\r\n                  Title: principal.get_title(),\r\n                  LoginName: principal.get_loginName(),\r\n                  Roles: principalRoles,\r\n                };\r\n              });\r\n              resolve(logins);\r\n            },\r\n            // failure\r\n            function (sender, args) {\r\n              console.warn(\"Unable load folder principals permissions:\");\r\n              console.error(sender);\r\n              console.error(args);\r\n              reject(args);\r\n            }\r\n          );\r\n        },\r\n        function (sender, args) {\r\n          console.warn(\"Unable load folder permissions:\");\r\n          console.error(sender);\r\n          console.error(args);\r\n          reject(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function getFolderItemByPath(relFolderPath) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      const camlQuery = SP.CamlQuery.createAllItemsQuery();\r\n\r\n      const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n      var camlq =\r\n        '<View Scope=\"RecursiveAll\"><Query><Where><And><Eq>' +\r\n        '<FieldRef Name=\"FSObjType\"/><Value Type=\"int\">1</Value>' +\r\n        \"</Eq><Eq>\" +\r\n        '<FieldRef Name=\"FileRef\"/><Value Type=\"Text\">' +\r\n        serverRelFolderPath +\r\n        \"</Value>\" +\r\n        \"</Eq></And></Where></Query><RowLimit>1</RowLimit></View>\";\r\n\r\n      camlQuery.set_viewXml(camlq);\r\n\r\n      const allFolders = oList.getItems(camlQuery);\r\n\r\n      async function onFindItemSucceeded() {\r\n        const foundObjects = [];\r\n        var listItemEnumerator = allFolders.getEnumerator();\r\n        while (listItemEnumerator.moveNext()) {\r\n          // Should be only one item\r\n          const oListItem = listItemEnumerator.get_current();\r\n          foundObjects.push(oListItem);\r\n        }\r\n\r\n        if (!foundObjects) {\r\n          console.warn(\"folder not found\");\r\n          resolve(foundObjects);\r\n        }\r\n\r\n        if (foundObjects.length > 1) {\r\n          console.warn(\"Multiple folders found!\");\r\n          resolve(foundObjects);\r\n        }\r\n        const oListItem = foundObjects[0];\r\n        resolve(oListItem);\r\n      }\r\n\r\n      function onFindItemFailed(sender, args) {\r\n        console.warn(\"Unable load list folder contents:\");\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n      const data = {\r\n        allFolders,\r\n        resolve,\r\n        reject,\r\n      };\r\n      currCtx.load(allFolders);\r\n\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onFindItemSucceeded),\r\n        Function.createDelegate(data, onFindItemFailed)\r\n      );\r\n    });\r\n  }\r\n\r\n  /*****************************************************************\r\n                            Document Libraries Folders\r\n    ******************************************************************/\r\n\r\n  /*****************************************************************\r\n                        Folder Creation          \r\n    ******************************************************************/\r\n\r\n  function upsertListFolderByPath(folderPath, callback) {\r\n    var folderArr = folderPath.split(\"/\");\r\n    var idx = 0;\r\n\r\n    var upsertListFolderInner = function (parentPath, folderArr, idx, success) {\r\n      var folderName = folderArr[idx];\r\n      idx++;\r\n      var curPath = folderArr.slice(0, idx).join(\"/\");\r\n      ensureListFolder(\r\n        curPath,\r\n        function (iFolder) {\r\n          if (idx >= folderArr.length) {\r\n            //We've reached the innermost folder and found it exists\r\n            success(iFolder.get_id());\r\n          } else {\r\n            upsertListFolderInner(curPath, folderArr, idx, success);\r\n          }\r\n        },\r\n        function () {\r\n          self.createListFolder(\r\n            folderName,\r\n            function (folderId) {\r\n              if (idx >= folderArr.length) {\r\n                //We've reached the innermost folder and found it exists\r\n                success(folderId);\r\n              } else {\r\n                upsertListFolderInner(curPath, folderArr, idx, success);\r\n              }\r\n            },\r\n            parentPath\r\n          );\r\n        }\r\n      );\r\n    };\r\n    upsertListFolderInner(\"\", folderArr, idx, callback);\r\n  }\r\n\r\n  /**\r\n   * CreateListFolder\r\n   * Creates a folder at the specified path\r\n   * @param {String} folderName\r\n   * @param {Function} callback\r\n   * @param {String} path\r\n   */\r\n  self.createListFolder = function (folderName, callback, path) {\r\n    path = path === undefined ? \"\" : path;\r\n\r\n    // Used for lists, duh\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n    let folderUrl = \"\";\r\n    const itemCreateInfo = new SP.ListItemCreationInformation();\r\n    itemCreateInfo.set_underlyingObjectType(SP.FileSystemObjectType.folder);\r\n    itemCreateInfo.set_leafName(folderName);\r\n    if (path) {\r\n      folderUrl =\r\n        sal.globalConfig.siteUrl +\r\n        \"/Lists/\" +\r\n        self.config.def.name +\r\n        \"/\" +\r\n        path;\r\n      itemCreateInfo.set_folderUrl(folderUrl);\r\n    }\r\n\r\n    const newItem = oList.addItem(itemCreateInfo);\r\n    newItem.set_item(\"Title\", folderName);\r\n\r\n    newItem.update();\r\n\r\n    function onCreateFolderSucceeded(sender, args) {\r\n      callback(this.newItem.get_id());\r\n    }\r\n\r\n    function onCreateFolderFailed(sender, args) {\r\n      alert(\r\n        \"Request on list \" +\r\n          self.config.def.name +\r\n          \" failed, producing the following error: \\n\" +\r\n          args.get_message() +\r\n          \"\\nStackTrack: \\n\" +\r\n          args.get_stackTrace()\r\n      );\r\n    }\r\n\r\n    const data = {\r\n      folderName: folderName,\r\n      callback: callback,\r\n      newItem: newItem,\r\n    };\r\n\r\n    currCtx.load(newItem);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onCreateFolderSucceeded),\r\n      Function.createDelegate(data, onCreateFolderFailed)\r\n    );\r\n  };\r\n\r\n  function ensureListFolder(path, onExists, onNonExists) {\r\n    var folderUrl =\r\n      sal.globalConfig.siteUrl + \"/Lists/\" + self.config.def.name + \"/\" + path;\r\n\r\n    var ctx = SP.ClientContext.get_current();\r\n\r\n    // Could also call getFileByServerRelativeUrl() here. Doesn't matter.\r\n    // The way this works is identical for files and folders.\r\n    var folder = ctx.get_web().getFolderByServerRelativeUrl(folderUrl);\r\n    folder.get_listItemAllFields();\r\n    var data = {\r\n      folder: folder,\r\n      path: path,\r\n      onExists: onExists,\r\n      onNonExists: onNonExists,\r\n    };\r\n    ctx.load(folder, \"Exists\", \"Name\");\r\n\r\n    function onQueryFolderSucceeded() {\r\n      if (folder.get_exists()) {\r\n        // Folder exists and isn't hidden from us. Print its name.\r\n        console.log(\r\n          \"Folder \" + folder.get_name() + \" exists in \" + self.config.def.name\r\n        );\r\n        var currCtx = new SP.ClientContext.get_current();\r\n\r\n        var folderItem = folder.get_listItemAllFields();\r\n        function onQueryFolderItemSuccess() {\r\n          onExists(folderItem);\r\n        }\r\n        function onQueryFolderItemFailure(sender, args) {\r\n          console.error(\"Failed to find folder at \" + path, args);\r\n        }\r\n        data = { folderItem: folderItem, path: path, onExists: onExists };\r\n        currCtx.load(folderItem);\r\n        currCtx.executeQueryAsync(\r\n          Function.createDelegate(data, onQueryFolderItemSuccess),\r\n          Function.createDelegate(data, onQueryFolderItemFailure)\r\n        );\r\n      } else {\r\n        console.warn(\"Folder exists but is hidden (security-trimmed) for us.\");\r\n      }\r\n    }\r\n\r\n    function onQueryFolderFailed(sender, args) {\r\n      if (args.get_errorTypeName() === \"System.IO.FileNotFoundException\") {\r\n        // Folder doesn't exist at all.\r\n        console.log(\r\n          \"SAL.SPList.ensureListFolder: \\\r\n          Folder \" +\r\n            path +\r\n            \" does not exist in \" +\r\n            self.config.def.name\r\n        );\r\n        onNonExists();\r\n      } else {\r\n        // An unexpected error occurred.\r\n        console.error(\"Error: \" + args.get_message());\r\n      }\r\n    }\r\n    ctx.executeQueryAsync(\r\n      Function.createDelegate(data, onQueryFolderSucceeded),\r\n      Function.createDelegate(data, onQueryFolderFailed)\r\n    );\r\n  }\r\n\r\n  function upsertLibFolderByPath(folderUrl, success) {\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n    // TODO: Check if the folder exists before adding it\r\n\r\n    var createFolderInternal = function (parentFolder, folderUrl, success) {\r\n      var ctx = parentFolder.get_context();\r\n      var folderNames = folderUrl.split(\"/\");\r\n      var folderName = folderNames[0];\r\n      var curFolder = parentFolder.get_folders().add(folderName);\r\n      ctx.load(curFolder);\r\n      ctx.executeQueryAsync(\r\n        function () {\r\n          if (folderNames.length > 1) {\r\n            var subFolderUrl = folderNames\r\n              .slice(1, folderNames.length)\r\n              .join(\"/\");\r\n            createFolderInternal(curFolder, subFolderUrl, success);\r\n          } else {\r\n            success(curFolder);\r\n          }\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"error creating new folder\");\r\n          console.error(sender);\r\n          console.error(error);\r\n        }\r\n      );\r\n    };\r\n    createFolderInternal(oList.get_rootFolder(), folderUrl, success);\r\n  }\r\n\r\n  function setFolderPermissionsAsync(folderPath, valuePairs, reset) {\r\n    return new Promise((resolve, reject) => {\r\n      setFolderPermissions(folderPath, valuePairs, resolve, reset);\r\n    });\r\n  }\r\n\r\n  function setFolderPermissions(relFolderPath, valuePairs, callback, reset) {\r\n    reset = reset === undefined ? false : reset;\r\n    // TODO: Validate that the users exist\r\n    var users = [];\r\n    var resolvedGroups = [];\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    const currCtx = new SP.ClientContext.get_current();\r\n    const web = currCtx.get_web();\r\n    const folder = web.getFolderByServerRelativeUrl(serverRelFolderPath);\r\n\r\n    valuePairs.forEach(function (vp) {\r\n      var resolvedGroup = getSPSiteGroupByName(vp[0]);\r\n      if (resolvedGroup?.oGroup) {\r\n        resolvedGroups.push([resolvedGroup.oGroup, vp[1]]);\r\n      } else {\r\n        //This doesn't appear to be a group, let's see if we can find a user\r\n        users.push([currCtx.get_web().ensureUser(vp[0]), vp[1]]);\r\n      }\r\n    });\r\n\r\n    function onFindFolderSuccess() {\r\n      var currCtx = new SP.ClientContext.get_current();\r\n      var web = currCtx.get_web();\r\n\r\n      var folderItem = this.folder.get_listItemAllFields();\r\n      if (reset) {\r\n        folderItem.resetRoleInheritance();\r\n        folderItem.breakRoleInheritance(false, false);\r\n        folderItem\r\n          .get_roleAssignments()\r\n          .getByPrincipal(sal.globalConfig.currentUser)\r\n          .deleteObject();\r\n      } else {\r\n        folderItem.breakRoleInheritance(false, false);\r\n      }\r\n\r\n      this.resolvedGroups.forEach(function (groupPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(groupPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(groupPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      this.users.forEach(function (userPairs) {\r\n        var roleDefBindingColl =\r\n          SP.RoleDefinitionBindingCollection.newObject(currCtx);\r\n        roleDefBindingColl.add(\r\n          web.get_roleDefinitions().getByName(userPairs[1])\r\n        );\r\n        folderItem.get_roleAssignments().add(userPairs[0], roleDefBindingColl);\r\n      });\r\n\r\n      var data = { folderItem: folderItem, callback: callback };\r\n\r\n      function onSetFolderPermissionsSuccess() {\r\n        console.log(\"Successfully set permissions\");\r\n        this.callback(folderItem);\r\n      }\r\n\r\n      function onSetFolderPermissionsFailure(sender, args) {\r\n        console.error(\r\n          \"Failed to update permissions on item: \" +\r\n            this.folderItem.get_lookupValue() +\r\n            args.get_message() +\r\n            \"\\n\" +\r\n            args.get_stackTrace(),\r\n          false\r\n        );\r\n      }\r\n\r\n      currCtx.load(folderItem);\r\n      currCtx.executeQueryAsync(\r\n        Function.createDelegate(data, onSetFolderPermissionsSuccess),\r\n        Function.createDelegate(data, onSetFolderPermissionsFailure)\r\n      );\r\n    }\r\n\r\n    function onFindFolderFailure(sender, args) {\r\n      console.error(\r\n        \"Something went wrong setting perms on library folder\",\r\n        args\r\n      );\r\n    }\r\n\r\n    var data = {\r\n      folder: folder,\r\n      users: users,\r\n      callback: callback,\r\n      resolvedGroups: resolvedGroups,\r\n      valuePairs: valuePairs,\r\n      reset: reset,\r\n    };\r\n\r\n    users.map(function (user) {\r\n      currCtx.load(user[0]);\r\n    });\r\n    currCtx.load(folder);\r\n    currCtx.executeQueryAsync(\r\n      Function.createDelegate(data, onFindFolderSuccess),\r\n      Function.createDelegate(data, onFindFolderFailure)\r\n    );\r\n  }\r\n\r\n  /*****************************************************************\r\n                                  \r\n  ******************************************************************/\r\n\r\n  function showModal(formName, title, args, callback) {\r\n    var id = \"\";\r\n    if (args.id) {\r\n      id = args.id;\r\n    }\r\n    const options = SP.UI.$create_DialogOptions();\r\n\r\n    var listPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    var rootFolder = \"\";\r\n\r\n    if (args.rootFolder) {\r\n      rootFolder = sal.globalConfig.siteUrl + listPath + args.rootFolder;\r\n    }\r\n\r\n    // WARNING: this looks similar to listPath but is different\r\n    var formsPath = self.config.def.isLib\r\n      ? \"/\" + self.config.def.name + \"/forms/\"\r\n      : \"/Lists/\" + self.config.def.name + \"/\";\r\n\r\n    Object.assign(options, {\r\n      title: title,\r\n      dialogReturnValueCallback: callback,\r\n      args: JSON.stringify(args),\r\n      height: 800,\r\n      url:\r\n        sal.globalConfig.siteUrl +\r\n        formsPath +\r\n        formName +\r\n        \"?ID=\" +\r\n        id +\r\n        \"&Source=\" +\r\n        location.pathname +\r\n        \"&RootFolder=\" +\r\n        rootFolder,\r\n    });\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n\r\n    // SP.SOD.execute(\r\n    //   \"sp.ui.dialog.js\",\r\n    //   \"SP.UI.ModalDialog.showModalDialog\",\r\n    //   options\r\n    // );\r\n  }\r\n\r\n  function showCheckinModal(fileRef, callback) {\r\n    var options = SP.UI.$create_DialogOptions();\r\n    options.title = \"Check in Document\";\r\n    options.height = \"600\";\r\n    options.dialogReturnValueCallback = callback;\r\n\r\n    options.url =\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/checkin.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&FileName=\" +\r\n      fileRef;\r\n\r\n    SP.UI.ModalDialog.showModalDialog(options);\r\n  }\r\n\r\n  function checkinWithComment(fileRef, comment) {\r\n    const url = `/web/GetFileByServerRelativeUrl('${fileRef}')/CheckIn(comment='${comment}',checkintype=0)`;\r\n    return fetchSharePointData(url, \"POST\");\r\n  }\r\n\r\n  function showVersionHistoryModal(itemId) {\r\n    return new Promise((resolve) => {\r\n      var options = SP.UI.$create_DialogOptions();\r\n      options.title = \"Version History\";\r\n      options.height = \"600\";\r\n      options.dialogReturnValueCallback = resolve;\r\n\r\n      options.url = getVersionHistoryUrl(itemId);\r\n\r\n      SP.UI.ModalDialog.showModalDialog(options);\r\n    });\r\n  }\r\n\r\n  function getVersionHistoryUrl(itemId) {\r\n    return (\r\n      sal.globalConfig.siteUrl +\r\n      \"/_layouts/15/versions.aspx?List={\" +\r\n      self.config.guid +\r\n      \"}&ID=\" +\r\n      itemId\r\n    );\r\n  }\r\n\r\n  function uploadNewDocumentAsync(folderPath, title, args) {\r\n    return new Promise((resolve, reject) => {\r\n      const currCtx = new SP.ClientContext.get_current();\r\n      const web = currCtx.get_web();\r\n      const oList = web.get_lists().getByTitle(self.config.def.title);\r\n\r\n      currCtx.load(oList);\r\n      currCtx.executeQueryAsync(\r\n        function () {\r\n          //folder = folder != '/' ? folder : '';\r\n\r\n          var siteString =\r\n            sal.globalConfig.siteUrl == \"/\" ? \"\" : sal.globalConfig.siteUrl;\r\n\r\n          const options = SP.UI.$create_DialogOptions();\r\n          Object.assign(options, {\r\n            title: title,\r\n            dialogReturnValueCallback: resolve,\r\n            args: JSON.stringify(args),\r\n            url:\r\n              siteString +\r\n              \"/_layouts/Upload.aspx?List=\" +\r\n              oList.get_id().toString() +\r\n              \"&RootFolder=\" +\r\n              siteString +\r\n              \"/\" +\r\n              self.config.def.name +\r\n              \"/\" +\r\n              encodeURI(folderPath) +\r\n              \"&Source=\" +\r\n              location.pathname +\r\n              \"&args=\" +\r\n              encodeURI(JSON.stringify(args)),\r\n          });\r\n          //console.log(\"Options url: \" + options.url);\r\n          SP.UI.ModalDialog.showModalDialog(options);\r\n          // SP.SOD.execute(\r\n          //   \"sp.ui.dialog.js\",\r\n          //   \"SP.UI.ModalDialog.showModalDialog\",\r\n          //   options\r\n          // );\r\n        },\r\n        function (sender, args) {\r\n          console.error(\"Error showing file modal: \");\r\n          console.error(sender);\r\n          console.error(args);\r\n        }\r\n      );\r\n    });\r\n  }\r\n\r\n  async function ensureFolder(relativeFolderPath) {\r\n    const response = await fetchSharePointData(\r\n      `/web/GetFolderByServerRelativeUrl('${relativeFolderPath}')`\r\n    );\r\n    if (response) return true;\r\n\r\n    //else we need to upsert\r\n    // }\r\n\r\n    // async function createFolder(relativeFolderPath) {\r\n    return await fetchSharePointData(\r\n      `/web/folders`,\r\n      \"POST\",\r\n      {\r\n        \"Content-Type\": \"application/json;odata=verbose\",\r\n      },\r\n      {\r\n        body: JSON.stringify({\r\n          __metadata: { type: \"SP.Folder\" },\r\n          ServerRelativeUrl: relativeFolderPath,\r\n        }),\r\n      }\r\n    );\r\n  }\r\n\r\n  const UPLOADCHUNKSIZE = 10485760; // PnPJs\r\n  // const UPLOADCHUNKSIZE = 262144000; // SPO\r\n\r\n  const uploadchunkActionTypes = {\r\n    start: \"startupload\",\r\n    continue: \"continueupload\",\r\n    finish: \"finishupload\",\r\n  };\r\n\r\n  async function uploadFileRestChunking(\r\n    file,\r\n    relFolderPath,\r\n    fileName,\r\n    progress\r\n  ) {\r\n    /* https://sharepoint.stackexchange.com/questions/287334/upload-files-250mb-via-sharepoint-rest-api\r\nhttps://learn.microsoft.com/en-us/previous-versions/office/developer/sharepoint-rest-reference/dn450841(v=office.15)\r\n    */\r\n    const blob = file;\r\n    const chunkSize = UPLOADCHUNKSIZE;\r\n    const fileSize = file.size;\r\n\r\n    const totalBlocks =\r\n      parseInt((fileSize / chunkSize).toString(), 10) +\r\n      (fileSize % chunkSize === 0 ? 1 : 0);\r\n\r\n    const fileRef = relFolderPath + \"/\" + fileName;\r\n\r\n    const jobGuid = getGUID();\r\n    // const jobGuid = crypto.randomUUID\r\n    //   ? crypto.randomUUID()\r\n    //   : \"74493426-fb10-4e47-bc82-120954b81a60\";\r\n\r\n    let currentPointer;\r\n    progress({ currentBlock: 0, totalBlocks });\r\n    currentPointer = await startUpload(\r\n      jobGuid,\r\n      file.slice(0, chunkSize),\r\n      fileRef,\r\n      relFolderPath\r\n    );\r\n\r\n    for (i = 2; i < totalBlocks; i++) {\r\n      progress({ currentBlock: i, totalBlocks });\r\n      currentPointer = await continueUpload(\r\n        jobGuid,\r\n        file.slice(currentPointer, currentPointer + chunkSize),\r\n        currentPointer,\r\n        fileRef\r\n      );\r\n    }\r\n\r\n    progress({ currentBlock: totalBlocks - 1, totalBlocks });\r\n    const result = await finishUpload(\r\n      jobGuid,\r\n      file.slice(currentPointer),\r\n      currentPointer,\r\n      fileRef\r\n    );\r\n\r\n    progress({ currentBlock: totalBlocks, totalBlocks });\r\n\r\n    return result;\r\n  }\r\n\r\n  async function startUpload(uploadId, chunk, fileRef, relFolderPath) {\r\n    const url =\r\n      `/web/getFolderByServerRelativeUrl(@folder)/files/getByUrlOrAddStub(@file)/StartUpload(guid'${uploadId}')?` +\r\n      `&@folder='${relFolderPath}'&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.StartUpload);\r\n  }\r\n\r\n  async function continueUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/ContinueUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return parseFloat(result.d.ContinueUpload);\r\n  }\r\n\r\n  async function finishUpload(uploadId, chunk, fileOffset, fileRef) {\r\n    const url =\r\n      `/web/getFileByServerRelativeUrl(@file)/FinishUpload(uploadId=guid'${uploadId}',fileOffset=${fileOffset})?` +\r\n      `&@file='${fileRef}'`;\r\n\r\n    const headers = {\r\n      \"Content-Type\": \"application/octet-stream\",\r\n    };\r\n    const opts = {\r\n      body: chunk,\r\n    };\r\n\r\n    const result = await fetchSharePointData(url, \"POST\", headers, opts);\r\n\r\n    if (!result) {\r\n      console.error(\"Error starting upload!\");\r\n      return;\r\n    }\r\n\r\n    return result;\r\n  }\r\n\r\n  async function uploadFileRest(file, relFolderPath, fileName) {\r\n    return await fetch(\r\n      _spPageContextInfo.webServerRelativeUrl +\r\n        `/_api/web/GetFolderByServerRelativeUrl('${relFolderPath}')/Files/add(url='${fileName}',overwrite=true)`,\r\n      {\r\n        method: \"POST\",\r\n        credentials: \"same-origin\",\r\n        body: file,\r\n        headers: {\r\n          Accept: \"application/json; odata=verbose\",\r\n          \"Content-Type\": \"application/json;odata=nometadata\",\r\n          \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        },\r\n      }\r\n    ).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Uploading File\", response);\r\n        return;\r\n      }\r\n\r\n      return response.json();\r\n    });\r\n  }\r\n\r\n  async function uploadFileToFolderAndUpdateMetadata(\r\n    file,\r\n    fileName,\r\n    relFolderPath,\r\n    payload,\r\n    progress = null\r\n  ) {\r\n    if (!progress) {\r\n      progress = () => {};\r\n    }\r\n\r\n    const serverRelFolderPath = getServerRelativeFolderPath(relFolderPath);\r\n\r\n    if (!(await ensureFolder(serverRelFolderPath))) return;\r\n\r\n    let result = null;\r\n    if (file.size > UPLOADCHUNKSIZE) {\r\n      const job = () =>\r\n        uploadFileRestChunking(file, serverRelFolderPath, fileName, progress);\r\n      result = await uploadQueue.addJob(job);\r\n    } else {\r\n      progress({ currentBlock: 0, totalBlocks: 1 });\r\n      result = await uploadFileRest(file, serverRelFolderPath, fileName);\r\n      progress({ currentBlock: 1, totalBlocks: 1 });\r\n    }\r\n\r\n    await updateUploadedFileMetadata(result.d, payload);\r\n\r\n    // check in\r\n    await checkinWithComment(serverRelFolderPath + \"/\" + fileName, \"\");\r\n\r\n    let itemUri = result.d.ListItemAllFields.__deferred.uri + \"?$select=ID\";\r\n\r\n    const listItem = await fetchSharePointData(itemUri);\r\n    return listItem.d.ID;\r\n  }\r\n\r\n  async function updateUploadedFileMetadata(fileResult, payload) {\r\n    var result = await fetch(fileResult.ListItemAllFields.__deferred.uri, {\r\n      method: \"POST\",\r\n      credentials: \"same-origin\",\r\n      body: JSON.stringify(payload),\r\n      headers: {\r\n        Accept: \"application/json; odata=nometadata\",\r\n        \"Content-Type\": \"application/json;odata=nometadata\",\r\n        \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n        \"X-HTTP-Method\": \"MERGE\",\r\n        \"If-Match\": \"*\",\r\n      },\r\n    }).then((response) => {\r\n      if (!response.ok) {\r\n        console.error(\"Error Updating File\", response);\r\n        return;\r\n      }\r\n\r\n      return response;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function copyFiles(sourceFolderPath, destFolderPath, callback, onError) {\r\n    const sourcePath = getServerRelativeFolderPath(sourceFolderPath);\r\n    const destPath = getServerRelativeFolderPath(destFolderPath);\r\n    var context = new SP.ClientContext.get_current();\r\n    var web = context.get_web();\r\n    var folderSrc = web.getFolderByServerRelativeUrl(sourcePath);\r\n    context.load(folderSrc, \"Files\");\r\n    context.executeQueryAsync(\r\n      function () {\r\n        var files = folderSrc.get_files();\r\n        var e = files.getEnumerator();\r\n        var dest = [];\r\n        while (e.moveNext()) {\r\n          var file = e.get_current();\r\n          var destLibUrl = destPath + \"/\" + file.get_name();\r\n          dest.push(destLibUrl); //delete this when we're happy we got the file paths right\r\n          file.copyTo(destLibUrl, true);\r\n        }\r\n        console.log(dest); //delete this when we're happy we got the file paths right\r\n        context.executeQueryAsync(\r\n          function () {\r\n            console.log(\"Files moved successfully!\");\r\n            callback();\r\n          },\r\n          function (sender, args) {\r\n            console.log(\"error: \") + args.get_message();\r\n            onError;\r\n          }\r\n        );\r\n      },\r\n      function (sender, args) {\r\n        console.error(\"Unable to copy files: \", args.get_message());\r\n        console.error(sender);\r\n        console.error(args);\r\n        reject(args);\r\n      }\r\n    );\r\n  }\r\n\r\n  function copyFilesAsync(sourceFolder, destFolder) {\r\n    // TODO: this should stay as a static utility instead of list specific\r\n    return new Promise((resolve, reject) => {\r\n      copyFiles(sourceFolder, destFolder, resolve, reject);\r\n    });\r\n  }\r\n\r\n  // Ensure List/Library exists on the site\r\n  async function ensureList() {\r\n    // Query List Title\r\n    const listInfo = await fetchSharePointData(\r\n      `/web/lists/GetByTitle('${self.config.def.title}')`\r\n    );\r\n  }\r\n\r\n  const publicMembers = {\r\n    findByIdAsync,\r\n    getById,\r\n    findByColumnValueAsync,\r\n    loadNextPage,\r\n    getListItemsAsync,\r\n    createListItemAsync,\r\n    updateListItemAsync,\r\n    deleteListItemAsync,\r\n    setItemPermissionsAsync,\r\n    getItemPermissionsAsync,\r\n    getListPermissions,\r\n    setListPermissionsAsync,\r\n    getFolderContentsAsync,\r\n    upsertFolderPathAsync,\r\n    getServerRelativeFolderPath,\r\n    setFolderReadonlyAsync,\r\n    setFolderPermissionsAsync,\r\n    ensureFolderPermissionsAsync,\r\n    uploadFileToFolderAndUpdateMetadata,\r\n    uploadNewDocumentAsync,\r\n    copyFilesAsync,\r\n    showModal,\r\n    showCheckinModal,\r\n    showVersionHistoryModal,\r\n    getVersionHistoryUrl,\r\n  };\r\n\r\n  return publicMembers;\r\n}\r\n\r\nasync function fetchSharePointData(\r\n  uri,\r\n  method = \"GET\",\r\n  headers = {},\r\n  opts = {},\r\n  responseType = \"json\"\r\n) {\r\n  const siteEndpoint = uri.startsWith(\"http\")\r\n    ? uri\r\n    : sal.globalConfig.siteUrl + \"/_api\" + uri;\r\n  const response = await fetch(siteEndpoint, {\r\n    method,\r\n    headers: {\r\n      Accept: \"application/json; odata=verbose\",\r\n      \"X-RequestDigest\": document.getElementById(\"__REQUESTDIGEST\").value,\r\n      ...headers,\r\n    },\r\n    ...opts,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    if (response.status == 404) {\r\n      return;\r\n    }\r\n    console.error(response);\r\n    return;\r\n  }\r\n  try {\r\n    let result;\r\n    switch (responseType) {\r\n      case \"json\":\r\n        return response.json();\r\n        break;\r\n      case \"blob\":\r\n        return response.blob();\r\n        break;\r\n      default:\r\n        return response;\r\n    }\r\n  } catch (e) {\r\n    return;\r\n  }\r\n}\r\n\r\nwindow.fetchSharePointData = fetchSharePointData;\r\n\r\n/**\r\n * Gets a random GUID value\r\n *\r\n * http://stackoverflow.com/questions/105034/create-guid-uuid-in-javascript\r\n */\r\n/* eslint-disable no-bitwise */\r\nfunction getGUID() {\r\n  if (crypto.randomUUID) return crypto.randomUUID();\r\n\r\n  let d = Date.now();\r\n  return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\r\n    const r = (d + Math.random() * 16) % 16 | 0;\r\n    d = Math.floor(d / 16);\r\n    return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\r\n  });\r\n}\r\n\r\nclass UploadQueue {\r\n  constructor() {}\r\n\r\n  jobs = [];\r\n  _queue = [];\r\n\r\n  enqueue(job) {\r\n    this._queue.push(job);\r\n  }\r\n\r\n  async dequeue() {\r\n    this._queue.shift();\r\n  }\r\n\r\n  async doWork() {\r\n    const job = await this.dequeue();\r\n  }\r\n\r\n  addJob(job) {\r\n    return new Promise((resolve) => {\r\n      this.enqueue(job);\r\n    });\r\n  }\r\n}\r\n\r\nclass JobProcessor {\r\n  constructor(maxConcurrency) {\r\n    this.maxConcurrency = maxConcurrency;\r\n    this.runningJobs = 0;\r\n    this.queue = [];\r\n  }\r\n\r\n  addJob(asyncFunction) {\r\n    return new Promise((resolve, reject) => {\r\n      const job = async () => {\r\n        try {\r\n          const result = await asyncFunction();\r\n          resolve(result);\r\n        } catch (error) {\r\n          reject(error);\r\n        } finally {\r\n          this.runningJobs--;\r\n          this.processQueue();\r\n        }\r\n      };\r\n\r\n      this.queue.push(job);\r\n      this.processQueue();\r\n    });\r\n  }\r\n\r\n  processQueue() {\r\n    while (this.runningJobs < this.maxConcurrency && this.queue.length > 0) {\r\n      const job = this.queue.shift();\r\n      this.runningJobs++;\r\n      job();\r\n    }\r\n  }\r\n}\r\n\r\nconst uploadQueue = new JobProcessor(5);\r\n", "import { getGroupUsers } from \"./sal.js\";\r\n\r\nexport async function getUsersByGroupName(groupName) {\r\n  const users = await getGroupUsers(groupName);\r\n\r\n  if (!users) return [];\r\n\r\n  return users.map((userProps) => new People(userProps));\r\n}\r\n", "import { sortByTitle } from \"../infrastructure/index.js\";\r\nimport { PeopleModule } from \"../components/fields/PeopleModule.js\";\r\nimport { People } from \"../entities/People.js\";\r\nimport { getUsersByGroupName } from \"../infrastructure/index.js\";\r\nimport { ensureUserByKeyAsync } from \"../infrastructure/sal.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nconst components = {\r\n  view: \"people-view\",\r\n  edit: \"people-edit\",\r\n  new: \"people-edit\",\r\n};\r\n\r\nexport class PeopleField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    // this.pickerOptions = params.pickerOptions ?? {};\r\n    this.spGroupName = params.spGroupName ?? null;\r\n    this.multiple = params.multiple ?? false;\r\n    // this.pickerOptions = params.pickerOptions ?? {};\r\n\r\n    this.Value = this.multiple ? ko.observableArray() : ko.observable();\r\n\r\n    if (ko.isObservable(this.spGroupName)) {\r\n      this.spGroupName.subscribe(this.spGroupNameChangedHandler);\r\n    }\r\n    if (ko.unwrap(this.spGroupName)) {\r\n      this.spGroupNameChangedHandler(ko.unwrap(this.spGroupName));\r\n    }\r\n  }\r\n\r\n  spGroupId = ko.observable();\r\n  userOpts = ko.observableArray();\r\n  expandUsers = ko.observable(false);\r\n\r\n  spGroupNameChangedHandler = async (groupName) => {\r\n    if (!groupName) {\r\n      this.userOpts.removeAll();\r\n      this.spGroupId(null);\r\n    }\r\n\r\n    const group = await ensureUserByKeyAsync(groupName);\r\n    this.spGroupId(group.ID);\r\n    const users = await getUsersByGroupName(groupName);\r\n    this.userOpts(users.sort(sortByTitle));\r\n  };\r\n\r\n  pickerOptions = ko.pureComputed(() => {\r\n    const groupId = ko.unwrap(this.spGroupId);\r\n\r\n    const opts = {\r\n      AllowMultipleValues: this.multiple,\r\n    };\r\n\r\n    if (groupId) opts.SharePointGroupID = groupId;\r\n\r\n    return opts;\r\n  });\r\n\r\n  toString = ko.pureComputed(() => {\r\n    if (!this.multiple) return this.Value()?.Title;\r\n\r\n    return this.Value()?.map((user) => user.Title);\r\n  });\r\n\r\n  set = (val) => {\r\n    if (!this.multiple) {\r\n      this.Value(People.Create(val));\r\n      return;\r\n    }\r\n\r\n    if (!val) {\r\n      this.Value.removeAll();\r\n      return;\r\n    }\r\n\r\n    const vals = val.results ?? val;\r\n\r\n    if (!vals.length) {\r\n      this.Value.removeAll();\r\n      return;\r\n    }\r\n    this.Value(vals.map((u) => People.Create(u)));\r\n  };\r\n\r\n  components = PeopleModule;\r\n}\r\n", "import {\r\n  SearchSelectModule,\r\n  SelectModule,\r\n} from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class SelectField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    const { options, multiple = false, optionsText } = params;\r\n    this._options = options;\r\n\r\n    this.Options = ko.pureComputed(() => {\r\n      return ko.unwrap(options);\r\n    });\r\n\r\n    this.multiple = multiple;\r\n    this.Value = multiple ? ko.observableArray() : ko.observable();\r\n    this.optionsText = optionsText;\r\n\r\n    this.components = this.multiple ? SearchSelectModule : SelectModule;\r\n  }\r\n\r\n  toString = ko.pureComputed(() =>\r\n    this.multiple ? this.Value().join(\", \") : this.Value()\r\n  );\r\n\r\n  get = () => this.Value();\r\n\r\n  set = (val) => {\r\n    if (val && this.multiple) {\r\n      if (Array.isArray(val)) {\r\n        this.Value(val);\r\n      } else {\r\n        this.Value(val.results ?? val.split(\";#\"));\r\n      }\r\n      return;\r\n    }\r\n    this.Value(val);\r\n  };\r\n\r\n  // Options = ko.observableArray();\r\n}\r\n", "import { TextAreaModule } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\nexport class TextAreaField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.isRichText = params.isRichText;\r\n    this.attr = params.attr ?? {};\r\n  }\r\n\r\n  components = TextAreaModule;\r\n}\r\n", "import { TextModule } from \"../components/fields/index.js\";\r\nimport { BaseField } from \"./index.js\";\r\n\r\n// import ValidationError from \"../primitives/ValidationError.js\";\r\n\r\nexport class TextField extends BaseField {\r\n  constructor(params) {\r\n    super(params);\r\n    this.attr = params.attr ?? {};\r\n    this.options = params.options ?? null;\r\n  }\r\n\r\n  components = TextModule;\r\n}\r\n", "import { ACTIONSTATES } from \"../constants.js\";\r\nimport {\r\n  DateField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class Action extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  PendingApproval = ko.pureComputed(() => {\r\n    [\r\n      ACTIONSTATES.QSOAPPROVAL,\r\n      ACTIONSTATES.QAOAPPROVAL,\r\n      ACTIONSTATES.QTMAPPROVAL,\r\n    ].includes(this.ImplementationStatus.Value());\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Plan #\",\r\n    isEditable: false,\r\n  });\r\n\r\n  ActionID = new TextField({\r\n    displayName: \"Action ID\",\r\n    isEditable: false,\r\n  });\r\n\r\n  ActionDescription = new TextAreaField({\r\n    displayName: \"Action Description\",\r\n    isRequired: true,\r\n    isRichText: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  TargetDate = new DateField({\r\n    displayName: \"Target Date\",\r\n    isRequired: true,\r\n  });\r\n\r\n  ActionResponsiblePerson = new PeopleField({\r\n    displayName: \"Action Responsible Person\",\r\n    isRequired: true,\r\n  });\r\n\r\n  RevisionCount = new TextField({\r\n    displayName: \"Revision Count\",\r\n    isEditable: false,\r\n    attr: {\r\n      type: \"number\",\r\n    },\r\n  });\r\n\r\n  ImplementationStatus = new SelectField({\r\n    displayName: \"Status\",\r\n    options: Object.values(ACTIONSTATES),\r\n    isEditable: false,\r\n  });\r\n\r\n  ImplementationDate = new DateField({\r\n    displayName: \"Implementation Date\",\r\n    isEditable: false,\r\n  });\r\n\r\n  PreviousActionDescription = new TextAreaField({\r\n    displayName: \"Previous Action Description\",\r\n    isRequired: false,\r\n    isRichText: true,\r\n    classList: [\"min-w-full\"],\r\n    isEditable: false,\r\n    isVisible: this.PendingApproval,\r\n  });\r\n\r\n  PreviousTargetDate = new DateField({\r\n    displayName: \"Previous Target Date\",\r\n    isRequired: false,\r\n    isEditable: false,\r\n    isVisible: this.PendingApproval,\r\n  });\r\n\r\n  PreviousActionResponsiblePerson = new PeopleField({\r\n    displayName: \"Previous Action Responsible Person\",\r\n    isRequired: false,\r\n    isEditable: false,\r\n    isVisible: this.PendingApproval,\r\n  });\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"ActionID\",\r\n      \"ActionDescription\",\r\n      \"TargetDate\",\r\n      \"ActionResponsiblePerson\",\r\n      \"RevisionCount\",\r\n      \"ImplementationStatus\",\r\n      \"ImplementationDate\",\r\n      \"PrevImplementationStatus\",\r\n      \"PreviousActionDescription\",\r\n      \"PreviousTargetDate\",\r\n      \"PreviousActionResponsiblePerson\",\r\n    ],\r\n    New: [\r\n      \"ActionID\",\r\n      \"ActionDescription\",\r\n      \"TargetDate\",\r\n      \"ActionResponsiblePerson\",\r\n    ],\r\n    Edit: [\r\n      \"ActionDescription\",\r\n      \"TargetDate\",\r\n      \"ActionResponsiblePerson\",\r\n      \"RevisionCount\",\r\n      \"ImplementationStatus\",\r\n    ],\r\n    EditApproval: [\r\n      \"ActionDescription\",\r\n      \"TargetDate\",\r\n      \"ActionResponsiblePerson\",\r\n      \"RevisionCount\",\r\n      \"ImplementationStatus\",\r\n      \"PreviousActionDescription\",\r\n      \"PreviousTargetDate\",\r\n      \"PreviousActionResponsiblePerson\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"CAP_Actions\",\r\n    title: \"CAP_Actions\",\r\n  };\r\n}\r\n", "export const businessOfficeStore = ko.observableArray();\r\n\r\nexport const sourcesStore = ko.observableArray();\r\n", "import { businessOfficeStore, sourcesStore } from \"../infrastructure/store.js\";\r\nimport {\r\n  CheckboxField,\r\n  PeopleField,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n  DateField,\r\n  LookupField,\r\n  dateFieldTypes,\r\n} from \"../sal/fields/index.js\";\r\nimport { PLANTYPE, LOCATION } from \"../constants.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport { BusinessOffice, RECORDSOURCETYPES } from \"./index.js\";\r\nimport { appContext } from \"../infrastructure/app-db-context.js\";\r\n\r\nexport class Plan extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  isCAP = ko.pureComputed(() => {\r\n    return ko.unwrap(this.RecordType.Value) == PLANTYPE.CAP;\r\n  });\r\n\r\n  isCAR = ko.pureComputed(() => {\r\n    return ko.unwrap(this.RecordType.Value) == PLANTYPE.CAR;\r\n  });\r\n\r\n  isSelfInitiated = ko.pureComputed(() => {\r\n    return ko.unwrap(this.SelfInitiated.Value) == \"Yes\";\r\n  });\r\n\r\n  isSelfInitiatedCAR = ko.pureComputed(() => {\r\n    return (\r\n      ko.unwrap(this.RecordType.Value) == PLANTYPE.CAR &&\r\n      ko.unwrap(this.SelfInitiated.Value) == \"Yes\"\r\n    );\r\n  });\r\n\r\n  sourceOptions = ko.pureComputed(() => {\r\n    let recordTypeSources = sourcesStore()?.filter(\r\n      (source) =>\r\n        source.RecordType.Value() == RECORDSOURCETYPES.BOTH ||\r\n        source.RecordType.Value() == this.RecordType.Value()\r\n    );\r\n\r\n    if (this.isSelfInitiatedCAR()) {\r\n      recordTypeSources = recordTypeSources.filter(\r\n        (source) => source.SelfInitiated.Value() == this.SelfInitiated.Value()\r\n      );\r\n    }\r\n\r\n    return recordTypeSources.map((source) => source.Title.toString());\r\n  });\r\n\r\n  Active = new CheckboxField({\r\n    displayName: \"Active\",\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Item #\",\r\n    isEditable: false,\r\n  });\r\n\r\n  // NEW FORM\r\n\r\n  RecordType = new SelectField({\r\n    displayName: \"Record Type\",\r\n    options: [\"CAR\", \"CAP\"],\r\n    isRequired: true,\r\n  });\r\n\r\n  Source = new SelectField({\r\n    displayName: \"Source\",\r\n    options: this.sourceOptions,\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  BusinessOffice = new LookupField({\r\n    displayName: \"Business Office\",\r\n    type: BusinessOffice,\r\n    options: businessOfficeStore,\r\n    appContext: () => appContext,\r\n    isRequired: true,\r\n  });\r\n\r\n  CGFSLocation = new SelectField({\r\n    displayName: \"Location\",\r\n    options: Object.values(LOCATION),\r\n    isRequired: true,\r\n  });\r\n\r\n  QSO = new PeopleField({\r\n    displayName: \"Quality Segment Owner\",\r\n    isRequired: true,\r\n  });\r\n\r\n  QSOName = new TextField({\r\n    displayName: \"QSO Name\",\r\n    isVisible: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  QAO = new PeopleField({\r\n    displayName: \"Quality Area Owner\",\r\n    isRequired: true,\r\n  });\r\n\r\n  QAOName = new TextField({\r\n    displayName: \"QAO Name\",\r\n    isVisible: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  Subject = new TextField({\r\n    displayName: \"Subject\",\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  // CAR\r\n\r\n  SelfInitiated = new SelectField({\r\n    displayName: \"Self Initiated\",\r\n    options: [\"Yes\", \"No\"],\r\n    defaultValue: \"Yes\",\r\n    instructions: \"Are you opening this on behalf of your own business office?\",\r\n    isRequired: this.isCAR,\r\n    isVisible: this.isCAR,\r\n  });\r\n\r\n  ProblemDescription = new TextAreaField({\r\n    displayName: \"Problem Description\",\r\n    isRequired: this.isCAR,\r\n    isVisible: this.isCAR,\r\n    classList: [\"min-w-full\"],\r\n    isRichText: true,\r\n  });\r\n\r\n  ContainmentAction = new TextAreaField({\r\n    displayName: \"Containment Action\",\r\n    isRequired: this.isSelfInitiatedCAR,\r\n    isVisible: this.isSelfInitiatedCAR,\r\n    classList: [\"min-w-full\"],\r\n    isRichText: true,\r\n  });\r\n\r\n  ContainmentActionDate = new DateField({\r\n    displayName: \"Containment Action Date\",\r\n    isRequired: this.isSelfInitiatedCAR,\r\n    isVisible: this.isSelfInitiatedCAR,\r\n    type: dateFieldTypes.date,\r\n  });\r\n\r\n  RootCauseDetermination = new TextAreaField({\r\n    displayName: \"Root Cause Determination\",\r\n  });\r\n  // CAP\r\n\r\n  OFIDescription = new TextAreaField({\r\n    displayName: \"Opportunity for Improvement\",\r\n    isRequired: this.isCAP,\r\n    isVisible: this.isCAP,\r\n    classList: [\"min-w-full\"],\r\n    isRichText: true,\r\n  });\r\n\r\n  DiscoveryDataAnalysis = new TextAreaField({\r\n    displayName: \"Data, Discovery, and Analysis\",\r\n    isRequired: this.isCAP,\r\n    isVisible: this.isCAP,\r\n    classList: [\"min-w-full\"],\r\n    isRichText: true,\r\n  });\r\n\r\n  // Other\r\n\r\n  SubmittedDate = new DateField({\r\n    displayName: \"Submitted On\",\r\n  });\r\n\r\n  ProcessStage = new SelectField({\r\n    displayName: \"Status\",\r\n  });\r\n\r\n  PreviousStage = new TextField({\r\n    displayName: \"Previous Stage\",\r\n    isVisible: false,\r\n    isEditable: false,\r\n  });\r\n\r\n  NextTargetDate = new DateField({\r\n    displayName: \"Next Target Date\",\r\n  });\r\n\r\n  ProblemResolverName = new PeopleField({\r\n    displayName: \"CAR/CAP Coordinator\",\r\n  });\r\n\r\n  CoordinatorName = new TextField({\r\n    displayName: \"CAR/CAP Coordinator Name\",\r\n    isVisible: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  CloseDate = new DateField({\r\n    displayName: \"Closed On\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  CancelReason = new TextAreaField({\r\n    displayName: \"Cancellation Reason\",\r\n    instructions: \"Please provide a reason for cancelling this plan.\",\r\n    isRichText: true,\r\n    classList: [\"min-w-full\"],\r\n    isRequired: true,\r\n  });\r\n\r\n  ExtensionCount = new TextField({\r\n    displayName: \"Extension Count\",\r\n  });\r\n\r\n  OfficeImpactBool = new CheckboxField({\r\n    displayName:\r\n      \"Has Impact on Office Risks, Mitigations, or Internal Controls\",\r\n  });\r\n\r\n  OfficeImpactDesc = new TextAreaField({\r\n    displayName: \"Office Impact Description\",\r\n  });\r\n\r\n  ImplementationTargetDate = new DateField({\r\n    displayName: \"Implementation Target Date\",\r\n  });\r\n\r\n  QSOImplementAdjudicationDate = new DateField({\r\n    displayName: \"QSO Implementation Adjudication Date\",\r\n  });\r\n\r\n  EffectivenessVerificationTargetD = new DateField({\r\n    displayName: \"Effectiveness Verification Target Date\",\r\n  });\r\n\r\n  EffectivenessDescription = new TextAreaField({\r\n    displayName: \"Effectiveness Description\",\r\n  });\r\n\r\n  Author = new PeopleField({\r\n    displayName: \"Submitted By\",\r\n  });\r\n\r\n  AuthorName = new TextField({\r\n    displayName: \"Submitted By Name\",\r\n    isVisible: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  flatten() {\r\n    const plan = this;\r\n    console.log(\"Flattening Plan: \", plan.Title.Value());\r\n\r\n    const coordinatorName = ko.unwrap(plan.ProblemResolverName.Value)?.Title;\r\n    plan.CoordinatorName.Value(coordinatorName);\r\n\r\n    const qaoName = ko.unwrap(plan.QAO.Value)?.Title;\r\n    plan.QAOName.Value(qaoName);\r\n\r\n    const qsoName = ko.unwrap(plan.QSO.Value)?.Title;\r\n    plan.QSOName.Value(qsoName);\r\n\r\n    const authorName = ko.unwrap(plan.Author.Value)?.Title;\r\n    plan.AuthorName.Value(authorName);\r\n  }\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"Active\",\r\n      \"RecordType\",\r\n      \"SelfInitiated\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QSOName\",\r\n      \"QAO\",\r\n      \"QAOName\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SubmittedDate\",\r\n      \"ProblemResolverName\",\r\n      \"CoordinatorName\",\r\n      \"Subject\",\r\n      \"SelfInitiated\",\r\n      \"Source\",\r\n      \"SimilarNoncomformityBool\",\r\n      \"SimilarNoncomformityDesc\",\r\n      \"RootCauseDetermination\",\r\n      \"ProcessStage\",\r\n      \"PreviousStage\",\r\n      \"NextTargetDate\",\r\n      \"ExtensionCount\",\r\n      \"ImplementationTargetDate\",\r\n      \"OfficeImpactBool\",\r\n      \"OfficeImpactDesc\",\r\n      \"QSOImplementAdjudicationDate\",\r\n      \"EffectivenessVerificationTargetD\",\r\n      \"EffectivenessDescription\",\r\n      \"CancelReason\",\r\n      \"CloseDate\",\r\n      \"Author\",\r\n      \"AuthorName\",\r\n    ],\r\n    View: [\r\n      \"Title\",\r\n      \"Active\",\r\n      \"RecordType\",\r\n      \"SelfInitiated\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSOName\",\r\n      \"QAOName\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SubmittedDate\",\r\n      \"CoordinatorName\",\r\n      \"Subject\",\r\n      \"SelfInitiated\",\r\n      \"Source\",\r\n      \"SimilarNoncomformityBool\",\r\n      \"SimilarNoncomformityDesc\",\r\n      \"ProcessStage\",\r\n      \"PreviousStage\",\r\n      \"NextTargetDate\",\r\n      \"AuthorName\",\r\n    ],\r\n    New: [\r\n      \"RecordType\",\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QAO\",\r\n      \"Subject\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SelfInitiated\",\r\n      \"ProblemDescription\",\r\n      \"ContainmentAction\",\r\n      \"ContainmentActionDate\",\r\n    ],\r\n    QTMEditForm: [\r\n      \"Title\",\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QAO\",\r\n      \"Subject\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SelfInitiated\",\r\n      \"ProblemDescription\",\r\n      \"ContainmentAction\",\r\n      \"ContainmentActionDate\",\r\n      \"ProblemResolverName\",\r\n    ],\r\n    QTMEditSubmit: [\r\n      \"Title\",\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QSOName\",\r\n      \"QAO\",\r\n      \"QAOName\",\r\n      \"Subject\",\r\n      \"OFIDescription\",\r\n      \"DiscoveryDataAnalysis\",\r\n      \"SelfInitiated\",\r\n      \"ProblemDescription\",\r\n      \"ContainmentAction\",\r\n      \"ContainmentActionDate\",\r\n      \"ProblemResolverName\",\r\n      \"CoordinatorName\",\r\n    ],\r\n    SubmitterEditForm: [\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QAO\",\r\n      \"ProblemDescription\",\r\n    ],\r\n    SubmitterEditSubmit: [\r\n      \"Source\",\r\n      \"BusinessOffice\",\r\n      \"CGFSLocation\",\r\n      \"QSO\",\r\n      \"QSOName\",\r\n      \"QAO\",\r\n      \"QAOName\",\r\n      \"ProblemDescription\",\r\n    ],\r\n    Cancel: [\"CancelReason\"],\r\n    CancelSubmit: [\r\n      \"Active\",\r\n      \"CancelReason\",\r\n      \"ProcessStage\",\r\n      \"CloseDate\",\r\n      \"PreviousStage\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"CAP_Main\",\r\n    title: \"CAP_Main\",\r\n  };\r\n}\r\n", "import { PeopleField, TextField } from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\nimport { LOCATION } from \"../constants.js\";\r\n\r\nexport class BusinessOffice extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n  });\r\n\r\n  QAO = new PeopleField({\r\n    displayName: \"Quality Area Ownew\",\r\n  });\r\n\r\n  QSO_Charleston = new PeopleField({\r\n    displayName: \"QSO Charleston\",\r\n  });\r\n\r\n  QSO_Bangkok = new PeopleField({\r\n    displayName: \"QSO Bangkok\",\r\n  });\r\n\r\n  QSO_Washington = new PeopleField({\r\n    displayName: \"QSO Washington\",\r\n  });\r\n\r\n  QSO_Paris = new PeopleField({\r\n    displayName: \"QSO Paris\",\r\n  });\r\n\r\n  QSO_Sofia = new PeopleField({\r\n    displayName: \"QSO Sofia\",\r\n  });\r\n\r\n  QSO_Manilla = new PeopleField({\r\n    displayName: \"QSO Manilla\",\r\n  });\r\n\r\n  getQSOByLocation(location) {\r\n    switch (location) {\r\n      case LOCATION.CHARLESTON:\r\n        return this.QSO_Charleston;\r\n      case LOCATION.BANGKOK:\r\n        return this.QSO_Bangkok;\r\n      case LOCATION.WASHINGTON:\r\n        return this.QSO_Washington;\r\n      case LOCATION.PARIS:\r\n        return this.QSO_Paris;\r\n      case LOCATION.SOFIA:\r\n        return this.QSO_Sofia;\r\n      case LOCATION.MANILA:\r\n        return this.QSO_Manilla;\r\n    }\r\n  }\r\n\r\n  // QSO_ = new PeopleField({\r\n  //     displayName: \"QSO \"\r\n  // })\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"QAO\",\r\n      \"QSO_Charleston\",\r\n      \"QSO_Bangkok\",\r\n      \"QSO_Washington\",\r\n      \"QSO_Paris\",\r\n      \"QSO_Sofia\",\r\n      \"QSO_Manila\",\r\n    ],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Business_Office\",\r\n    title: \"Business_Office\",\r\n  };\r\n}\r\n", "import {\r\n  DateField,\r\n  dateFieldTypes,\r\n  PeopleField,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class Notification extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Subject\",\r\n    isRequired: true,\r\n  });\r\n\r\n  To = new TextField({\r\n    displayName: \"To\",\r\n    isRequired: true,\r\n  });\r\n\r\n  CC = new TextField({\r\n    displayName: \"To\",\r\n    isRequired: true,\r\n  });\r\n\r\n  BCC = new TextField({\r\n    displayName: \"To\",\r\n    isRequired: true,\r\n  });\r\n\r\n  Subject = new TextField({\r\n    displayName: \"Subject\",\r\n    isRequired: true,\r\n  });\r\n\r\n  Body = new TextAreaField({\r\n    displayName: \"Body\",\r\n    isRequired: true,\r\n    isRichText: true,\r\n  });\r\n\r\n  Sent = new DateField({\r\n    displayName: \"Sent On\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  static FromTemplate({ title, to, cc = null, bcc = null, subject, body }) {\r\n    const notification = new Notification();\r\n    notification.Title.Value(title);\r\n    notification.To.Value(sanitizeEmails(to));\r\n    notification.CC.Value(sanitizeEmails(cc));\r\n    notification.BCC.Value(sanitizeEmails(bcc));\r\n    notification.Subject.Value(subject);\r\n    notification.Body.Value(body);\r\n    return notification;\r\n  }\r\n\r\n  static Views = {\r\n    All: [\"To\", \"CC\", \"BCC\", \"Title\", \"Subject\", \"Body\", \"Sent\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Notifications\",\r\n    title: \"Notifications\",\r\n  };\r\n}\r\n\r\nfunction sanitizeEmails(emails) {\r\n  if (!emails) return;\r\n  return [...new Set(emails.filter((n) => n))].join(\";\");\r\n}\r\n", "import { CheckboxField, SelectField, TextField } from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport const RECORDSOURCETYPES = { CAR: \"CAR\", CAP: \"CAP\", BOTH: \"BOTH\" };\r\n\r\nexport class RecordSource extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n  });\r\n\r\n  RecordType = new SelectField({\r\n    displayName: \"Record Type\",\r\n    options: Object.values(RECORDSOURCETYPES),\r\n  });\r\n\r\n  SelfInitiated = new CheckboxField({\r\n    displayName: \"Self Initiated\",\r\n  });\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"RecordType\", \"SelfInitiated\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Record_Sources\",\r\n    title: \"Record_Sources\",\r\n  };\r\n}\r\n", "import { EFFECTIVENESSREASONS } from \"../constants.js\";\r\nimport {\r\n  CheckboxField,\r\n  DateField,\r\n  dateFieldTypes,\r\n  SelectField,\r\n  TextAreaField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class Rejection extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  showEffectivenessReason = ko.pureComputed(() => {\r\n    return this.Stage.Value();\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Plan ID\",\r\n    isEditable: false,\r\n  });\r\n\r\n  RejectionId = new TextField({\r\n    displayName: \"Rejection ID\",\r\n    isEditable: false,\r\n  });\r\n\r\n  //   EffectivenessReason = new SelectField({\r\n  //     displayName: \"Effectiveness Deficiency\",\r\n  //     options: Object.values(EFFECTIVENESSREASONS)\r\n  //   })\r\n\r\n  Reason = new TextAreaField({\r\n    displayName: \"Rejection Reason\",\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  Stage = new TextField({\r\n    displayName: \"Stage\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Rejector = new TextField({\r\n    displayName: \"Rejected By\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Active = new CheckboxField({\r\n    displayName: \"Active\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Created = new DateField({\r\n    displayName: \"Rejected On\",\r\n    type: dateFieldTypes.datetime,\r\n    isEditable: false,\r\n  });\r\n\r\n  Modified = new DateField({\r\n    displayName: \"Modified On\",\r\n    type: dateFieldTypes.datetime,\r\n    isEditable: false,\r\n  });\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Title\",\r\n      \"RejectionId\",\r\n      \"Reason\",\r\n      \"Stage\",\r\n      \"Rejector\",\r\n      \"Active\",\r\n      \"Created\",\r\n      \"Modified\",\r\n    ],\r\n    New: [\"Title\", \"RejectionId\", \"Reason\", \"Stage\", \"Rejector\", \"Active\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Rejections\",\r\n    title: \"Rejections\",\r\n  };\r\n}\r\n", "import { TextAreaField, TextField } from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class RootCauseWhy extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Number = new TextField({\r\n    displayName: \"Number\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Question = new TextAreaField({\r\n    displayName: \"Question\",\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  Answer = new TextAreaField({\r\n    displayName: \"Answer\",\r\n    isRequired: true,\r\n    classList: [\"min-w-full\"],\r\n  });\r\n\r\n  static Views = {\r\n    All: [\"ID\", \"Title\", \"Number\", \"Question\", \"Answer\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"Root_Cause_Why\",\r\n    title: \"Root_Cause_Why\",\r\n  };\r\n}\r\n", "import { SUPPORTINGDOCUMENTTYPES } from \"../constants.js\";\r\nimport {\r\n  DateField,\r\n  dateFieldTypes,\r\n  PeopleField,\r\n  SelectField,\r\n  TextField,\r\n} from \"../sal/fields/index.js\";\r\nimport { ConstrainedEntity } from \"../sal/primitives/index.js\";\r\n\r\nexport class SupportingDocument extends ConstrainedEntity {\r\n  constructor(params) {\r\n    super(params);\r\n  }\r\n\r\n  Record = new TextField({\r\n    displayName: \"Plan Number\",\r\n    isEditable: false,\r\n  });\r\n\r\n  Title = new TextField({\r\n    displayName: \"Title\",\r\n  });\r\n\r\n  FileName = new TextField({\r\n    displayName: \"Name\",\r\n    systemName: \"FileLeafRef\",\r\n  });\r\n\r\n  DocType = new SelectField({\r\n    displayName: \"Document Type\",\r\n    options: Object.values(SUPPORTINGDOCUMENTTYPES),\r\n    isRequired: true,\r\n    isEditable: false,\r\n  });\r\n\r\n  FileRef = new TextField({\r\n    displayName: \"File Link\",\r\n    systemName: \"FileRef\",\r\n  });\r\n\r\n  Modified = new DateField({\r\n    displayName: \"Modified\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  Editor = new PeopleField({\r\n    displayName: \"Modified By\",\r\n  });\r\n\r\n  Created = new DateField({\r\n    displayName: \"Created\",\r\n    type: dateFieldTypes.datetime,\r\n  });\r\n\r\n  Author = new PeopleField({\r\n    displayName: \"Created By\",\r\n  });\r\n\r\n  static Views = {\r\n    All: [\r\n      \"ID\",\r\n      \"Record\",\r\n      \"Title\",\r\n      \"FileLeafRef\",\r\n      \"DocType\",\r\n      \"FileRef\",\r\n      \"Modified\",\r\n      \"Editor\",\r\n      \"Created\",\r\n      \"Author\",\r\n    ],\r\n    Edit: [\"Record\", \"Title\", \"FileLeafRef\", \"DocType\"],\r\n  };\r\n\r\n  static ListDef = {\r\n    name: \"SupportDocumentLibrary\",\r\n    title: \"SupportDocumentLibrary\",\r\n    isLib: true,\r\n  };\r\n}\r\n", "export class Result {\r\n  constructor(value) {\r\n    this.value = value;\r\n  }\r\n\r\n  value;\r\n  error;\r\n\r\n  get isSuccess() {\r\n    return !this.error;\r\n  }\r\n\r\n  get isFailure() {\r\n    return !this.isSuccess;\r\n  }\r\n\r\n  static Success(value) {\r\n    return new Result(value);\r\n  }\r\n\r\n  static Failure(error) {\r\n    const result = new Result();\r\n    result.error = error;\r\n  }\r\n}\r\n", "import { SitePage } from \"./entities/index.js\";\r\nimport { SPList, copyFileAsync, ensurePerson } from \"./infrastructure/index.js\";\r\nimport { Result } from \"./shared/index.js\";\r\n\r\nconst DEBUG = false;\r\n\r\nexport class DbContext {\r\n  constructor() {}\r\n\r\n  SitePages = new EntitySet(SitePage);\r\n\r\n  utilities = {\r\n    copyFileAsync,\r\n    ensurePerson,\r\n  };\r\n\r\n  _virtualSets = new Map();\r\n\r\n  Set = (entityType) => {\r\n    const key = entityType.ListDef.name;\r\n\r\n    // If we have a defined entityset, return that\r\n    const set = Object.values(this)\r\n      .filter((val) => val.constructor.name == EntitySet.name)\r\n      .find((set) => set.ListDef?.name == key);\r\n    if (set) return set;\r\n\r\n    if (!this._virtualSets.has(key)) {\r\n      const newSet = new EntitySet(entityType);\r\n      this._virtualSets.set(key, newSet);\r\n      return newSet;\r\n    }\r\n    return this._virtualSets.get(key);\r\n  };\r\n}\r\n\r\nexport class CachedEntitySet {\r\n  constructor(entityType) {\r\n    this.entitySet = new EntitySet(entityType);\r\n\r\n    this.AllDeclaredFields = this.entitySet.AllDeclaredFields;\r\n  }\r\n  _cache = ko.observable({});\r\n\r\n  FindById = async (id, fields = this.AllDeclaredFields) => {};\r\n}\r\n\r\nexport class EntitySet {\r\n  constructor(entityType) {\r\n    if (!entityType.ListDef) {\r\n      console.error(\"Missing entityType listdef for\", entityType);\r\n      return;\r\n    }\r\n\r\n    // Check if the object we passed in defines a ListDef\r\n    this.entityType = entityType;\r\n\r\n    try {\r\n      const allFieldsSet = new Set();\r\n      entityType.Views?.All?.map((field) => allFieldsSet.add(field));\r\n\r\n      // TODO: this is bombing due to circular dependencies,\r\n      // all fields need to be in View\r\n      const newEntity = new this.entityType();\r\n      if (newEntity.FieldMap) {\r\n        Object.keys(newEntity.FieldMap).map((field) => allFieldsSet.add(field));\r\n      }\r\n      // const fieldMapKeysSet = new Set(...);\r\n      // entityType.Views.All.map((field) => fieldMapKeysSet.add(field));\r\n      this.AllDeclaredFields = [...allFieldsSet];\r\n    } catch (e) {\r\n      console.warn(\"Could not instantiate\", entityType), console.warn(e);\r\n      this.AllDeclaredFields = entityType.Views?.All ?? [];\r\n    }\r\n\r\n    this.ListDef = entityType.ListDef;\r\n    this.Views = entityType.Views;\r\n    this.Title = entityType.ListDef.title;\r\n    this.Name = entityType.ListDef.name;\r\n\r\n    this.ListRef = new SPList(entityType.ListDef);\r\n\r\n    this.entityConstructor =\r\n      this.entityType.FindInStore || this.entityType.Create || this.entityType;\r\n  }\r\n\r\n  // Queries\r\n  FindById = async (id, fields = this.AllDeclaredFields) => {\r\n    // Hit our cache first\r\n\r\n    const result = await this.ListRef.getById(id, fields);\r\n    if (!result) return null;\r\n    const newEntity = new this.entityType(result);\r\n    mapObjectToEntity(result, newEntity);\r\n    return newEntity;\r\n  };\r\n\r\n  FindByTitle = async (title, fields = this.AllDeclaredFields) => {\r\n    // Hit our cache first\r\n\r\n    const result = await this.FindByColumnValue(\r\n      [{ column: \"Title\", value: title }],\r\n      {},\r\n      {},\r\n      fields\r\n    );\r\n\r\n    return result;\r\n  };\r\n\r\n  // TODO: Feature - Queries should return options to read e.g. toList, first, toCursor\r\n  /**\r\n   * Takes an array of columns and filter values with an optional comparison operator\r\n   * @param {[{column, op?, value}]} columnFilters\r\n   * @param {*} param1\r\n   * @param {*} param2\r\n   * @param {*} fields\r\n   * @param {*} includeFolders\r\n   * @returns\r\n   */\r\n  FindByColumnValue = async (\r\n    columnFilters,\r\n    { orderByColumn, sortAsc },\r\n    { count = null, includePermissions = false, includeFolders = false },\r\n    fields = this.AllDeclaredFields\r\n  ) => {\r\n    // if we pass in a count, we are expecting a cursor result\r\n    const returnCursor = count != null;\r\n    count = count ?? 5000;\r\n    // else, we should apply a count of 5000 and keep fetching\r\n\r\n    const results = await this.ListRef.findByColumnValueAsync(\r\n      columnFilters,\r\n      { orderByColumn, sortAsc },\r\n      { count, includePermissions, includeFolders },\r\n      fields\r\n    );\r\n\r\n    let cursor = {\r\n      _next: results._next,\r\n      results: results.results.map((item) => {\r\n        const newEntity = new this.entityConstructor(item);\r\n        mapObjectToEntity(item, newEntity);\r\n        return newEntity;\r\n      }),\r\n    };\r\n\r\n    if (returnCursor) {\r\n      return cursor;\r\n    }\r\n\r\n    const resultObj = {\r\n      results: cursor.results,\r\n    };\r\n\r\n    while (cursor._next) {\r\n      cursor = await this.LoadNextPage(cursor);\r\n      resultObj.results = resultObj.results.concat(cursor.results);\r\n    }\r\n\r\n    return resultObj;\r\n  };\r\n\r\n  LoadNextPage = async (cursor) => {\r\n    const results = await this.ListRef.loadNextPage(cursor);\r\n    return {\r\n      _next: results._next,\r\n      results: results.results.map((item) => {\r\n        const newEntity = new this.entityType(item);\r\n        mapObjectToEntity(item, newEntity);\r\n        return newEntity;\r\n      }),\r\n    };\r\n  };\r\n\r\n  /**\r\n   * Return all items in list\r\n   */\r\n  ToList = async (refresh = false) => {\r\n    const fields = this.Views.All;\r\n    const results = await this.ListRef.getListItemsAsync({ fields });\r\n    const allItems = results.map((item) => {\r\n      let entityToLoad = new this.entityType(item);\r\n      mapObjectToEntity(item, entityToLoad);\r\n      return entityToLoad;\r\n    });\r\n    return allItems;\r\n  };\r\n\r\n  LoadEntity = async function (entity, refresh = false) {\r\n    if (!entity.ID) {\r\n      console.error(\"entity missing Id\", entity);\r\n      return false;\r\n    }\r\n\r\n    const result = await this.ListRef.getById(\r\n      entity.ID,\r\n      this.AllDeclaredFields\r\n    );\r\n    if (!result) return null;\r\n\r\n    mapObjectToEntity(result, entity);\r\n    return entity;\r\n  };\r\n\r\n  // Mutators\r\n  AddEntity = async function (entity, folderPath) {\r\n    const creationfunc = mapEntityToObject.bind(this);\r\n    const writeableEntity = creationfunc(entity, this.AllDeclaredFields);\r\n\r\n    if (DEBUG) console.log(writeableEntity);\r\n    const newId = await this.ListRef.createListItemAsync(\r\n      writeableEntity,\r\n      folderPath\r\n    );\r\n    mapObjectToEntity({ ID: newId }, entity);\r\n    return Result.Success(entity);\r\n  };\r\n\r\n  UpdateEntity = async function (entity, fields = null) {\r\n    const writeableEntity = mapEntityToObject.bind(this)(entity, fields);\r\n    writeableEntity.ID =\r\n      typeof entity.ID == \"function\" ? entity.ID() : entity.ID;\r\n    if (DEBUG) console.log(writeableEntity);\r\n    const result = await this.ListRef.updateListItemAsync(writeableEntity);\r\n    return Result.Success(result);\r\n  };\r\n\r\n  RemoveEntity = async function (entity) {\r\n    if (!entity.ID) return false;\r\n    await this.ListRef.deleteListItemAsync(entity.ID);\r\n    return true;\r\n  };\r\n\r\n  RemoveEntityById = function (entityId) {\r\n    return this.ListRef.deleteListItemAsync(entityId);\r\n  };\r\n\r\n  // Permissions\r\n  GetItemPermissions = function (entity) {\r\n    return this.ListRef.getItemPermissionsAsync(entity.ID);\r\n  };\r\n\r\n  SetItemPermissions = async function (entity, valuePairs, reset = false) {\r\n    // const salValuePairs = valuePairs\r\n    //   .filter((vp) => vp[0] && vp[1])\r\n    //   .map((vp) => [vp[0].getKey(), vp[1]]);\r\n    return this.ListRef.setItemPermissionsAsync(entity.ID, valuePairs, reset);\r\n  };\r\n\r\n  GetRootPermissions = function () {\r\n    return this.ListRef.getListPermissions();\r\n  };\r\n\r\n  SetRootPermissions = async function (itemPermissions, reset) {\r\n    // const valuePairs = itemPermissions.getValuePairs();\r\n    await this.ListRef.setListPermissionsAsync(itemPermissions, reset);\r\n  };\r\n\r\n  // Folder Methods\r\n  GetFolderUrl = function (relFolderPath = \"\") {\r\n    return this.ListRef.getServerRelativeFolderPath(relFolderPath);\r\n  };\r\n\r\n  GetItemsByFolderPath = async function (\r\n    folderPath,\r\n    fields = this.AllDeclaredFields\r\n  ) {\r\n    //return this.ListRef.getFolderContentsAsync(folderPath, fields);\r\n    const results = await this.ListRef.getFolderContentsAsync(\r\n      folderPath,\r\n      fields\r\n    );\r\n    return results.map((result) => {\r\n      const newEntity = new this.entityType(result);\r\n      mapObjectToEntity(result, newEntity);\r\n      return newEntity;\r\n    });\r\n  };\r\n\r\n  UpsertFolderPath = async function (folderPath) {\r\n    return this.ListRef.upsertFolderPathAsync(folderPath);\r\n  };\r\n\r\n  RemoveFolderByPath = async function (folderPath) {\r\n    const itemResults = await this.FindByColumnValue(\r\n      [{ column: \"FileLeafRef\", value: folderPath }],\r\n      {},\r\n      {},\r\n      [\"ID\", \"Title\", \"FileLeafRef\"],\r\n      true\r\n    );\r\n    const entities = itemResults.results ?? [];\r\n    for (const entity of entities) {\r\n      await this.RemoveEntityById(entity.ID);\r\n    }\r\n  };\r\n\r\n  // Permissions\r\n  SetFolderReadOnly = async function (relFolderPath) {\r\n    return this.ListRef.setFolderReadonlyAsync(relFolderPath);\r\n  };\r\n\r\n  SetFolderPermissions = async function (folderPath, valuePairs, reset = true) {\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].getKey(), vp[1]]);\r\n    return this.ListRef.setFolderPermissionsAsync(\r\n      folderPath,\r\n      salValuePairs,\r\n      reset\r\n    );\r\n  };\r\n\r\n  EnsureFolderPermissions = async function (relFolderPath, valuePairs) {\r\n    // Slightly more expensive operation to verify a user has the required permissions\r\n    // before adding them. This will cut down on the number of unique permissions in the\r\n    // system since a user may already have the permission via group membership.\r\n    const salValuePairs = valuePairs\r\n      .filter((vp) => vp[0] && vp[1])\r\n      .map((vp) => [vp[0].LoginName ?? vp[0].Title, vp[1]]);\r\n    return this.ListRef.ensureFolderPermissionsAsync(\r\n      relFolderPath,\r\n      salValuePairs\r\n    );\r\n  };\r\n\r\n  // Other Functions\r\n  // Upload file directly from browser \"File\" object e.g. from input field\r\n  UploadFileWithEntity = async function ({\r\n    file,\r\n    entity,\r\n    view,\r\n    folderPath,\r\n    progress,\r\n  }) {\r\n    const filename = entity.FileName.Value();\r\n    const updates = mapEntityToObject.bind(this)(\r\n      entity,\r\n      view ?? this.AllDeclaredFields\r\n    );\r\n\r\n    const itemId = await this.ListRef.uploadFileToFolderAndUpdateMetadata(\r\n      file,\r\n      filename,\r\n      folderPath,\r\n      updates,\r\n      progress\r\n    );\r\n\r\n    await this.LoadEntity(entity);\r\n\r\n    return Result.Success(entity);\r\n  };\r\n\r\n  UploadFileToFolderAndUpdateMetadata = async function (\r\n    file,\r\n    filename,\r\n    folderPath,\r\n    updates,\r\n    progress\r\n  ) {\r\n    const itemId = await this.ListRef.uploadFileToFolderAndUpdateMetadata(\r\n      file,\r\n      filename,\r\n      folderPath,\r\n      updates,\r\n      progress\r\n    );\r\n    const item = await this.ListRef.getById(itemId, this.AllDeclaredFields);\r\n    const newEntity = new this.entityConstructor(item);\r\n    mapObjectToEntity(item, newEntity);\r\n    return newEntity;\r\n  };\r\n\r\n  // Open file upload Modal\r\n  UploadNewDocument = async function (folderPath, args) {\r\n    return this.ListRef.uploadNewDocumentAsync(\r\n      folderPath,\r\n      \"Attach a New Document\",\r\n      args\r\n    );\r\n  };\r\n\r\n  CopyFolderContents = async function (sourceFolder, targetFolder) {\r\n    return this.ListRef.copyFilesAsync(sourceFolder, targetFolder);\r\n  };\r\n\r\n  // Form Methods\r\n  ShowForm = async function (name, title, args) {\r\n    return new Promise((resolve, reject) =>\r\n      this.ListRef.showModal(name, title, args, resolve)\r\n    );\r\n  };\r\n\r\n  CheckInDocument = async function (fileRef) {\r\n    return new Promise((resolve) =>\r\n      this.ListRef.showCheckinModal(fileRef, resolve)\r\n    );\r\n  };\r\n\r\n  EnsureList = async function () {};\r\n}\r\n\r\nfunction mapObjectToEntity(inputObject, targetEntity) {\r\n  if (DEBUG)\r\n    console.log(\r\n      `ApplicationDBContext: ${targetEntity.constructor.name}: `,\r\n      inputObject\r\n    );\r\n  if (!inputObject || !targetEntity) return;\r\n  // Takes an object and attempts to map it to the target entity\r\n  Object.keys(inputObject).forEach((key) => {\r\n    mapValueToEntityProperty(key, inputObject[key], targetEntity);\r\n  });\r\n}\r\n\r\nfunction mapValueToEntityProperty(propertyName, inputValue, targetEntity) {\r\n  if (DEBUG)\r\n    console.log(\r\n      `ApplicationDBContext: ${targetEntity.constructor.name}.${propertyName} to ${inputValue}`\r\n    );\r\n  //1. Check if the targetEntity has a fieldmapping for this property\r\n  if (targetEntity.FieldMap && targetEntity.FieldMap[propertyName]) {\r\n    mapObjectToViewField(inputValue, targetEntity.FieldMap[propertyName]);\r\n    return;\r\n  }\r\n  // 2. This is just a regular property, set it\r\n  if (\r\n    targetEntity[propertyName] &&\r\n    typeof targetEntity[propertyName] == \"function\"\r\n  ) {\r\n    targetEntity[propertyName](inputValue);\r\n    return;\r\n  }\r\n  targetEntity[propertyName] = inputValue;\r\n  return;\r\n}\r\n\r\nfunction mapObjectToViewField(inVal, fieldMapping) {\r\n  // Fieldmap has Three options for setting,\r\n  // 1. observable - the fieldmap represents an observable\r\n  // 2. setter - the fieldmap exposes a setter\r\n  // 3. factory/obs - the fieldmap exposes a factory and an observable to put the result.\r\n\r\n  if (typeof fieldMapping == \"function\") {\r\n    fieldMapping(inVal);\r\n    return;\r\n  }\r\n\r\n  if (typeof fieldMapping != \"object\") {\r\n    fieldMapping = inVal;\r\n    return;\r\n  }\r\n\r\n  if (fieldMapping.set && typeof fieldMapping.set == \"function\") {\r\n    fieldMapping.set(inVal);\r\n    return;\r\n  }\r\n\r\n  if (fieldMapping.obs) {\r\n    if (!inVal) {\r\n      fieldMapping.obs(null);\r\n      return;\r\n    }\r\n    // If the input value is an array, then we are putting an array into the observable.\r\n    const outVal = Array.isArray(inVal)\r\n      ? inVal.map((item) => generateObject(item, fieldMapping))\r\n      : generateObject(inVal, fieldMapping);\r\n\r\n    fieldMapping.obs(outVal);\r\n    return;\r\n  }\r\n\r\n  fieldMapping = inVal;\r\n  //throw \"Error setting fieldmap?\";\r\n}\r\n\r\nfunction generateObject(inVal, fieldMap) {\r\n  // If the fieldMap provides a factory, use that, otherwise return the value\r\n  return fieldMap.factory ? fieldMap.factory(inVal) : inVal;\r\n}\r\n\r\nexport function mapEntityToObject(input, selectedFields = null) {\r\n  const entity = {};\r\n  // We either predefine the fields in the ListDef, or provide a complete fieldmap\r\n  const allWriteableFieldsSet = new Set([]);\r\n  if (this?.ListDef?.fields) {\r\n    this.ListDef.fields.forEach((field) => allWriteableFieldsSet.add(field));\r\n  }\r\n  if (this?.AllDeclaredFields) {\r\n    this.AllDeclaredFields.map((field) => allWriteableFieldsSet.add(field));\r\n  }\r\n  if (input.FieldMap) {\r\n    Object.keys(input.FieldMap).forEach((field) =>\r\n      allWriteableFieldsSet.add(field)\r\n    );\r\n  }\r\n  const allWriteableFields = [...allWriteableFieldsSet];\r\n\r\n  const fields =\r\n    selectedFields ??\r\n    (input.FieldMap ? Object.keys(input.FieldMap) : null) ??\r\n    Object.keys(input);\r\n\r\n  fields\r\n    .filter((field) => allWriteableFields.includes(field))\r\n    .map((field) => {\r\n      if (input.FieldMap && input.FieldMap[field]) {\r\n        const storedFieldKey = input.FieldMap[field].systemName ?? field;\r\n        entity[storedFieldKey] = mapViewFieldToValue(input.FieldMap[field]);\r\n        return;\r\n      }\r\n      entity[field] = input[field];\r\n    });\r\n\r\n  return entity;\r\n}\r\n\r\nfunction mapViewFieldToValue(fieldMap) {\r\n  // Fieldmap has Three options for getting,\r\n  // 1. observable - the fieldmap represents an observable or other function that returns a value\r\n  // 2. get - the fieldmap is an object that exposes a getter function\r\n  // 3. factory/obs - the fieldmap is an object exposes a factory and an observable.\r\n  if (typeof fieldMap == \"function\") {\r\n    return fieldMap();\r\n  }\r\n  if (fieldMap.get && typeof fieldMap.get == \"function\") {\r\n    return fieldMap.get();\r\n  }\r\n\r\n  if (fieldMap.obs) {\r\n    return fieldMap.obs();\r\n  }\r\n\r\n  return fieldMap;\r\n\r\n  // console.error(\"Error setting fieldMap\", fieldMap);\r\n  // throw \"Error getting fieldmap\";\r\n}\r\n", "import {\r\n  Action,\r\n  BusinessOffice,\r\n  Notification,\r\n  Plan,\r\n  RecordSource,\r\n  Rejection,\r\n  RootCauseWhy,\r\n  SupportingDocument,\r\n} from \"../entities/index.js\";\r\nimport { EntitySet, DbContext } from \"../sal/index.js\";\r\n\r\nclass ApplicationDbContext extends DbContext {\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  Actions = new EntitySet(Action);\r\n\r\n  BusinessOffices = new EntitySet(BusinessOffice);\r\n\r\n  Notifications = new EntitySet(Notification);\r\n\r\n  Plans = new EntitySet(Plan);\r\n\r\n  RecordSources = new EntitySet(RecordSource);\r\n\r\n  Rejections = new EntitySet(Rejection);\r\n\r\n  RootCauseWhys = new EntitySet(RootCauseWhy);\r\n\r\n  SupportingDocuments = new EntitySet(SupportingDocument);\r\n}\r\n\r\nexport const appContext = new ApplicationDbContext();\r\n", "import { appContext } from \"../../infrastructure/app-db-context.js\";\r\nimport { InitSal } from \"../../sal/infrastructure/index.js\";\r\nimport {\r\n  businessOfficeStore,\r\n  sourcesStore,\r\n} from \"../../infrastructure/store.js\";\r\n\r\nasync function flattenPlan(plan) {\r\n  console.log(\"Flattening Plan: \", plan.Title.Value());\r\n\r\n  const coordinatorName = ko.unwrap(plan.ProblemResolverName.Value)?.Title;\r\n  plan.CoordinatorName.Value(coordinatorName);\r\n\r\n  const qaoName = ko.unwrap(plan.QAO.Value)?.Title;\r\n  plan.QAOName.Value(qaoName);\r\n\r\n  const qsoName = ko.unwrap(plan.QSO.Value)?.Title;\r\n  plan.QSOName.Value(qsoName);\r\n\r\n  const authorName = ko.unwrap(plan.Author.Value)?.Title;\r\n  plan.AuthorName.Value(authorName);\r\n\r\n  const result = await appContext.Plans.UpdateEntity(plan, [\r\n    \"CoordinatorName\",\r\n    \"QSOName\",\r\n    \"QAOName\",\r\n    \"AuthorName\",\r\n  ]);\r\n\r\n  console.log(\"Flattened Plan: \", plan.Title.Value(), result);\r\n}\r\n\r\nclass App {\r\n  constructor() {}\r\n\r\n  async clickMigrate() {\r\n    console.log(\"fetching plans\");\r\n    const allPlans = await appContext.Plans.FindByColumnValue(\r\n      [{ column: \"AuthorName\", value: null }],\r\n      {},\r\n      {}\r\n    );\r\n\r\n    console.log(`Migrating ${allPlans.results.length} Records`);\r\n    await Promise.all(allPlans.results.map(flattenPlan));\r\n  }\r\n\r\n  async init() {\r\n    stores: {\r\n      const businessOfficesPromise =\r\n        await appContext.BusinessOffices.ToList().then(businessOfficeStore);\r\n\r\n      const recordSourcesPromise = await appContext.RecordSources.ToList().then(\r\n        sourcesStore\r\n      );\r\n\r\n      await Promise.all([businessOfficeStore, recordSourcesPromise]);\r\n    }\r\n  }\r\n\r\n  static async Create() {\r\n    const app = new App();\r\n    await app.init();\r\n    return app;\r\n  }\r\n}\r\n\r\nasync function initApp() {\r\n  await InitSal();\r\n  const vm = await App.Create();\r\n  ko.applyBindings(vm);\r\n}\r\n\r\nif (document.readyState === \"ready\" || document.readyState === \"complete\") {\r\n  initApp();\r\n} else {\r\n  document.onreadystatechange = () => {\r\n    if (document.readyState === \"complete\" || document.readyState === \"ready\") {\r\n      ExecuteOrDelayUntilScriptLoaded(function () {\r\n        SP.SOD.executeFunc(\"sp.js\", \"SP.ClientContext\", initApp);\r\n      }, \"sp.js\");\r\n    }\r\n  };\r\n}\r\n"],
  "mappings": "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",
  "names": ["ValidationError", "ValidationError", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "editTemplate", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "data", "editTemplate", "html", "editTemplate", "html", "viewTemplate", "editTemplate", "html", "appContext", "reject", "entity", "People", "i", "People", "error", "module", "html", "reject", "oRoleDefinitions", "reject", "oRoleDefinition", "siteGroups", "oRoleDefinition", "data", "oGroup", "reject", "reject", "group", "data", "currCtx", "web", "self", "id", "bindings", "oListItem", "folderArr", "idx", "folderUrl", "success", "args", "reject", "error", "People", "location", "error", "set", "id", "reject", "vm"]
}
